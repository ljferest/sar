{"url": "https://es.wikipedia.org/wiki/Licencia_de_software", "title": "Licencia de software", "summary": "Busca fuentes: \u00abLicencia de software\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\n[\n]\nUna licencia de software es un contrato entre el licenciante (autor/titular de los derechos de explotaci\u00f3n/distribuci\u00f3n) y el licenciatario[2]\u200b (usuario consumidor,  profesional o empresa) del programa inform\u00e1tico, para utilizarlo cumpliendo una serie de t\u00e9rminos y condiciones establecidas dentro de sus cl\u00e1usulas,[3]\u200b es decir, es un conjunto de permisos que un desarrollador le puede otorgar a un usuario en los que tiene la posibilidad de distribuir, usar o modificar el producto bajo una licencia determinada. Adem\u00e1s se suelen definir los plazos de duraci\u00f3n, el territorio donde se aplica la licencia (ya que la licencia se soporta en las leyes particulares de cada pa\u00eds o regi\u00f3n), entre otros.[4]\u200b\nLas licencias de software pueden establecer entre otras cosas: la cesi\u00f3n de determinados derechos del propietario al usuario final sobre una o varias copias del programa inform\u00e1tico, los l\u00edmites en la responsabilidad por fallos, el plazo de cesi\u00f3n de los derechos, el \u00e1mbito geogr\u00e1fico de validez del contrato[5]\u200b e incluso pueden establecer determinados compromisos del usuario final hacia el propietario, tales como la no cesi\u00f3n del programa a terceros o la no reinstalaci\u00f3n del programa en equipos distintos al que se instal\u00f3 originalmente.", "sections": [{"name": "Partes de una licencia de software", "text": "", "subsections": [{"name": "Elementos personales de una licencia de software", "text": "Licenciante\nEl licenciante o proveedor-licenciante es aquel que provee el software m\u00e1s la licencia al licenciatario, la cual, le permitir\u00e1 a este \u00faltimo tener ciertos derechos sobre el software. El rol de licenciante lo puede ejercer cualquiera de los siguientes actores:\nAutor: el o conjunto de desarrolladores que crea el software son por antonomasia quienes en una primera instancia poseen el rol de licenciante al ser los titulares originales del software.\nTitular de los derechos de explotaci\u00f3n: es la persona natural o jur\u00eddica que recibe una cesi\u00f3n de los derechos de explotaci\u00f3n de forma exclusiva del software desde un tercero, transform\u00e1ndolo en titular derivado y licenciantes del software.\nDistribuidor: es la persona jur\u00eddica a la cual se le otorga el derecho de distribuci\u00f3n y la posibilidad de generar sublicencias del software mediante la firma de un contrato de distribuci\u00f3n con el titular de los derechos de explotaci\u00f3n y producto.\nGarant\u00eda de titularidad\nEs la garant\u00eda ofrecida por el licenciante o propietario, en la cual, asegura que cuenta con suficientes derechos de explotaci\u00f3n sobre el software como para permitirle proveer una licencia al licenciatario.\nLicenciatario\nEl licenciatario o usuario-licenciatario es aquella persona f\u00edsica o jur\u00eddica que se le permite ejercer el derecho de uso m\u00e1s alg\u00fan otro derecho de explotaci\u00f3n sobre un determinado software cumpliendo las condiciones establecidas por la licencia otorgada por el licenciante.\nUsuario consumidor: persona natural que recibe una licencia de software otorgada por el licenciante, la cual, se encuentra en una posici\u00f3n desventajosa ante los t\u00e9rminos y condiciones establecidas en ella.\nUsuario profesional o empresa: persona natural o jur\u00eddica que recibe una licencia de software otorgada por el licenciante, la cual, se encuentra en igualdad de condiciones ante el licenciante para ejercer sus derechos y deberes ante los t\u00e9rminos y condiciones establecidos en la licencia."}, {"name": "Elementos objetivos de una licencia de software", "text": "Plazo\nEl plazo determina la duraci\u00f3n en el tiempo durante la cual se mantienen vigentes los t\u00e9rminos y condiciones establecidos en licencia. Las licencias sobre la base de sus plazos se pueden clasificar en:[5]\u200b\nLicencias con plazo espec\u00edfico.\nLicencias de plazo indefinido.\nLicencias sin plazo.\nPrecio\nEl precio determina el valor el cual debe ser pagado por el licenciatario al licenciante por el concepto de la cesi\u00f3n de derechos establecidos en la licencia.[5]\u200b"}]}, {"name": "Clasificaci\u00f3n de las licencias de software en la actulidad", "text": "", "subsections": [{"name": "Seg\u00fan los derechos que cada autor se reserva sobre su obra", "text": "Licencia de software de c\u00f3digo abierto permisivas[6]\u200b\nSe puede crear una obra derivada sin que esta tenga obligaci\u00f3n de protecci\u00f3n alguna. Muchas licencias pertenecen a esta clase, entre otras: \nAcademic Free License v.1.2.\nApache Software License v.1.1\nArtistic License v.2.0\nAttribution Assurance license.\nBSD License.\nMIT License.\nUniversity of Illinois/NCSA Open Source License.\nW3C Software Notice and License.\nZope Public License v.2.0\nOpen LDAP License v.2.7\nPerl License.\nAcademic Free License v.3.0\nPHP License v.3.0\nVMS License.\nLicencia de software de c\u00f3digo abierto robustas\nEstas licencias aplican algunas restricciones a las obras derivadas, haciendo que seg\u00fan el grado de aplicaci\u00f3n se puedan dividir a su vez en dos subcategor\u00edas:\nLicencias de software de c\u00f3digo abierto robustas fuertes\nLas licencias de software de c\u00f3digo abierto robustas fuertes o con copyleft fuerte, contienen una cl\u00e1usula que obliga a que las obras derivadas o modificaciones que se realicen al software original se deban licenciar bajo los mismos t\u00e9rminos y condiciones de la licencia original.\nEntre las licencias de esta categor\u00eda est\u00e1n: \nCommon Public License v.1.0.\nGNU General Public License v.2.0.\nGNU General Public License v.3.0.\nEclipse Public License.\neCos License v.2.0\nSleepycat Software Product License.\nAffero License v.1.0\nAffero License v.2.0\nOpenSSL License.\nLicencias de software de c\u00f3digo abierto robustas d\u00e9biles\nLas licencias de software de c\u00f3digo abierto robustas d\u00e9biles, con copyleft d\u00e9bil/suave o h\u00edbridas, contienen una cl\u00e1usula que obliga a que las modificaciones que se realicen al software original se deban licenciar bajo los mismos t\u00e9rminos y condiciones de la licencia original, pero que las obras derivadas que se puedan realizar de \u00e9l puedan ser licenciadas bajo otros t\u00e9rminos y condiciones distintas.\nGNU\n Lesser General Public License v.2.1.\nMozilla Public License\nOpen Source License.\nApple Source License v.2.0\nCDDL.\nEUPL.\nLicencia de software de c\u00f3digo cerrado\nEstas licencias tambi\u00e9n se conocen con el nombre de \u00absoftware propietario\u00bb o privativo. En ellas los propietarios establecen los derechos de uso, distribuci\u00f3n, redistribuci\u00f3n,ventas, copia, modificaci\u00f3n, cesi\u00f3n y en general cualquier otra consideraci\u00f3n que se estime necesaria.\nEste tipo de licencias, por lo general, no permiten que el software sea modificado, desensamblado, copiado o distribuido de formas no especificadas en la propia licencia (pirater\u00eda de software), regula el n\u00famero de copias que pueden ser instaladas e incluso los fines concretos para los cuales puede ser utilizado. La mayor\u00eda de estas licencias limitan fuertemente la responsabilidad derivada de fallos en el programa.\nLos fabricantes de programas sometidos a este tipo de licencias por lo general ofrecen servicios de soporte t\u00e9cnico y actualizaciones durante el tiempo de vida del producto.\nHay escenarios en que el fabricante del programa es, a la vez, proveedor de la licencia, de actualizaciones y del soporte t\u00e9cnico, sin posibilidad de tercerizaci\u00f3n, lo que le permite mantener cautivo al usuario.[7]\u200b\nAlgunos ejemplos de este tipo de licencias son las llamadas  acuerdo de licencia de usuario final (ALUF), tambi\u00e9n llamado en algunos pa\u00edses contrato de licencia de usuario final (CLUF). En el mundo anglosaj\u00f3n se llama end-user license agreement (EULA), pero los contratos en espa\u00f1ol deben recoger el t\u00e9rmino en espa\u00f1ol.\nSoftware de dominio p\u00fablico (sin licencia)\nSe permite uso, copia, modificaci\u00f3n o redistribuci\u00f3n con o sin fines de lucro."}, {"name": "Seg\u00fan su destinatario", "text": "Licencia de usuario final\nEl acuerdo de licencia de usuario final (ALUF) es una licencia por la cual el uso de un producto solo est\u00e1 permitido para un \u00fanico usuario (el comprador).\nEn este tipo de contrato, el due\u00f1o de los derechos de un producto insta al usuario final de este a que reconozca tener conocimiento de las restricciones de uso, de los derechos del autor, de las patentes, etc., y que acepte de conformidad.\nEl conocimiento del contenido de los contratos es dif\u00edcil antes de la compra del producto ya que las cajas de los productos raramente contienen una copia completa del mismo, d\u00e1ndose que el comprador en la mayor parte de las ocasiones conoce su contenido despu\u00e9s de la compra.\nEn ocasiones se exige al usuario el renunciar a realizar reclamos o demandas legales por diversos motivos (tales como posibles da\u00f1os producidos por el producto o fallos en \u00e9l) o aceptar la restituci\u00f3n de la mercanc\u00eda en la forma y monto que la compa\u00f1\u00eda decida.\nEste tipo de acuerdo expresa los usos que se pueden dar y cu\u00e1les no al producto, ya que quien lo compra no es, legalmente, en ninguna forma due\u00f1o del producto, sino solo de una licencia para su uso, consider\u00e1ndose esto \u00faltimo por algunas personas como una limitaci\u00f3n a los derechos del consumidor\nEste tipo de acuerdos son unilaterales pues el usuario no tiene m\u00e1s opci\u00f3n que aceptar o rechazar el contenido del mismo (en algunos pa\u00edses existen organizaciones de protecci\u00f3n al consumidor que autorizan ciertas excepciones).\nLicencia de distribuidores\nEn este tipo de contrato, se le asigna derechos restringidos a un mayorista para que venda el producto software a terceros dando una remesa o comisi\u00f3n al fabricante. La misma puede ser por primera venta o licencia de renovaci\u00f3n de contrato. No se trata de una licencia de uso en t\u00e9rminos jur\u00eddicos, sino m\u00e1s bien en un acuerdo comercial en el que no tiene por qu\u00e9 ser cedido el derecho de distribuci\u00f3n necesariamente. Puede darse el caso de simple actividad comercial en la que el distribuidor ni siquiera tenga contacto con el software, y este como elemento y la licencia de uso en s\u00ed sea directamente suscrita y puesta a disposici\u00f3n por parte del fabricante. Encarg\u00e1ndose el distribuidor del correspondiente cobro al usuario y pago al fabricante menos su comisi\u00f3n."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Software libre\nC\u00f3digo abierto\nComparaci\u00f3n de licencias de software libre\nSoftware de c\u00f3digo cerrado\nCopyleft\nDerecho de autor", "subsections": []}, {"name": "Referencias", "text": "\u2191 Larry Troan (2005). \u00abOpen Source from a Proprietary Perspective\u00bb (pdf). RedHat Summit 2006 Nashville. redhat.com. p.\u00a010. Archivado desde el original el 6 de marzo de 2016. Consultado el 29 de diciembre de 2015.\u00a0\n\u2191 Informatica-Hoy. \u00abTipos de licencia de Software\u00bb. Consultado el 20 de abril de 2016.\u00a0\n\u2191 Ram\u00f3n M. G\u00f3mez Labrador (septiembre de 2005). TIPOS DE LICENCIAS DE SOFTWARE. 1. Consultado el 20 de abril de 2016.\u00a0\n\u2191 Alegsa. \u00abDefinici\u00f3n de Licencia de software\u00bb. http://www.alegsa.com.ar. Consultado el 21 de abril de 2016.\u00a0\n\u2191 a b c Software Do It. \u00abQu\u00e9 es una Licencia\u00bb. Consultado el 20 de abril de 2016.\u00a0\n\u2191 \u00abWayback Machine\u00bb. web.archive.org. 6 de marzo de 2016. Archivado desde el original el 6 de marzo de 2016. Consultado el 12 de abril de 2023.\u00a0\n\u2191 \u00abLicencias cautivas\u00bb. Maravento. Consultado el 9 de abril de 2024.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Lisp", "title": "Lisp", "summary": "Lisp (hist\u00f3ricamente LISP) es una familia de lenguajes de programaci\u00f3n de computadora de tipo multiparadigma con larga historia y una inconfundible y \u00fatil sintaxis homoic\u00f3nica basada en la notaci\u00f3n polaca.\nDesarrollado originalmente en 1959 por John McCarthy y sus colaboradores en el Instituto Tecnol\u00f3gico de Massachusetts, Lisp es el segundo lenguaje de programaci\u00f3n de alto nivel de mayor antig\u00fcedad; apareci\u00f3 un a\u00f1o despu\u00e9s de FORTRAN y uno antes que COBOL.\nAl igual que COBOL y FORTRAN, Lisp ha cambiado mucho desde sus comienzos, y han existido un gran n\u00famero de dialectos en su historia. Hoy, los dialectos de Lisp m\u00e1s ampliamente usados son Scheme (1975), Common Lisp (1984), Emacs Lisp (1985) y Clojure (2007).\nLisp fue creado originalmente como una notaci\u00f3n matem\u00e1tica pr\u00e1ctica para los programas de computadora, basada en el c\u00e1lculo lambda de Alonzo Church. Se convirti\u00f3 r\u00e1pidamente en el lenguaje de programaci\u00f3n favorito en la investigaci\u00f3n de la inteligencia artificial (AI). Como lenguajes de programaci\u00f3n precursor, Lisp fue pionero en muchas ideas en ciencias de la computaci\u00f3n, incluyendo las estructuras de datos de \u00e1rbol, el manejo de almacenamiento autom\u00e1tico, tipos din\u00e1micos, y el compilador auto contenido.\nEl acr\u00f3nimo LISP significa \"LISt Processor\" ('Procesamiento de listas'). Las listas encadenadas son una de las estructuras de datos importantes de Lisp, y el c\u00f3digo fuente de Lisp en s\u00ed mismo est\u00e1 compuesto de listas. Como resultado, los programas de Lisp pueden manipular c\u00f3digo fuente de Lisp como si fueran simples datos, dando lugar a sistemas de macros que permiten a los programadores crear lenguajes de dominio espec\u00edfico embebidos en Lisp.\nLa intercambiabilidad del c\u00f3digo y los datos tambi\u00e9n da a Lisp su instant\u00e1neamente reconocible sintaxis. Todo el c\u00f3digo del programa es escrito como expresiones S, o listas entre par\u00e9ntesis. Una llamada de funci\u00f3n o una forma sint\u00e1ctica es escrita como una lista, con la funci\u00f3n o el nombre del operador en primer lugar, y los argumentos a continuaci\u00f3n; por ejemplo, una funci\u00f3n f que toma tres argumentos puede ser llamada usando (f x y z).", "sections": [{"name": "Historia", "text": "Lisp fue inventado por John McCarthy en 1958 mientras estaba en el Instituto Tecnol\u00f3gico de Massachusetts (MIT). McCarthy public\u00f3 su dise\u00f1o en 1960 en un art\u00edculo de Communications of the ACM titulado \"Funciones recursivas de expresiones simb\u00f3licas y su c\u00f3mputo a m\u00e1quina, Parte I\"[1]\u200b (la \"parte II\" nunca fue publicada). All\u00ed mostr\u00f3 que con algunos operadores simples y una notaci\u00f3n para las funciones, uno puede construir un lenguaje Turing completo para procesamiento de algoritmos.\nDesde 1955 o 1956, el Information Processing Language fue el primer lenguaje de AI, y ya hab\u00eda incluido muchos de los conceptos, tales como proceso por lista y recursi\u00f3n, que vinieron a ser usados en Lisp.\nLa notaci\u00f3n original de McCarthy usaba \"expresiones M\" en corchetes que ser\u00edan traducidas a expresiones S. Como un ejemplo, la expresi\u00f3n M car[cons[A,B]] es equivalente a la expresi\u00f3n S (car (cons A B)). Una vez que Lisp fue implementado, los programadores r\u00e1pidamente eligieron usar expresiones S, y las expresiones M fueron abandonadas. las expresiones M emergieron otra vez con los intentos ef\u00edmeros del MLISP[2]\u200b de Horace Enea y el CGOL de Vaughan Pratt.\nLisp fue implementado primero por Steve Russell en un computador IBM 704. Russell hab\u00eda le\u00eddo el art\u00edculo de McCarthy, y se dio cuenta (para la sorpresa de McCarthy) que la funci\u00f3n eval de Lisp pod\u00eda ser implementada en c\u00f3digo de m\u00e1quina. El resultado fue un int\u00e9rprete de Lisp funcional que pod\u00eda ser usado para correr programas Lisp, o m\u00e1s correctamente, \"evaluar expresiones Lisp\".\nDos rutinas de lenguaje ensamblador para el IBM 704 se convirtieron en las operaciones primitivas para descomponer listas: car (contenido del registro de direcci\u00f3n) y cdr (contenido del registro del decremento). Los dialectos de Lisp todav\u00eda usan el car y cdr (pronunciado /\u02c8k\u0251r/ y /\u02c8k\u028ad\u0259r/) para las operaciones que retornan el primer elemento y el resto de la lista respectivamente.\nEl primer compilador completo de Lisp, escrito en Lisp, fue implementado en 1962 por Tim Hart y Mike Levin en el MIT.[3]\u200b Este compilador introdujo el modelo Lisp de compilaci\u00f3n incremental, en el cual las funciones compiladas e interpretadas pueden entremezclarse libremente. El lenguaje en los memos de Hart y Levin es mucho m\u00e1s cercano al estilo moderno de Lisp que el anterior c\u00f3digo de McCarthy.", "subsections": [{"name": "Genealog\u00eda y variantes", "text": "Sobre su historia de cincuenta a\u00f1os, Lisp ha producido muchas variaciones en el tema base de un lenguaje de expresi\u00f3n S. Por otra parte, cada dialecto dado puede tener varias implementaciones, por ejemplo, hay m\u00e1s de una docena de implementaciones del Common Lisp.\nLas diferencias entre los dialectos pueden ser muy visibles, por ejemplo, el Common Lisp y el Scheme usan diferentes palabras clave para definir funciones. Dentro de un dialecto que est\u00e1 estandarizado, sin embargo, las implementaciones conformadas soportan el mismo lenguaje base, pero con diferentes extensiones y bibliotecas."}, {"name": "Relaci\u00f3n con la inteligencia artificial", "text": "Desde su inicio, Lisp estaba estrechamente relacionado con la comunidad de investigaci\u00f3n de la inteligencia artificial, especialmente en sistemas PDP-10.[4]\u200b Fue usado como la implementaci\u00f3n del lenguaje de programaci\u00f3n Micro Planner que fue la fundaci\u00f3n para el famoso sistema de AI SHRDLU. En los a\u00f1os 1970, a medida que la investigaci\u00f3n del AI engendr\u00f3 descendientes comerciales, el desempe\u00f1o de los sistemas Lisp existentes se convirti\u00f3 en un problema creciente.\nLisp era un sistema dif\u00edcil de implementar con las t\u00e9cnicas de compilador y hardware com\u00fan de los a\u00f1os 1970. Las rutinas de recolecci\u00f3n de basura, desarrolladas por el entonces estudiante graduado del MIT, Daniel Edwards, hicieron pr\u00e1ctico correr Lisp en sistemas de computaci\u00f3n de prop\u00f3sito general, pero la eficacia todav\u00eda segu\u00eda siendo un problema. Esto llev\u00f3 a la creaci\u00f3n de las m\u00e1quinas Lisp: hardware dedicado para correr ambientes y programas Lisp. Avances tanto en el hardware de computadora como en la tecnolog\u00eda de compiladores pronto hicieron obsoletas a las m\u00e1quinas de Lisp, en detrimento del mercado de Lisp.\nDurante los a\u00f1os 1980 y 1990, fue hecho un gran esfuerzo para unificar los numerosos dialectos de Lisp en un solo lenguaje (m\u00e1s notablemente, InterLisp, Maclisp, ZetaLisp, MetaLisp, y Franz Lisp). El nuevo lenguaje, Common Lisp, fue esencialmente un subconjunto compatible de los dialectos que reemplaz\u00f3. En 1994, la ANSI public\u00f3 el est\u00e1ndar del Common Lisp, \"ANSI X3.226-1994 Information Technology Programming Language Common Lisp\". En aquel momento el mercado mundial para Lisp era mucho m\u00e1s peque\u00f1o de lo que es hoy.[cita\u00a0requerida]"}, {"name": "Desde el a\u00f1o 2000", "text": "Habiendo declinado algo en los a\u00f1os noventa, Lisp experiment\u00f3 un nuevo auge enfocado en las implementaciones abiertas de Common Lisp y en el desarrollo de aplicaciones y de nuevas bibliotecas port\u00e1tiles. Una muestra de este inter\u00e9s fue el que la versi\u00f3n impresa de Practical Common Lisp (Common Lisp Pr\u00e1ctico) de Peter Seibel, un tutorial para nuevos programadores publicado en 2004,[5]\u200b estuviese brevemente en Amazon.com como el segundo libro de programaci\u00f3n m\u00e1s popular. El libro es accesible en l\u00ednea sin costo.[6]\u200b\nMuchos nuevos programadores de Lisp fueron inspirados por escritores como Paul Graham y Eric S. Raymond luchando por un lenguaje que otros consideran anticuado. Los nuevos programadores de Lisp frecuentemente describen el lenguaje como una experiencia que abre los ojos y afirman que es sustancialmente m\u00e1s productivo que otros lenguajes.[7]\u200b Este aumento de conciencia puede ser contrastado con el \"invierno de la inteligencia artificial\" y el breve crecimiento de Lisp a mediados de los 1990.[8]\u200b\nEn su encuesta de las implementaciones del Common Lisp, Dan Weinreb lista once implementaciones activamente mantenidas. Scieneer Common Lisp es una nueva implementaci\u00f3n comercial que bifurc\u00f3 (fork) del CMUCL con un primer lanzamiento en 2002.\nLa comunidad del c\u00f3digo libre ha creado la nueva infraestructura de soporte: Cliki es un Wiki que recoge la informaci\u00f3n relacionada con Common Lisp, el Common Lisp directory lista recursos, el #lisp es un canal popular de IRC (con soporte por un Bot escrito en Lisp), lisppaste Archivado el 9 de junio de 2021 en Wayback Machine. soporta la distribuci\u00f3n y el intercambio y comentario de retazos de c\u00f3digo (snippets), el Planet Lisp recoge el contenido de varios blogs relacionados con Lisp, en el LispForum el usuario discute asuntos referentes a Lisp, Lispjobs es un servicio para anunciar ofertas de trabajo y hay un nuevo servicio de noticias semanales (Weekly Lisp News).\nHan sido celebrados los 50 a\u00f1os del Lisp (1958-2008) en LISP50@OOPSLA. Hay varias reuniones de usuario locales regulares (Boston, Vancouver, Hamburg,\u2026), Reuniones Lisp (European Common Lisp Meeting, European Lisp Symposium) y una International Lisp Conference.\nLa comunidad Scheme mantiene activamente m\u00e1s de veinte implementaciones. Se han desarrollado en los \u00faltimos a\u00f1os varias significativas nuevas implementaciones (Chicken, Gauche, Ikarus, Larceny, Ypsilon). El est\u00e1ndar de Scheme Revised5 Report on the Algorithmic Language Scheme fue ampliamente aceptado en la comunidad del Scheme. El proceso Scheme Requests for Implementation ha creado muchas bibliotecas y extensiones casi est\u00e1ndares para el Scheme. Las comunidades de usuario de implementaciones individuales del Scheme contin\u00faan creciendo. En 2003 un nuevo proceso de estandarizaci\u00f3n del lenguaje fue comenzada y condujo al est\u00e1ndar R6RS del Scheme en 2007. El uso acad\u00e9mico del Scheme para ense\u00f1ar ciencias de la computaci\u00f3n parece haber declinado algo. Algunas universidades ya no est\u00e1n usando Scheme en sus cursos preliminares de ciencias de la computaci\u00f3n.\nHay tambi\u00e9n algunos nuevos dialectos Lisp. Notablemente: Newlisp (un lenguaje de scripting), Arc (desarrollado por Paul Graham) y recientemente Clojure (desarrollado por Rich Hickey) y NU para la programaci\u00f3n con Cocoa de Apple."}]}, {"name": "Dialectos importantes", "text": "Los dos principales dialectos de Lisp usados para la programaci\u00f3n de prop\u00f3sitos generales hoy en d\u00eda son Common Lisp y Scheme. Estos lenguajes representan opciones de dise\u00f1o significativamente diferentes.\nEl Common Lisp, descendiente principalmente de MacLisp, Interlisp, y Lisp Machine Lisp, es un superconjunto ampliado de los primeros dialectos del Lisp, con un est\u00e1ndar de lenguaje grande incluyendo muchos tipos de datos y formas sint\u00e1cticas incorporados, as\u00ed como un sistema del objeto. El Scheme es un dise\u00f1o m\u00e1s minimalista, con un mucho m\u00e1s peque\u00f1o conjunto de caracter\u00edsticas est\u00e1ndar pero con ciertas caracter\u00edsticas de implementaci\u00f3n (tales como optimizaci\u00f3n de llamada de cola y continuaci\u00f3n completa) no encontradas necesariamente en Common Lisp. El Common Lisp tambi\u00e9n tom\u00f3 prestadas ciertas caracter\u00edsticas de Scheme tales como \u00e1mbito de l\u00e9xico y clausura l\u00e9xica.\nEl Scheme, es un dialecto del lenguaje Lisp con \u00e1mbito est\u00e1tico y cola recursiva aut\u00e9ntica inventado por Guy Lewis Steele Jr. y Gerald Jay Sussman. Fue dise\u00f1ado para tener una sem\u00e1ntica excepcionalmente clara y simple y pocas maneras diferentes de formar expresiones. Una amplia variedad de paradigmas programados encuentran una expresi\u00f3n conveniente en Scheme, incluyendo los estilos imperativo, funcional, y paso de mensajes. El Scheme contin\u00faa evolucionando con una serie de los est\u00e1ndares (Revisedn Report on the Algorithmic Language Scheme) y una serie de Scheme Requests for Implementation.\nAdem\u00e1s, los dialectos de Lisp son usados como lenguajes de scripting en un n\u00famero de aplicaciones, con los m\u00e1s conocidos siendo el Emacs Lisp en el editor de Emacs, Visual Lisp en AutoCAD, Nyquist en Audacity.", "subsections": []}, {"name": "Innovaciones del lenguaje", "text": "Fue en Lisp donde nacieron muchas ideas de las ciencias de la computaci\u00f3n, incluyendo la estructura de dato de \u00e1rbol, recolecci\u00f3n autom\u00e1tica de basura, tipado din\u00e1mico, condicionales, funciones de orden superior como map y reduce, recursividad, el compilador autocontenido y el REPL.[9]\u200b[10]\u200b\nLisp fue el primer lenguaje de programaci\u00f3n homoic\u00f3nico: todo el c\u00f3digo fuente del programa es al mismo tiempo una estructura de datos del lenguaje (listas anidadas o \u00e1rboles). Como resultado la metaprogramaci\u00f3n en Lisp es relativamente sencilla. Ya que el c\u00f3digo fuente de Lisp tiene una correspondencia directa con el \u00e1rbol sint\u00e1ctico abstracto del programa, se puede crear c\u00f3digo de Lisp para manipular m\u00e1s c\u00f3digo de Lisp, o a\u00fan crearlo desde cero, sin necesidad de un extensivo an\u00e1lisis sint\u00e1ctico (parsing) o manipulaci\u00f3n de c\u00f3digo de m\u00e1quina binario. Esto generalmente es considerado una de las ventajas primarias del lenguaje con respecto a su poder expresivo, y hace al lenguaje favorable a la evaluaci\u00f3n metacircular.\nLa ubicua estructura IF THEN ELSE, ahora admitida como un elemento esencial de cualquier lenguaje de programaci\u00f3n, fue inventada por McCarthy para el uso en Lisp, donde vio su primera apariencia en una forma m\u00e1s general (la estructura cond). Fue heredada por el ALGOL, que la populariz\u00f3.\nLisp influy\u00f3 profundamente a [[del Smalltalk, y entonces a su vez Lisp fue influenciado por Smalltalk, adoptando las caracter\u00edsticas de la programaci\u00f3n orientada a objetos (clases, instancias, etc.) a finales de los a\u00f1os 1970.\nLisp introdujo el concepto de recolecci\u00f3n de basura, mediante el cual el sistema busca en el \"heap\" de memoria din\u00e1mica para eliminar objetos obsoletos sin intervenci\u00f3n expl\u00edcita del programador.[11]\u200b\nEn gran parte debido a sus requerimientos de recursos con respecto al temprano hardware computacional (incluyendo los primeros microprocesadores), Lisp no se hizo tan popular fuera de la comunidad de inteligencia artificial, como lo fueron el FORTRAN y el descendiente del lenguaje ALGOL, el lenguaje C. Lenguajes m\u00e1s nuevos como Java y Python han incorporado algunas versiones limitadas de algunas de las caracter\u00edsticas de Lisp, pero no pueden necesariamente brindar la coherencia y la sinergia de los conceptos completos encontrados en Lisp. Debido a su conveniencia para aplicaciones mal definidas, complejas, y din\u00e1micas, Lisp est\u00e1n disfrutando actualmente de un cierto resurgimiento del inter\u00e9s popular.", "subsections": []}, {"name": "Listas", "text": "El elemento fundamental en Lisp es la lista, en el sentido m\u00e1s amplio del t\u00e9rmino, pues tanto los datos como los programas son listas. De ah\u00ed viene su nombre, pues Lisp es un acr\u00f3nimo de \"ListProcessing\".\nLas listas en LISP est\u00e1n delimitadas por par\u00e9ntesis. De aqu\u00ed viene el chiste del significado de LISP: \"LostInStupidParentheses\" que aunque con buen humor es completamente ficticio.\nAlgunas de las funciones predefinidas de Lisp tienen s\u00edmbolos familiares (+ para la suma, * para el producto), pero otras son m\u00e1s ex\u00f3ticas, especialmente dos que sirven precisamente para manipular listas, descomponi\u00e9ndolas en sus componentes. Sus nombres (\"car\" y \"cdr\") son un poco extra\u00f1os, reliquias de tiempos pasados y de la estructura de los ordenadores de segunda generaci\u00f3n, \"car\" devuelve la cabeza de una lista y \"cdr\" su cola o resto.\nLisp sigue una filosof\u00eda de tratamiento no-destructivo de los par\u00e1metros, de modo que la mayor\u00eda de las funciones devuelven una lista resultado de efectuar alguna transformaci\u00f3n sobre la que recibieron, pero sin alterar esta \u00faltima.\nUno de los motivos por los que Lisp es especialmente adecuado para la IA es el hecho de que el c\u00f3digo y los datos tengan el mismo tratamiento (como listas); esto hace especialmente sencillo escribir programas capaces de escribir otros programas seg\u00fan las circunstancias.\nLisp fue uno de los primeros lenguajes de programaci\u00f3n en incluir manejo de excepciones con las primitivas catch y throw.\nDerivado de Lisp es el lenguaje de programaci\u00f3n Logo. Sin entrar en detalles, podr\u00eda decirse que Logo es Lisp sin par\u00e9ntesis y con operadores aritm\u00e9ticos infijos.", "subsections": []}, {"name": "Or\u00edgenes de \"car\" y \"cdr\"", "text": "Art\u00edculo principal:\ncar: Content of Address part of Register\ncdr: Content of Decremental part of Register\nSon operaciones del conjunto de instrucciones del IBM 704", "subsections": []}, {"name": "Ejemplos", "text": "", "subsections": [{"name": "Hola mundo", "text": "(\nformat\n \nt\n\"\u00a1Hola, mundo!\"\n)\nTrabajando con listas\n*******************************************************************\nDefinici\u00f3n\nde\nla\nfunci\u00f3n:\n  \ndefun\nvacia\nl\n    \ncond\n((\nnull\n1\n; si la lista esta vac\u00eda devuelve 1\n          \n0\n)))\n         \n; en otro caso (lista llena) devuelve 0\nLlamada\na\n'\n3\n4\n))\n        \n; La lista no esta vac\u00eda, devolver\u00eda 0\n())\n             \n; La lista esta vac\u00eda, devolver\u00eda 1\n\u00faltimo\nlista\ncdr\ncar\n)))))\n2\n5\n6\n7\n; devuelve el \u00faltimo de la lista: 7\n; Factorial(x) = 1 si x=0 caso base\n; x*factorial(x-1) si x>0 caso recursivo\n;Funci\u00f3n factorial hecha con recursividad no final\nfactorial\nn\n   \nif\n=\n     \n                            \n; caso base\n*\n-\n; caso recursivo\n;esto nos devolver\u00eda 24=4*3*2*1"}, {"name": "Grandes valores de la Funci\u00f3n de Ackermann", "text": ";Propuesta por Nikolai Coica\nackermann\nm\n\"The Ackermann Function\"\n+\n8\nexpt\n))))\n                  \n))))))))"}]}, {"name": "Referencias", "text": "\u2191 John McCarthy. \u00abRecursive Functions of Symbolic Expressions and Their Computation by Machine, Part I\u00bb. Consultado el 21 de enero de 2021.\u00a0\n\u2191 David Canfield Smith. \u00abMLISP Users Manual\u00bb. Archivado desde el original el 24 de septiembre de 2006. Consultado el 13 de octubre de 2006.\u00a0\n\u2191 Tim Hart and Mike Levin. \u00abAI Memo 39-The new compiler\u00bb. Archivado desde el original el 13 de diciembre de 2020. Consultado el 6 de julio de 2017.\u00a0\n\u2191 The 36-bit word size of the PDP-6/PDP-10 was influenced by the usefulness of having two Lisp 18-bit pointers in a single word. Lum Johnson (18 de octubre de 1990). \u00abThe History of TOPS or Life in the Fast ACs\u00bb. alt.folklore.computers. 84950@tut.cis.ohio-state.edu. \u00abThe PDP-6 project started in early 1963, as a 24-bit machine. It grew to 36 bits for LISP, a design goal.\u00bb\u00a0\n\u2191 \u00abPractical Common Lisp going into 3rd printing\u00bb. Archivado desde el original el 20 de junio de 2009. Consultado el 19 de septiembre de 2009.\u00a0\n\u2191 Practical Common Lisp\n\u2191 \u00abThe Road To Lisp Survey\u00bb. Archivado desde el original el 4 de octubre de 2006. Consultado el 13 de octubre de 2006.\u00a0\n\u2191 \u00abTrends for the Future\u00bb. Archivado desde el original el 3 de junio de 2013. Consultado el 19 de septiembre de 2009.\u00a0\n\u2191 Chisnall, David (12 de enero de 2011). Influential Programming Languages, Part 4: Lisp. Consultado el 22 de mayo de 2020.\u00a0\n\u2191 \u00abRevenge of the Nerds\u00bb. www.paulgraham.com. Consultado el 22 de mayo de 2020.\u00a0\n\u2191 LiebermanHenry; HewittCarl (1 de junio de 1983). \u00abA real-time garbage collector based on the lifetimes of objects\u00bb. Communications of the ACM (en ingl\u00e9s). doi:10.1145/358141.358147. Consultado el 22 de mayo de 2020.\u00a0", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Inteligencia artificial\nCommon Lisp\nScheme\nMaxima", "subsections": []}, {"name": "Enlaces externos", "text": " Wikilibros alberga un libro o manual sobre Programaci\u00f3n en LISP.\nFeatures of Common Lisp Una discusi\u00f3n de algunas de las caracter\u00edsticas m\u00e1s sobresalientes del lenguaje.\nRecursos Lisp en espa\u00f1ol Archivado el 16 de enero de 2018 en Wayback Machine. Textos en espa\u00f1ol y traducciones sobre Lisp, Common Lisp, Emacs Lisp, etc.\nPractical Common Lisp Libro introductorio de Common Lisp. Versi\u00f3n en l\u00ednea y distribuible por la propia editorial.\nThe Nature of Lisp. Una introducci\u00f3n para entender la naturaleza del lenguaje y su poder.", "subsections": [{"name": "Aplicaciones en Lisp", "text": "Entre las m\u00e1s exitosas aplicaciones escritas en Lisp se pueden mencionar:\nEmacs, el editor de texto http://www.gnu.org/software/emacs/emacs.html\nACL2, el demostrador de teoremas http://www.cs.utexas.edu/users/moore/acl2/\nMaxima, el sistema de \u00e1lgebra computacional http://maxima.sourceforge.net/"}, {"name": "Compiladores de Lisp", "text": "GNU Common Lisp, software libre\nAllegro Common Lisp, software propietario\nCMU Common Lisp, software libre\nCLISP, Una implementaci\u00f3n de Common Lisp, software libre\nOpenMCL Archivado el 5 de marzo de 2018 en Wayback Machine. Common lisp para Macintosh, software lib"}]}]}
{"url": "https://es.wikipedia.org/wiki/Log4j", "title": "Log4j", "summary": "Log4j es una biblioteca de c\u00f3digo abierto desarrollada en Java por la Apache Software Foundation que permite a los desarrolladores de software escribir mensajes de registro, cuyo prop\u00f3sito es dejar constancia de una determinada transacci\u00f3n en tiempo de ejecuci\u00f3n. Log4j permite filtrar los mensajes en funci\u00f3n de su importancia. La configuraci\u00f3n de salida y granularidad de los mensajes es realizada en tiempo de ejecuci\u00f3n mediante el uso de archivos de configuraci\u00f3n externos. Log4J ha sido implementado en otros lenguajes como C, C++, C#, Perl, Python, Ruby y Eiffel.", "sections": [{"name": "Historia", "text": "Log4j es un proyecto de la Apache Software Foundation que fue escrito por Ceki G\u00fclc\u00fc. Log4j es uno de los varios Java Logging Frameworks existentes.\nG\u00fclc\u00fc ha comenzado los proyectos SLF4J y Logback,[1]\u200b con la intenci\u00f3n de ofrecer un sucesor a log4j.", "subsections": []}, {"name": "Conceptos", "text": "", "subsections": [{"name": "Niveles de prioridad de los mensajes", "text": "Por defecto Log4J tiene seis niveles de prioridad para los mensajes: trace, debug, info, warn, error y fatal. Adem\u00e1s existen otros dos niveles extras, all y off.\nNiveles de prioridad (de menor a mayor):\nOFF: este es el nivel de m\u00ednimo detalle, deshabilita todos los logs.\nFATAL: se utiliza para mensajes cr\u00edticos del sistema, generalmente despu\u00e9s de guardar el mensaje el programa abortar\u00e1.\nERROR: se utiliza en mensajes de error de la aplicaci\u00f3n que se desea guardar, estos eventos afectan al programa pero lo dejan seguir funcionando, como por ejemplo que alg\u00fan par\u00e1metro de configuraci\u00f3n no es correcto y se carga el par\u00e1metro por defecto.\nWARN: se utiliza para mensajes de alerta sobre eventos que se desea mantener constancia, pero que no afectan al correcto funcionamiento del programa.\nINFO: se utiliza para mensajes similares al modo \"verbose\" en otras aplicaciones.\nDEBUG: se utiliza para escribir mensajes de depuraci\u00f3n. Este nivel no debe estar activado cuando la aplicaci\u00f3n se encuentre en producci\u00f3n.\nTRACE: se utiliza para mostrar mensajes con un mayor nivel de detalle que debug.\nALL: este es el nivel de m\u00e1ximo detalle, habilita todos los logs (en general equivale a TRACE)."}, {"name": "Anexos", "text": "En Log4J los mensajes son enviados a una (o varias) salida de destino, lo que se denomina un appender.\nExisten varios appenders disponibles y configurados, aunque tambi\u00e9n podemos crear y configurar nuestros propios appenders.\nT\u00edpicamente la salida de los mensajes es redirigida a un fichero de texto .log (FileAppender, RollingFileAppender), a un servidor remoto donde almacenar registros (SocketAppender), a una direcci\u00f3n de correo electr\u00f3nico (SMTPAppender), e incluso en una base de datos (JDBCAppender).\nCasi nunca es utilizado en un entorno de producci\u00f3n la salida a la consola (ConsoleAppender) ya que perder\u00eda gran parte de la utilidad de Log4J."}, {"name": "Disposiciones", "text": "Permite presentar el mensaje con el formato necesario para almacenarlo simplemente en un archivo de texto de extensi\u00f3n \u00ab.log\u00bb (SimpleLayout y PatternLayout), en una tabla HTML (HTMLLayout), o en un archivo XML (XMLLayout).\nAdem\u00e1s se puede a\u00f1adir informaci\u00f3n extra al mensaje, como la fecha en que se gener\u00f3, la clase que lo gener\u00f3 o el nivel que posee, entre otro, por cada paso"}]}, {"name": "Configuraci\u00f3n", "text": "La API es totalmente configurable, ya que se realiza mediante un archivo en formato XML o en formato Java Properties (clave=valor), generalmente llamado log4j.properties.\nEn el siguiente ejemplo implementamos un fichero properties de configuraci\u00f3n, y configuramos dos registros.\nCONSOLE imprimir\u00e1 los mensajes en la consola por l\u00edneas (%m%n).\nLOGFILE a\u00f1adir\u00e1 los mensajes a un fichero (aplicaci\u00f3n.log), reservando los primeros 4 caracteres para los milisegundos en que se gener\u00f3 el mensaje (%-4r), entre corchetes qui\u00e9n gener\u00f3 el mensaje ( [%t]), cinco espacios para la prioridad del mensaje (%-5p), la categor\u00eda del mensaje (%c) y finalmente el propio mensaje junto con un retorno de carro (%m%n).", "subsections": []}, {"name": "Uso", "text": "Para utilizarlo debemos por supuesto importar las clases que necesitamos de Log4J en nuestro c\u00f3digo.\nA continuaci\u00f3n debemos definir una variable est\u00e1tica del tipo org.apache.log4j.Logger con el nombre de la clase que va a escribir en el registro.\nFinalmente debemos configurar el objeto Logger. \nPodemos utilizar la configuraci\u00f3n b\u00e1sica, invocamos el m\u00e9todo org.apache.log4j.BasicConfigurator.configure que configura el registro como un ConsoleAppender y un PatternLayout tambi\u00e9n predefinido.\nPodemos configurar la API del Log4J tambi\u00e9n en el mismo c\u00f3digo.\nPodemos leer la configuraci\u00f3n de nuestro fichero log4j.properties, donde definimos el nivel m\u00ednimo que debe poseer la traza para ser almacenada en el registro, el o los appenders que utilizaremos, y sus correspondientes layouts. Por defecto al instanciar un Logger Log4J busca en la ra\u00edz del classpath de la aplicaci\u00f3n un fichero llamado log4j.properties para configurarse.\nUn ejemplo para esta \u00faltima opci\u00f3n:\nLo m\u00e1s \u00fatil y flexible en los entornos empresariales reales es utilizar la \u00faltima opci\u00f3n (archivos de configuraci\u00f3n).", "subsections": []}, {"name": "Vulnerabilidad \u00abLog4Shell\u00bb", "text": "El 24 de noviembre de 2021, investigadores independientes de seguridad inform\u00e1tica informaron a Apache sobre una vulnerabilidad tipo ataque de d\u00eda cero que permit\u00eda la ejecuci\u00f3n de c\u00f3digo arbitrario en Log4j versi\u00f3n 2, denominada Log4Shell (CVE-2021-44228).[2]\u200b Fue publicada a trav\u00e9s de un tuit el 9 de diciembre de 2021.[cita\u00a0requerida] Los servicios afectados incluyeron Cloudflare, iCloud, Minecraft (Java Edition), Steam, Tencent QQ, y Twitter.[3]\u200b La Apache Software Foundation asign\u00f3 a la vulnerabilidad la severidad CVSS m\u00e1xima de 10, por la posibilidad de que millones de servidores fueran potencialmente vulnerables a ciberataques.\nLa vulnerabilidad apareci\u00f3 en las versiones de la 2.0-alpha1 hasta 2.16.0, y fue mitigada con la versi\u00f3n 2.17.0. Los usuarios y desarrolladores de los programas que usen la biblioteca deben actualizarla para obtener las actualizaciones de seguridad.[4]\u200b\nEl riesgo de esta vulnerabilidad es que es relativamente f\u00e1cil explotarla, por lo que para las organizaciones  es importante revisar si est\u00e1n expuestas a este riesgo, existen diferentes pruebas de concepto que muestran la vulnerabilidad que pueden servir de base para evaluar el riesgo.[5]\u200b", "subsections": []}, {"name": "Proyectos similares", "text": "log4c - Adaptaci\u00f3n en C de log4j\nlog4js - Adaptaci\u00f3n para JavaScript\nlog4javascript - Otra adaptaci\u00f3n para JavaScript\nlog4net - Adaptaci\u00f3n para .NET\nlog4perl Archivado el 23 de enero de 2013 en Wayback Machine. - Adaptaci\u00f3n para Perl\nlog4php - Adaptaci\u00f3n para Php\nlog4r - Adaptaci\u00f3n para Ruby\nPL-SQL-Logging-utility - Adaptaci\u00f3n de log4j en PL/SQL para Oracle.\nlog4db2 - Adaptaci\u00f3n de log4j en SQL-PL de IBM DB2.", "subsections": []}, {"name": "Referencias", "text": "\u2191 (en ingl\u00e9s) Sitio web de Logback\n\u2191 \u00abLog4j \u2013 Apache Log4j Security Vulnerabilities\u00bb. logging.apache.org. Consultado el 21 de diciembre de 2021.\u00a0\n\u2191 Nathaniel Mott (10 de deciembre, 2021). \u00abCountless Servvers Are Vulnerable to Apache Log4j Zero-Day Exploit\u00bb.\u00a0\n\u2191 \u00abLog4j \u2013 Apache Log4j Security Vulnerabilities\u00bb. logging.apache.org. Consultado el 19 de diciembre de 2021.\u00a0\n\u2191 Prueba de concepto Log4Shell", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nSLF4J\nChainsaw\nlogback, un sucesor de log4j, dise\u00f1ado por el fundador de log4j\nOtrosLogViewer, De c\u00f3digo abierto visor de registro", "subsections": []}, {"name": "Enlaces externos", "text": "P\u00e1gina oficial de Log4j\nLog4j en Javadocs\nManual completo de log4j (comercial)\nLog4J en Lyckapedia\nPresentaci\u00f3n \u00fatil de Log4j\nPrueba de concepto Log4Shell", "subsections": [{"name": "Implementaciones", "text": "Log::Log4perl m\u00f3dulo Perl en CP"}]}]}
{"url": "https://es.wikipedia.org/wiki/M%C3%B3dulo_(inform%C3%A1tica)", "title": "M\u00f3dulo (inform\u00e1tica)", "summary": "En programaci\u00f3n, un m\u00f3dulo es una porci\u00f3n de un programa de ordenador. De las varias tareas que debe realizar un programa para cumplir con su funci\u00f3n u objetivos, un m\u00f3dulo realizar\u00e1, com\u00fanmente, una de dichas tareas (o varias, en alg\u00fan caso).\nEn general (no necesariamente relacionado con la programaci\u00f3n), un m\u00f3dulo recibe como entrada la salida que haya proporcionado otro m\u00f3dulo o los datos de entrada al sistema (programa) si se trata del m\u00f3dulo principal de este; y proporcionar\u00e1 una salida que, a su vez, podr\u00e1 ser utilizada como entrada de otro m\u00f3dulo o bien contribuir\u00e1 directamente a la salida final del sistema (programa), si se retorna al m\u00f3dulo principal.\nParticularmente, en el caso de la programaci\u00f3n, los m\u00f3dulos suelen estar (no necesariamente) organizados jer\u00e1rquicamente en niveles, de forma que hay un m\u00f3dulo principal que realiza las llamadas oportunas a los m\u00f3dulos de nivel inferior. \nCuando un m\u00f3dulo es convocado, recibe como entrada los datos proporcionados por otro del mismo o superior nivel, el que ha hecho la llamada; luego realiza su tarea. A su vez este m\u00f3dulo convocado puede llamar a otro u otros m\u00f3dulos de nivel inferior si fuera necesario; cuando ellos finalizan sus tareas, devuelven la salida pertinente al m\u00f3dulo inmediato llamador, en secuencia inversa. Finalmente se contin\u00faa con la ejecuci\u00f3n del m\u00f3dulo principal.", "sections": [{"name": "Caracter\u00edsticas de un m\u00f3dulo", "text": "Cada uno de los m\u00f3dulos de un programa idealmente deber\u00eda cumplir las siguientes caracter\u00edsticas:\nTama\u00f1o relativamente peque\u00f1o.- Esto facilita aislar el impacto que pueda tener la realizaci\u00f3n de un cambio en el programa, bien para corregir un error, o bien por redise\u00f1o del algoritmo correspondiente.\nIndependencia modular.- Cuanto m\u00e1s independientes son los m\u00f3dulos entre s\u00ed, m\u00e1s f\u00e1cil y flexiblemente se trabajar\u00e1 con ellos. Esto implica que para desarrollar un m\u00f3dulo no es necesario conocer detalles internos de otros m\u00f3dulos. Como consecuencia de la independencia modular, un m\u00f3dulo cumplir\u00e1:\nCaracter\u00edsticas de caja negra; es decir, abstracci\u00f3n (ver abstracci\u00f3n en programaci\u00f3n orientada a objetos).\nAislamiento de los detalles mediante encapsulamiento (ver encapsulamiento en programaci\u00f3n orientada a objetos).", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Algoritmo\nPrograma\nModularidad\nDise\u00f1o estructurado\nProgramaci\u00f3n modular", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Machine_learning", "title": "Aprendizaje autom\u00e1tico", "summary": "El aprendizaje autom\u00e1tico (AA); tambi\u00e9n llamado automatizado, computacional o de m\u00e1quinas (del ingl\u00e9s machine learning, ML), es el subcampo de las ciencias de la computaci\u00f3n y una rama de  la inteligencia artificial, cuyo objetivo es desarrollar t\u00e9cnicas que permitan que las computadoras aprendan. Se dice que un agente aprende cuando su desempe\u00f1o mejora con la experiencia y mediante el uso de datos; es decir, cuando la habilidad no estaba presente en su genotipo o rasgos de nacimiento.[1]\u200b \"En el aprendizaje de m\u00e1quinas un computador observa datos, construye un modelo basado en esos datos y utiliza ese modelo a la vez como una hip\u00f3tesis acerca del mundo y una pieza de software que puede resolver problemas\".[2]\u200b\nEn muchas ocasiones el campo de actuaci\u00f3n del aprendizaje autom\u00e1tico se solapa con el de la estad\u00edstica inferencial, ya que las dos disciplinas se basan en el an\u00e1lisis de datos. Sin embargo, el aprendizaje autom\u00e1tico incorpora las preocupaciones de la complejidad computacional de los problemas. Muchos problemas son de clase NP-hard, por lo que gran parte de la investigaci\u00f3n realizada en aprendizaje autom\u00e1tico est\u00e1 enfocada al dise\u00f1o de soluciones factibles a esos problemas. El aprendizaje autom\u00e1tico tambi\u00e9n est\u00e1 estrechamente relacionado con el reconocimiento de patrones. El aprendizaje autom\u00e1tico puede ser visto como un intento de automatizar algunas partes del m\u00e9todo cient\u00edfico mediante m\u00e9todos matem\u00e1ticos. Por lo tanto es un proceso de inducci\u00f3n del conocimiento.\nEl aprendizaje autom\u00e1tico tiene una amplia gama de aplicaciones, incluyendo motores de b\u00fasqueda, diagn\u00f3sticos m\u00e9dicos, detecci\u00f3n de fraude en el uso de tarjetas de cr\u00e9dito, an\u00e1lisis de mercado para los diferentes sectores de actividad, clasificaci\u00f3n de secuencias de ADN, reconocimiento del habla y del lenguaje escrito, juegos y rob\u00f3tica.", "sections": [{"name": "Resumen", "text": "Algunos sistemas de aprendizaje autom\u00e1tico intentan eliminar toda necesidad de intuici\u00f3n o conocimiento experto de los procesos de an\u00e1lisis de datos, mientras otros tratan de establecer un marco de colaboraci\u00f3n entre el experto y la computadora. De todas formas, la intuici\u00f3n humana no puede ser reemplazada en su totalidad, ya que el dise\u00f1ador del sistema ha de especificar la forma de representaci\u00f3n de los datos y los m\u00e9todos de manipulaci\u00f3n y caracterizaci\u00f3n de los mismos.\nSin embargo, las computadoras son utilizadas por todo el mundo con fines tecnol\u00f3gicos muy buenos.", "subsections": [{"name": "Modelos", "text": "El aprendizaje autom\u00e1tico tiene como resultado un modelo para resolver una tarea dada. Entre los modelos se distinguen[3]\u200b\nLos modelos geom\u00e9tricos, construidos en el espacio de instancias y que pueden tener una, dos o m\u00faltiples dimensiones. Si hay un borde de decisi\u00f3n lineal entre las clases, se dice que los datos son linealmente separables. Un l\u00edmite de decisi\u00f3n lineal se define como w * x = t, donde w es un vector perpendicular al l\u00edmite de decisi\u00f3n, x es un punto arbitrario en el l\u00edmite de decisi\u00f3n y t es el umbral de la decisi\u00f3n.\nLos modelos probabil\u00edsticos, que intentan determinar la distribuci\u00f3n de probabilidades descriptora de la funci\u00f3n que enlaza a los valores de las caracter\u00edsticas con valores determinados. Uno de los conceptos claves para desarrollar modelos probabil\u00edsticos es la estad\u00edstica bayesiana.\nLos modelos l\u00f3gicos, que transforman y expresan las probabilidades en reglas organizadas en forma de \u00e1rboles de decisi\u00f3n.\nLos modelos pueden tambi\u00e9n clasificarse como modelos de agrupamiento y modelos de gradiente. Los primeros tratan de dividir el espacio de instancias en grupos. Los segundos, como su nombre lo indican, representan un gradiente en el que se puede diferenciar entre cada instancia. Clasificadores geom\u00e9tricos como las m\u00e1quinas de vectores de apoyo son modelos de gradientes."}]}, {"name": "Tipos de algoritmos", "text": "V\u00e9ase tambi\u00e9n:\nLos diferentes algoritmos de Aprendizaje Autom\u00e1tico se agrupan en una taxonom\u00eda en funci\u00f3n de la salida de los mismos. Algunos tipos de algoritmos son:\nArt\u00edculo principal:\nEl an\u00e1lisis computacional y de rendimiento de los algoritmos de aprendizaje autom\u00e1tico es una rama de la estad\u00edstica conocida como teor\u00eda computacional del aprendizaje.\nEl aprendizaje autom\u00e1tico las personas lo llevamos a cabo de manera autom\u00e1tica ya que es un proceso tan sencillo para nosotros que ni nos damos cuenta de c\u00f3mo se realiza y todo lo que implica. Desde que nacemos hasta que morimos los seres humanos llevamos a cabo diferentes procesos, entre ellos encontramos el de aprendizaje por medio del cual adquirimos conocimientos, desarrollamos habilidades para analizar y evaluar a trav\u00e9s de m\u00e9todos y t\u00e9cnicas as\u00ed como tambi\u00e9n por medio de la experiencia propia. Sin embargo, a las m\u00e1quinas hay que indicarles c\u00f3mo aprender, ya que si no se logra que una m\u00e1quina sea capaz de desarrollar sus habilidades, el proceso de aprendizaje no se estar\u00e1 llevando a cabo, sino que solo ser\u00e1 una secuencia repetitiva.", "subsections": []}, {"name": "T\u00e9cnicas de clasificaci\u00f3n", "text": "", "subsections": [{"name": "\u00c1rboles de decisiones", "text": "Este tipo de aprendizaje usa un \u00e1rbol de decisiones como modelo predictivo. Se mapean observaciones sobre un objeto con conclusiones sobre el valor final de dicho objeto.\nLos \u00e1rboles son estructuras b\u00e1sicas en la inform\u00e1tica. Los \u00e1rboles de atributos son la base de las decisiones.\nUna de las dos formas principales de \u00e1rboles de decisiones es la desarrollada por Quinlan de medir la impureza de la entrop\u00eda en cada rama, algo que primero desarroll\u00f3 en el algoritmo ID3 y luego en el C4.5. Otra de las estrategias se basa en el \u00edndice GINI. El algoritmo de CART es una implementaci\u00f3n de esta estrategia.[5]\u200b"}, {"name": "Reglas de asociaci\u00f3n", "text": "Los algoritmos de reglas de asociaci\u00f3n procuran descubrir relaciones interesantes entre variables. Entre los m\u00e9todos m\u00e1s conocidos se hallan el algoritmo a priori, el algoritmo Eclat y el algoritmo de patr\u00f3n frecuente."}, {"name": "Algoritmos gen\u00e9ticos", "text": "Los algoritmos gen\u00e9ticos son procesos de b\u00fasqueda heur\u00edstica que simulan la selecci\u00f3n natural. Usan m\u00e9todos tales como la mutaci\u00f3n y el cruzamiento para generar nuevas clases que puedan ofrecer una buena soluci\u00f3n a un problema dado."}, {"name": "Redes neuronales artificiales", "text": "Las redes de neuronas artificiales (RNA) son un paradigma de aprendizaje autom\u00e1tico inspirado en las neuronas de los sistemas nerviosos de los animales. Se trata de un sistema de enlaces de neuronas que colaboran entre s\u00ed para producir un est\u00edmulo de salida. Las conexiones tienen pesos num\u00e9ricos que se adaptan seg\u00fan la experiencia. De esta manera, las redes neurales se adaptan a un impulso y son capaces de aprender. La importancia de las redes neurales cay\u00f3 durante un tiempo con el desarrollo de los vectores de soporte y clasificadores lineales, pero volvi\u00f3 a surgir a finales de la d\u00e9cada de 2000 con la llegada del aprendizaje profundo."}, {"name": "M\u00e1quinas de vectores de soporte", "text": "Las MVS son una serie de m\u00e9todos de aprendizaje supervisado usados para clasificaci\u00f3n y regresi\u00f3n. Los algoritmos de MVS usan un conjunto de ejemplos de formaci\u00f3n clasificada en dos categor\u00edas para construir un modelo que prediga si un nuevo ejemplo pertenece a una u otra de dichas categor\u00edas."}, {"name": "Algoritmos de agrupamiento", "text": "El an\u00e1lisis por agrupamiento (clustering en ingl\u00e9s) es la clasificaci\u00f3n de observaciones en subgrupos \u2014clusters\u2014 para que las observaciones en cada grupo se asemejen entre s\u00ed seg\u00fan ciertos criterios. \nLas t\u00e9cnicas de agrupamiento hacen inferencias diferentes sobre la estructura de los datos; se gu\u00edan usualmente por una medida de similitud espec\u00edfica y por un nivel de compactamiento interno (similitud entre los miembros de un grupo) y la separaci\u00f3n entre los diferentes grupos. \nEl agrupamiento es un m\u00e9todo de aprendizaje no supervisado y es una t\u00e9cnica muy popular de an\u00e1lisis estad\u00edstico de datos."}, {"name": "Redes bayesianas", "text": "Una red bayesiana, red de creencia o modelo ac\u00edclico dirigido es un modelo probabil\u00edstico que representa una serie de variables de azar y sus independencias condicionales a trav\u00e9s de un grafo ac\u00edclico dirigido. Una red bayesiana puede representar, por ejemplo, las relaciones probabil\u00edsticas entre enfermedades y s\u00edntomas. Dados ciertos s\u00edntomas, la red puede usarse para calcular las probabilidades de que ciertas enfermedades est\u00e9n presentes en un organismo. Hay algoritmos eficientes que infieren y aprenden usando este tipo de representaci\u00f3n."}]}, {"name": "Conocimiento", "text": "En el aprendizaje autom\u00e1tico podemos obtener 3 tipos de conocimiento, que son:\nLos tres tipos se efect\u00faan durante un proceso de aprendizaje autom\u00e1tico pero la importancia de cada tipo de conocimiento depende de las caracter\u00edsticas de lo que se est\u00e1 tratando de aprender.\nEl aprendizaje es m\u00e1s que una necesidad, es un factor primordial para satisfacer las necesidades de la inteligencia artificial.", "subsections": []}, {"name": "Distinci\u00f3n entre aprendizaje supervisado y no supervisado", "text": "El aprendizaje supervisado se caracteriza por contar con informaci\u00f3n que especifica qu\u00e9 conjuntos de datos son satisfactorios para el objetivo del aprendizaje. Un ejemplo podr\u00eda ser un software que reconoce si una imagen dada es o no la imagen de un rostro: para el aprendizaje del programa tendr\u00edamos que proporcionarle diferentes im\u00e1genes, especificando en el proceso si se trata o no de rostros.\nEn el aprendizaje no supervisado, en cambio, el programa no cuenta con datos que definan qu\u00e9 informaci\u00f3n es satisfactoria o no. El objetivo principal de estos programas suele ser encontrar patrones que permitan separar y clasificar los datos en diferentes grupos, en funci\u00f3n de sus atributos. Siguiendo el ejemplo anterior un software de aprendizaje no supervisado no ser\u00eda capaz de decirnos si una imagen dada es un rostro o no pero s\u00ed podr\u00eda, por ejemplo, clasificar las im\u00e1genes entre aquellas que contienen rostros humanos, de animales, o las que no contienen. La informaci\u00f3n obtenida por un algoritmo de aprendizaje no supervisado debe ser posteriormente interpretada por una persona para darle utilidad.", "subsections": []}, {"name": "Aplicaciones", "text": "Motores de b\u00fasqueda\nDiagn\u00f3stico m\u00e9dico\nDetecci\u00f3n de fraudes con el uso de tarjetas de cr\u00e9dito\nAn\u00e1lisis del mercado de valores\nClasificaci\u00f3n de secuencias de ADN\nIngenier\u00eda de caracter\u00edsticas\nReconocimiento del habla\nRob\u00f3tica\nMiner\u00eda de datos\nBig Data\nPrevisiones de series temporales", "subsections": []}, {"name": "Temas del aprendizaje autom\u00e1tico", "text": "A continuaci\u00f3n se muestran una serie de temas que podr\u00edan formar parte del temario de un curso sobre aprendizaje autom\u00e1tico.\nModelado de funciones de densidad de probabilidad condicionadas: clasificaci\u00f3n y regresi\u00f3n\nRedes neuronales artificiales\n\u00c1rboles de decisi\u00f3n: El aprendizaje por \u00e1rboles de decisi\u00f3n usa un \u00e1rbol de decisi\u00f3n como modelo predictivo que mapea observaciones a conclusiones sobre el valor de un objeto dado.\nModelos de regresi\u00f3n m\u00faltiple no postulados\nRegresi\u00f3n en procesos Gaussianos\nAn\u00e1lisis de discriminantes lineales\nk-vecinos m\u00e1s pr\u00f3ximos\nPerceptr\u00f3n\nFunciones de base radial\nM\u00e1quinas de soporte vectorial\nModelado de funciones de densidad de probabilidad mediante modelos generativos\nAlgoritmo EM\nModelos gr\u00e1ficos, como las redes bayesianas y los campos aleatorios de Markov\nMapeado topogr\u00e1fico generativo\nT\u00e9cnicas de inferencia aproximada\nCadenas de Markov y M\u00e9todo de Montecarlo\nM\u00e9todos variacionales\nOptimizaci\u00f3n: La mayor\u00eda de los m\u00e9todos descritos arriba usan algoritmos de optimizaci\u00f3n o son por s\u00ed mismos instancias de problemas de optimizaci\u00f3n.", "subsections": []}, {"name": "Historia y relaci\u00f3n con otros temas", "text": "El aprendizaje autom\u00e1tico naci\u00f3 de la b\u00fasqueda de inteligencia artificial. Ya en los primeros d\u00edas de la IA como disciplina acad\u00e9mica, algunos investigadores se interesaron en hacer que las m\u00e1quinas aprendiesen. Trataron de resolver el problema con diversos m\u00e9todos simb\u00f3licos, as\u00ed como lo que ellos llamaron 'redes neurales' que eran en general perceptrones y otros modelos b\u00e1sicamente basados en modelos lineares generalizados como se conocen en las estad\u00edsticas.", "subsections": []}, {"name": "Software", "text": "Muchos lenguajes de programaci\u00f3n pueden usarse para implementar algoritmos de aprendizaje autom\u00e1tico. Los m\u00e1s populares para 2015 eran R y Python.[6]\u200b R es muy usado ante todo en el campo acad\u00e9mico, mientras que Python es m\u00e1s popular en la empresa privada. \nEntre los paquetes de software que incluyen algoritmos de aprendizaje automatizado, se hallan los siguientes:", "subsections": [{"name": "Software de c\u00f3digo abierto", "text": "TensorFlow: plataforma multilenguaje y multiplataforma desarrollada por Google y licenciada como Apache 2.\nApache Mahout: plataforma de Java de algoritmos escalables de aprendizaje autom\u00e1tico, en especial en las \u00e1reas de filtro colaborativo, clustering y clasificaci\u00f3n\ndlib: una biblioteca bajo licencia Boost para desarrollar en C++\nELKI: una plataforma para Java con licencia AGPLv3\nEncog\nH2O\nKNIME\nmlpy\nMLPACK\nMOA\nOpenCV\nTortilla JS\nOpenNN\nR: lenguaje de programaci\u00f3n estad\u00edstico con numerosas bibliotecas relacionadas al aprendizaje autom\u00e1tico (e1071, rpart, nnet, randomForest, entre otras)\nRapidMiner\nscikit-learn: biblioteca en Python que interact\u00faa con NumPy y SciPy\nSpark MLlib: una librer\u00eda que forma parte de Apache Spark, una plataforma para computaci\u00f3n de grupos\n Weka: una biblioteca en Java"}, {"name": "Software comercial", "text": "SPSS Modeler\nMathematica\nMATLAB\nMicrosoft Azure Machine Learning\nNeural Designer\nOracle Data Mining\nRCASE\nSTATISTICA\nSAS"}]}, {"name": "Sesgos", "text": "Los algoritmos de aprendizaje autom\u00e1tico a menudo pueden verse afectados por el sesgo que puedan tener los datos (Ver sesgo algoritmico). Por ejemplo, no se podr\u00e1n clasificar todos aquellas entradas de las que no se haya recibido ninguna informaci\u00f3n en la fase de formaci\u00f3n. De hecho, cuando la formaci\u00f3n se realiza con datos clasificados por el ser humano el aprendizaje autom\u00e1tico tiende a crear los mismos sesgos que hay en la sociedad. Algunos ejemplos de esto son cuando en 2015 el algoritmo de Google photos identificaba algunas personas negras con gorilas, o en 2016 cuando el bot de Twitter de Microsoft desarrollo comportamientos racistas y machistas a base de observar el tr\u00e1fico de datos en dicha red social. Por este motivo en los \u00faltimos a\u00f1os ha habido una tendencia a desarrollar m\u00e9todos para aumentar la equidad, es decir, para reducir el sesgo en este tipo algoritmos por parte de los expertos en IA. Citando a Fei-fei Li \"La IA no tiene nada de especial. Se inspira en personas, es creada por personas, y lo m\u00e1s importante impacta en las personas. Es una herramienta muy poderosa que tan solo hemos comenzado a entender, y esa es una gran responsabilidad\" [7]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Aprendizaje autom\u00e1tico antag\u00f3nico\nAprendizaje profundo\nDin\u00e1mica de sistemas\nInteligencia artificial\nInteligencia computacional\nInternet de las cosas\nSistema din\u00e1mico\nReconocimiento de patrones\nReglas de asociaci\u00f3n\nRobot aut\u00f3nomo\nEquidad (aprendizaje autom\u00e1tico)\nAblaci\u00f3n (inteligencia artificial)\nOpenAI Codex\nFawkes (software de encubrimiento de im\u00e1genes)\nRed neuronal residual\nHiperpar\u00e1metro (aprendizaje autom\u00e1tico)\nAprendizaje por diferencias temporales\nAprendizaje por conjuntos\nAprendizaje autom\u00e1tico basado en reglas", "subsections": []}, {"name": "Referencias", "text": "\u2191 Russell, Stuart; Norvig, Peter (2009). Inteligencia Artificial: Un Enfoque Moderno (3rd edici\u00f3n). p.\u00a0229.\u00a0\n\u2191 Russell and Norvig (2021). Artificial Intelligence: A Modern Approach (en ingl\u00e9s). Pearson. p.\u00a0651. ISBN\u00a09780134610993.\u00a0\n\u2191 Flach 2012 P\u00e1gs. 20-21\n\u2191 Sutton, Richard S., Barto, Andrew G. Reinforcement Learning: An Introduction. The MIT Press.\u00a0\n\u2191 Flach 2012 P\u00e1gs. 155-156\n\u2191 Four main languages for analytics and data mining science (KD Nuggets)\n\u2191 \u00abFei-Fei Li's Quest to Make Machines Better for Humanity\u00bb. Wired (en ingl\u00e9s). ISSN\u00a01059-1028. Consultado el 17 de diciembre de 2019.\u00a0", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Bishop, Christopher (2008) Pattern Recognition and Machine Learning. Springer Verlag. ISBN=978-0-3873-1073-2.\nFlach, Peter (2012) Machine Learning: The Art and Science of Algorithms that Make Sense of Data. Cambridge University Press. ISBN 978-1-107-42222-3.\nGollapudi, Sunila (2016) Practical Machine Learning. Packt Publishing. ISBN=978-1-78439-968-4.\nIan H. Witten and Eibe Frank (2011). Data Mining: Practical machine learning tools and techniques Morgan Kaufmann, 664 p\u00e1g., ISBN 978-0-12-374856-0.\nMitchell, T. (1997). Machine Learning, McGraw Hill. ISBN 0-07-042807-7\nRaschka, Sebastian (2015). Python Machine Learning, Packt Open Source. ISBN 978-1-78355-513-0", "subsections": []}, {"name": "Enlaces externos", "text": "Ejemplos pr\u00e1cticos de Machine Learning en Espa\u00f1ol\nBlog sobre Aprendizaje Autom\u00e1tico - La biblia del Machine Learning\nEl Machine Learning cambiar\u00e1 el mundo\nMachine Learning Development with Perl (en ingl\u00e9s)\nEstudio y aplicaci\u00f3n de t\u00e9cnicas de aprendizaje autom\u00e1tico orientadas al \u00e1mbito m\u00e9dico: estimaci\u00f3n y explicaci\u00f3n de predicciones individuales. Universidad Aut\u00f3noma de Madrid\nAlphaGo Archivado el 4 de febrero de 2018 en Wayback Machine.\nMachine Learning explicado (podcast)\nMachine Learning: Selecci\u00f3n de m\u00e9tricas de clasificaci\u00f3n (en espa\u00f1ol", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Manejo_de_excepciones", "title": "Manejo de excepciones", "summary": "Busca fuentes: \u00abManejo de excepciones\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEl manejo de excepciones es una t\u00e9cnica de programaci\u00f3n que permite al programador controlar los errores ocasionados durante la ejecuci\u00f3n de un programa inform\u00e1tico. Cuando ocurre cierto tipo de error, el sistema reacciona ejecutando un fragmento de c\u00f3digo que resuelve la situaci\u00f3n, por ejemplo retornando un mensaje de error o devolviendo un valor por defecto.", "sections": [{"name": "Introducci\u00f3n", "text": "Una excepci\u00f3n en t\u00e9rminos de lenguaje de programaci\u00f3n es la indicaci\u00f3n de un problema que ocurre durante la ejecuci\u00f3n de un programa. Sin embargo, la palabra excepci\u00f3n se refiere a que este problema ocurre con poca frecuencia generalmente cuando existe alg\u00fan dato o instrucci\u00f3n que no se apega al funcionamiento del programa por lo que se produce un error. El manejo de excepciones permite al usuario crear aplicaciones tolerantes a fallas y robustas (resistentes a errores) para controlar estas excepciones y que pueda seguir ejecut\u00e1ndose el programa sin verse afectado por el problema. En lenguaje Java estas excepciones pueden manejarse con las clases que extienden el paquete Throwable de manera directa o indirecta,[1]\u200b pero existen diversos tipos de excepciones y formas para manejarlas.", "subsections": [{"name": "Uso del manejo de excepciones", "text": "El manejo de excepciones ayuda al programador a trasladar el c\u00f3digo para manejo de errores de la l\u00ednea principal de ejecuci\u00f3n, adem\u00e1s se puede elegir entre manejar todas las excepciones, las de cierto tipo o de las de grupos relacionados, esto hace que la probabilidad de pasar por alto los errores se reduzca y a la vez hace los programas m\u00e1s robustos. Pero es importante utilizar un lenguaje de programaci\u00f3n que soporte este manejo, de lo contrario el procesamiento de errores no estar\u00e1 incluido y har\u00e1 el programa m\u00e1s vulnerable.\nEste manejo est\u00e1 dise\u00f1ado para procesar errores que ocurren cuando se ejecuta una instrucci\u00f3n, algunos ejemplos son: desbordamiento aritm\u00e9tico, divisi\u00f3n entre cero, par\u00e1metros inv\u00e1lidos de m\u00e9todo y asignaci\u00f3n fallida en la memoria. Sin embargo, no est\u00e1 dise\u00f1ado para procesar problemas con eventos independientes al programa como son pulsar una tecla o clic al mouse.\nLas excepciones se dividen en verificadas y no verificadas. Es importante esta divisi\u00f3n porque el compilador implementa requerimientos de atrapar o declarar para las verificadas lo que har\u00e1 que se detecten las excepciones autom\u00e1ticamente y de acuerdo al lenguaje de programaci\u00f3n utilizado se utilizar\u00e1 un m\u00e9todo para corregirlas. Sin embargo para las que no verificadas se producir\u00e1 un error indicando que deben atraparse y declararse. Por eso el programador debe pensar en los problemas que pueden ocurrir cuando se llama a un m\u00e9todo y definir excepciones para verificarse cuando sean importantes. Las clases de excepciones pueden derivarse de una superclase com\u00fan, por lo que con un manejador para atrapar objetos de la superclase, tambi\u00e9n se pueden atrapar todos los objetos de las subclases de esa clase. Pero tambi\u00e9n, se pueden atrapar a cada uno de los tipos de las subclases de manera individual si estas requieren ser procesadas diferente.\nA cada c\u00e9lula se le conoce como compiladora de distintos."}, {"name": "Limpieza de pila", "text": "En ocasiones cuando se lanza una excepci\u00f3n, pero no se atrapa en un enlace espec\u00edfico, la pila de llamadas se limpia y el programa intenta volverlo a atrapar en el siguiente bloque, esto se conoce como limpieza de pila. Este proceso hace que el m\u00e9todo en el que no se atrap\u00f3 la excepci\u00f3n termine, todas sus variables quedan fuera del enlace y el control regresa a la instrucci\u00f3n que originalmente la invoc\u00f3. La limpieza de pila se repetir\u00e1 hasta que la excepci\u00f3n pueda ser atrapada porque de lo contrario se producir\u00e1 un error a la hora de compilar."}, {"name": "Aserciones", "text": "Las aserciones ayudan a asegurar la validez del programa al atrapar los errores potenciales e identificar los posibles errores l\u00f3gicos del desarrollo. Estas pueden escribirse como comentarios para apoyar a la persona que desarrolla el programa. Algunos ejemplos son:\nPrecondiciones y pos condiciones\nEstas caracter\u00edsticas son utilizadas por los programadores para hacer un an\u00e1lisis de lo esperado del programa antes y despu\u00e9s de su ejecuci\u00f3n. Son importantes porque gracias a ellas se pueden detectar posibles fallas en el programa y corregirlas.\nLas precondiciones son verdaderas cuando se invoca a un m\u00e9todo, estas describen las caracter\u00edsticas del m\u00e9todo y las expectativas que se tienen en el estado actual del programa. Si no se cumplen las precondiciones el comportamiento del m\u00e9todo es indefinido por lo que se lanza una excepci\u00f3n que est\u00e9 preparada o continuar con el programa esperando el error.\nLas pos condiciones describen las restricciones en el entorno y cualquier efecto secundario del m\u00e9todo. Es recomendable escribirlas para saber que esperar en un futuro si es que se hacen modificaciones."}, {"name": "Conclusi\u00f3n", "text": "El manejo de excepciones ayuda a lidiar con los errores de una aplicaci\u00f3n por medio de la manipulaci\u00f3n del c\u00f3digo para hacer programas m\u00e1s robustos. Adem\u00e1s existen herramientas que ayudan a manejarlas, tal es el caso de los bloques try (intentar) que encierran el c\u00f3digo que puede lanzar una excepci\u00f3n y los bloques catch (atrapar) que lidian con las excepciones que surjan.\nTambi\u00e9n existen t\u00e9cnicas que el programador utiliza para conocer el posible funcionamiento del programa y detectar los errores que pueda contener."}]}, {"name": "Ejemplos de c\u00f3digo", "text": "", "subsections": [{"name": "Java", "text": "public\n \nclass\nExcDemo\n{\n    \nstatic\nvoid\nmain\n(\nString\n[]\nargs\n)\n        \nint\nnums\n[]=\nnew\n[\n4\n]\n;\ntry\n            \nSystem\n.\nout\nprintln\n\"Antes de que se genere la excepci\u00f3n.\"\n);\n//generar una excepci\u00f3n de \u00edndice fuera de l\u00edmites\n7\n]=\n10\n}\ncatch\nArrayIndexOutOfBoundsException\nexc\n){\n//Capturando la excepci\u00f3n\n\"\u00cdndice fuera de los l\u00edmites!\"\nfinally\n\"Despu\u00e9s de que se genere la excepci\u00f3n.\""}, {"name": "Delphi", "text": "procedure\nTForm1\n.\nButton1Click\nSender\n:\nTObject\n;\nbegin\n  \n       \na\n:=\nb\n/\nc\n      \n// Este c\u00f3digo siempre se ejecuta, independientemente de si ocurre o no una excepci\u00f3n.\nend\nexcept\non\ne\nEZeroDivide\ndo\n// Manejo de la excepci\u00f3n Divisi\u00f3n por cero.\nException\n// Manejo de una excepci\u00f3n \"gen\u00e9rica\"."}, {"name": "Pascal", "text": "Var\nEntero\n' Declaramos las variables a utilizar\nAdmErr\n' Administrar Error\nControlar\n' Controlar si existe (i obtiene el valor de la excepci\u00f3n)\nSeleccionar\nCaso\n' Si i es igual a Divisi\u00f3n a cero.\nCaso Otro\n       Salir AdmErr\nFinSeleccionar\nFinAdmErr\n' Fin Administrar Error"}, {"name": "Python", "text": ":\nresult\n=\nx\ny\nZeroDivisionError\nprint\n\"division by zero!\"\nelse\n\"result is\"\n,\n\"executing finally clause\""}, {"name": "Ada", "text": "type\nT_Matriz\nis\narray\nPositive\nrange\n<>,\n<>)\nof\nInteger\nprocedure\nRellenar_Matriz\nMatriz\n: \nin\nT_Matriz\nK\nInteger\nQ\nbegin\nMatriz\nK\nQ\n:=\n3\nexception\nwhen\nConstraint_Error\n=>\nPut_Line\n\"Las posiciones se salen del rango de la matriz\"\nend"}]}, {"name": "Referencias", "text": "\u2191  \u00abClass Throwable\u00bb (html). Oracle Corporation (en ingl\u00e9s). Archivado desde el original el 25 de noviembre de 2011. Consultado el 29 de febrero de 2020. \u00abThe Throwable class is the superclass of all errors and exceptions in the Java language. Only objects that are instances of this class (or one of its subclasses) are thrown by the Java Virtual Machine or can be thrown by the Java throw statement.\u00bb\u00a0 ", "subsections": []}, {"name": "Enlaces externos", "text": "Introducci\u00f3n al manejo de excepciones en C.\nexceptions4c: Una biblioteca de manejo de excepciones para C.\nTratamiento de excepciones en Java", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Metaclase", "title": "Metaclase", "summary": "En programaci\u00f3n orientada a objetos, una metaclase es una clase cuyas instancias son clases. En otras palabras, como los objetos son instancias de una clase, las clases son instancias de una metaclase.\nNo todos los lenguajes orientados a objetos soportan metaclases. Adem\u00e1s, los lenguajes que lo soportan tienen sus propias reglas que definen como los objetos, clases y metaclases interact\u00faan.", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "Metaprogramaci\u00f3n\nReflexi\u00f3", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Monty_Python", "title": "Monty Python", "summary": "Graham Chapman (\u2020)John CleeseTerry GilliamEric IdleTerry Jones (\u2020)Michael Palin\nMonty Python's Flying Circus (1969-1974)Se arm\u00f3 la gorda (1971)Los caballeros de la mesa cuadrada (1975)La vida de Brian (1979)Monty Python Live at the Hollywood Bowl (1982)El sentido de la vida (1983)Monty Python Live (Mostly) (2014)\nMonty Python (a veces conocidos como Los Pythons)[1]\u200b[2]\u200b fue un grupo brit\u00e1nico de seis humoristas que sintetiz\u00f3 en clave de humor la idiosincrasia brit\u00e1nica de los a\u00f1os 1960 y 1970, compuesto por Graham Chapman, John Cleese, Terry Gilliam, Eric Idle, Terry Jones y Michael Palin. Del grupo \u00fanicamente Terry Gilliam no era brit\u00e1nico sino estadounidense.\nLograron la fama gracias a su programa de televisi\u00f3n Monty Python's Flying Circus (El Circo Ambulante de Monty Python), estrenado el 5 de octubre de 1969 en la BBC y formada por 45 episodios repartidos en cuatro temporadas. El fen\u00f3meno Python se desarroll\u00f3 m\u00e1s all\u00e1 del programa de televisi\u00f3n adquiriendo un gran impacto: obras de teatros, pel\u00edculas, discos, libros, un musical e incluso lenguajes de programaci\u00f3n.[3]\u200b La influencia del grupo en la comedia se ha comparado con la de los Beatles en la m\u00fasica.[4]\u200b[5]\u200b\nEmitido en la BBC entre 1969 y 1974, Flying Circus fue creado, escrito e interpretado por los seis miembros del grupo. Estaba estructurado como un programa de sketches, pero con una t\u00e9cnica narrativa innovadora (ayudada por las animaciones de Gilliam) que iba m\u00e1s all\u00e1 de lo aceptable en estilo y contenido.[6]\u200b[7]\u200b Al ser los responsables tanto de los guiones y la interpretaci\u00f3n, los Python ten\u00edan un control creativo que les permit\u00eda experimentar formas y contenidos, deshaci\u00e9ndose de las reglas de la comedia televisiva. La influencia del grupo en la comedia brit\u00e1nica ha sido notoria durante a\u00f1os, y en Norteam\u00e9rica ha influido desde los int\u00e9rpretes de las primeras ediciones de Saturday Night Live hasta las m\u00e1s recientes tendencias de humor absurdo en la comedia televisiva. La palabra \"Pythonesque\" ha entrado en el l\u00e9xico ingl\u00e9s como sin\u00f3nimo de \"absurdo\" o \"surrealista\".\nEn una encuesta realizada en 2005 en el Reino Unido para encontrar al C\u00f3mico de c\u00f3micos, tres de los seis miembros de Monty Python fueron votados por otros c\u00f3micos y aficionados como tres de los 50 mayores c\u00f3micos de la historia: Cleese en el puesto 2, Idle en el 21, y Palin en el 30.[8]\u200b\nEn 2009 el grupo recibi\u00f3 el premio BAFTA honor\u00edfico por su contribuci\u00f3n al mundo de la comedia. El premio se lo entregaron en el preestreno del documental dedicado al fallecido Graham Chapman, Monty Python: casi la verdad.[9]\u200b", "sections": [{"name": "Los or\u00edgenes", "text": "Michael Palin y Terry Jones se conocieron en la Universidad de Oxford, donde ambos actuaban en el grupo de teatro estudiantil The Oxford Revue. John Cleese y Graham Chapman se conocieron en la Universidad de Cambridge. Eric Idle tambi\u00e9n estaba en Cambridge pero empez\u00f3 un a\u00f1o despu\u00e9s. Cleese conoci\u00f3 a Terry Gilliam en Nueva York mientras estaban de gira con su grupo de teatro estudiantil, Cambridge University Footlights. Chapman, Cleese e Idle eran miembros de los Footlights, que en ese tiempo inclu\u00eda tambi\u00e9n a Tim Brooke-Taylor, Bill Oddie y Graeme Garden (quienes m\u00e1s tarde formar\u00edan el grupo Goodies), y al actor y director Jonathan Lynn, coguionista de la serie S\u00ed, Ministro y su secuela S\u00ed, Primer Ministro. Mientras Idle fue presidente de los Footlights fueron tambi\u00e9n miembros del grupo la escritora feminista Germaine Greer y el periodista Clive James. Todav\u00eda se conservan grabaciones de algunas actuaciones de este grupo de teatro en el Pembroke College de Cambridge. \nAntes de Monty Python's Flying Circus, los Python escribieron o actuaron en diversas obras y espect\u00e1culos:\nI'm Sorry, I'll Read That Again (radio) (1964\u20131973), Cleese como actor y guionista e Idle y Chapman como guionistas\nThe Frost Report (1966\u20131967; fue el primer trabajo en el que coincidieron la mayor parte de los miembros, 5 de 6), Cleese como actor y guionista, Idle como guionista de los mon\u00f3logos de David Frost, y Chapman, Palin y Jones como guionistas\nAt Last the 1948 Show (1967) Chapman y Cleese como actores y guionistas e Idle como guionista\nTwice a Fortnight (1967) Palin y Jones como actores y guionistas\nDo Not Adjust Your Set (1967\u20131969) Palin, Jones e Idle como actores y guionistas y Gilliam como animador\nWe Have Ways of Making You Laugh (1968) Idle como actor y guionista y Gilliam como animador\nHow to Irritate People (1968) Cleese y Chapman como actores y guionistas y Palin como actor\nThe Complete and Utter History of Britain (1969) Palin y Jones como actores y guionistas\nDoctor in the House (1969) Cleese y Chapman como guionistas\nEn muchas de estas actuaciones coincidieron con otros importantes c\u00f3micos y guionistas brit\u00e1nicos del futuro: Marty Feldman, Jonathan Lynn, David Jason y David Frost, as\u00ed como miembros de otros grupos de c\u00f3micos: Ronnie Corbett y Ronnie Barker (The Two Ronnies), y Tim Brooke-Taylor, Graeme Garden y Bill Oddie (The Goodies).\nEl \u00e9xito de Do Not Adjust Your Set hizo que la ITV ofreciera a Palin, Jones, Idle y Gilliam su propio programa juntos. Al mismo tiempo a Cleese y Chapman la BBC, impresionados por su trabajo en The Frost Report y en At Last The 1948 Show les ofreci\u00f3 un show propio. Cleese era reacio a un d\u00fao c\u00f3mico por varias razones, incluyendo la supuesta personalidad dif\u00edcil de Chapman. Cleese ten\u00eda buenos recuerdos de su trabajo con Palin y le invit\u00f3 a unirse al equipo. Con la serie de la ITV todav\u00eda en preproducci\u00f3n, Palin acept\u00f3, y sugiri\u00f3 que se unieran al grupo Idle y Jones; quienes propusieron que Gilliam se encargara de proveer de animaciones a la serie. El grupo Monty Python es en buena parte resultado del deseo de Cleese de trabajar con Palin y las circunstancias que a\u00f1adieron a los otros cuatro miembros al grupo.[10]\u200b", "subsections": []}, {"name": "Monty Python's Flying Circus", "text": "Art\u00edculo principal:", "subsections": [{"name": "Desarrollo del programa", "text": "Los Python ten\u00edan claro qu\u00e9 quer\u00edan hacer con el programa. Eran admiradores del trabajo de Peter Cook, Alan Bennett, Jonathan Miller y Dudley Moore en el show teatral sat\u00edrico Beyond the Fringe, y hab\u00edan trabajado en The Frost Report, de estilo similar.[11]\u200b Tambi\u00e9n eran fanes del programa de Cook y Moore Not Only... But Also. Un problema que los Python observaban en estos programas era que a pesar de que el sketch era potente, los guionistas intentaban a menudo encontrar una frase lo bastante divertida para terminarlo y esto disminu\u00eda la calidad del sketch. Decidieron entonces que no se molestar\u00edan en rematar sus sketches de la manera tradicional, y algunos de los primeros episodios del Flying Circus hac\u00edan gala de este abandono de la frase final. En Cleese se dirige a Idle y dice: \"Este es el sketch m\u00e1s absurdo que hemos hecho\", y los personajes terminan el sketch simplemente saliendo de escena.[12]\u200b Sin embargo, cuando empezaron a reunir material para el programa, los Python vieron a uno de sus \u00eddolos, Spike Milligan, grabar su innovador programa Q5 (1969). No solo era el programa m\u00e1s irreverente y an\u00e1rquico que cualquier otro, sino que a menudo Milligan abandonaba el sketch a la mitad y sal\u00eda de escena (a menudo murmurando \"\u00bfHe escrito yo esto?\"). Quedaba claro que su programa ahora ser\u00eda menos original, y Jones particularmente decidi\u00f3 que los Python deb\u00edan innovar.\nTras mucho debate, Jones record\u00f3 una animaci\u00f3n creada por Gilliam en Do Not Adjust Your Set llamada \"Beware of the Elephants\", que le hab\u00eda intrigado por su peculiar estilo. Jones pens\u00f3 que era un buen concepto para aplicar al programa: permitir que los sketches se combinaran unos con otros. A Palin tambi\u00e9n le hab\u00eda llamado la atenci\u00f3n otro de los trabajos de Gilliam, titulado \"Christmas Cards\", y estaba de acuerdo que representaba \"una forma diferente de hacer las cosas\". Como Cleese, Chapman e Idle estaban menos concienciados con el desarrollo general del programa, fueron, Jones, Palin y Gilliam los responsables principales del estilo de presentaci\u00f3n del Flying Circus, en el que los distintos sketches estaban unidos para dar a cada episodio un estilo particular (usando a menudo una animaci\u00f3n de Gilliam para pasar de la imagen final de un sketch a la de apertura del siguiente).\nLa escritura de los guiones comenzaba a las nueve de la ma\u00f1ana y finalizaba a las cinco de la tarde. Normalmente, Cleese y Chapman formaban una pareja aislada del resto, al igual que Jones y Palin, mientras que Idle escrib\u00eda solo. Unos d\u00edas despu\u00e9s, se reun\u00edan con Gilliam, criticaban los guiones e intercambiaban ideas y opiniones. La forma de escribir era democr\u00e1tica. Si la mayor\u00eda encontraba graciosa una idea, se inclu\u00eda en el show. Tambi\u00e9n era democr\u00e1tico el casting para los sketches, ya que cada miembro se ve\u00eda principalmente como escritor m\u00e1s que como un actor deseoso de aparecer en pantalla. Cuando se eleg\u00edan los temas de los sketches, Gilliam ten\u00eda libertad para unirlos con sus animaciones, usando una c\u00e1mara, tijeras y aer\u00f3grafo.\nAl ser el programa un proceso colaborativo, las diferentes facciones dentro del grupo eran responsables de los elementos del humor del grupo. En general, el trabajo de los alumnos de Oxford (Jones y Palin) era m\u00e1s visual e imaginativo conceptualmente, como la llegada de la Inquisici\u00f3n espa\u00f1ola a la casa de un barrio suburbano (Ver v\u00eddeo) mientras que los sketches de los alumnos de Cambridge eran m\u00e1s verbales y agresivos (como los sketches de \"confrontaci\u00f3n\" de Cleese y Chapman, donde un personaje intimida o abusa verbalmente de otro, o los personajes de Idle con extra\u00f1as peculiaridades verbales, como el hombre que habla en anagramas).[13]\u200b Cleese confirm\u00f3 que \"la mayor\u00eda de sketches agresivos eran de Graham y m\u00edos, cualquier cosa que empezaba con una panor\u00e1mica del campo y m\u00fasica impactante era de Mike y Terry, y cualquier cosa relacionada totalmente con palabras era de Eric\".[14]\u200b Mientras, las animaciones de Gilliam iban de lo extravagante a lo salvaje, ya que el formato animado le permit\u00eda crear escenas incre\u00edblemente violentas sin miedo a la censura.\nSe pensaron varios nombres para el programa antes de que se optara por Monty Python's Flying Circus. Algunos fueron Owl Stretching Time; The Toad Elevating Moment; A Horse, a Spoon and a Bucket; Vaseline Review; and Bun, Wackett, Buzzard, Stubble and Boot. Flying Circus apareci\u00f3 cuando la BBC dijo que hab\u00eda impreso ese nombre en su programaci\u00f3n y no estaba preparada para modificarlo. Se empezaron entonces a sugerir variaciones en torno a este nombre (se dice que la BBC consideraba Monty Python's Flying Circus un nombre rid\u00edculo, y el grupo decidi\u00f3 cambiar de nombre cada semana hasta que la cadena se rindiera). El nombre Gwen Dibley's Flying Circus surgi\u00f3 por una mujer sobre la que Palin hab\u00eda le\u00eddo en el peri\u00f3dico, pensando que ser\u00eda gracioso que ella descubriera que ten\u00eda su propio programa de televisi\u00f3n. Baron Von Took's Flying Circus fue considerado como un afectuoso homenaje a Barry Took, el hombre que los hab\u00eda unido. Despu\u00e9s se sugiri\u00f3 Arthur Megapode's Flying Circus y m\u00e1s tarde se desech\u00f3. Baron Von Took's Flying Circus recordaba al Circo volador Jasta 11 del Bar\u00f3n Manfred von Richthofen, que cobr\u00f3 fama en la Primera Guerra Mundial, y el grupo se form\u00f3 en una \u00e9poca en la que la canci\u00f3n Snoopy vs. the Red Baron estaba de moda. El t\u00e9rmino flying circus era otro nombre de un espect\u00e1culo popular en la d\u00e9cada de 1920 llamado barnstorming, en el que diversos pilotos hac\u00edan acrobacias dando lugar a un espect\u00e1culo.\nExisten diferentes y algo confusos or\u00edgenes del nombre Python, aunque los miembros del grupo est\u00e1n de acuerdo en que su \u00fanico \"significado\" era que consideraban que sonaba gracioso. En el documental de 1998 Live At Aspen, en el que el grupo recibi\u00f3 el galard\u00f3n del American Film Institute, explicaron que \"Monty\" fue elegido a propuesta de Eric Idle como un gui\u00f1o humor\u00edstico al Mariscal de Campo Montgomery, un legendario general brit\u00e1nico de la Segunda Guerra Mundial; y a\u00f1adiendo despu\u00e9s una palabra de pronunciaci\u00f3n suave, optaron por \"Python\". En otras ocasiones, Idle ha afirmado que el nombre \"Monty\" era un cliente habitual de su pub local; y la gente entraba a menudo preguntando al camarero: \"\u00bfYa ha llegado Monty?\", haciendo que el nombre quedara marcado en su cabeza. El nombre \"Monty Python\" fue descrito por la BBC como \"concebido por el grupo como el nombre perfecto para un agente de talentos corrupto\".[15]\u200b"}]}, {"name": "Largometrajes", "text": "El fen\u00f3meno de los Monty Python transcendi\u00f3 el mundo televisivo siendo sus protagonistas tambi\u00e9n responsables de la producci\u00f3n de varios largometrajes:\nSe arm\u00f3 la gorda (1971), 84 minutos[16]\u200b\nLos caballeros de la mesa cuadrada y sus locos seguidores (Monty Python and the Holy Grail) (1975)\nLa vida de Brian (Monty Python's Life of Brian) (1979)\nEl sentido de la vida (Monty Python's The Meaning of Life) (1983)\nPel\u00edculas concierto:\nMonty Python en Hollywood Bowl (Monty Python Live at the Hollywood Bowl) (1982), 77 minutos[17]\u200b\nConcert for George (2002)\nNot the Messiah (2010)\nOtras pel\u00edculas donde coincidieron parte de los miembros del grupo, sin ser producciones propiamente dichas del mismo (aunque heredan buena parte del humor y el surrealismo que les caracteriz\u00f3), fueron:\nLa Bestia del Reino (1977) con Terry Gilliam: director y guionista y Michael Palin y Terry Jones: actores.\nThe Rutles (1977) con Eric Idle: actor y guionista y Michael Palin: actor.\nLos H\u00e9roes del Tiempo (1981) con Terry Gilliam: director y guionista, Michael Palin: actor y guionista y John Cleese: actor.\nLos desmadrados piratas de Barba Amarilla (1983) con Graham Chapman: actor y guionista y Eric Idle y John Cleese: actores.\nBrazil (1985) con Terry Gilliam: director y guionista y Michael Palin: actor.\nLas aventuras del Bar\u00f3n Munchausen (1988) con Terry Gilliam: director y guionista y Eric idle: actor.\nUn pez llamado Wanda (1988) con John Cleese: actor y guionista y Michael Palin: actor.\nErik el vikingo (1989) con Terry Jones: director, guionista y actor y John Cleese: actor.\nReci\u00e9n nacido y ya coronado (1993) con Eric Idle: actor y guionista y John Cleese: actor.\nEl viento en los sauces (1996) con Terry Jones: director, guionista y actor y Eric Idle, Michael Palin y John Cleese: actores.\nCriaturas feroces (1997) con John Cleese: actor y guionista y Michael Palin: actor.\nShrek tercero (2007) con John Cleese y Eric Idle: actores de doblaje.\nA Liar's Autobiography (2013) con Graham Chapman: guionista y actor y John Cleese, Terry Gilliam, Terry Jones y Michael Palin: actores.\nAbsolutely Anything (2015) con Terry Gilliam, John Cleese, Terry Jones, Eric Idle y Michael Palin: voces de extraterrestres.", "subsections": []}, {"name": "Teatro", "text": "Monty Python's Spamalot, escrito por Eric Idle y dirigida por Mike Nichols, con m\u00fasica y letras de John Du Prez e Idle, con un reparto encabezado por Hank Azaria, Tim Curry y David Hyde Pierce. Spamalot es la adaptaci\u00f3n musical de la pel\u00edcula Monty Python and the Holy Grail. Se represent\u00f3 en Chicago del 21 de diciembre de 2004 al 23 de enero de 2005, y posteriormente se estren\u00f3 en Broadway el 17 de marzo de 2005. Gan\u00f3 tres Tonys.\nEn el cuarenta aniversario de los Monty Python (2009) se present\u00f3 en el Royal Albert Hall de Londres el oratorio c\u00f3mico \"Not the Messiah (He's a Very Naughty Boy)\" escrito por Eric Idle y John du Prez, con una \u00fanica funci\u00f3n. En dicha premier brit\u00e1nica y como celebraci\u00f3n del aniversario hicieron acto de presencia en diversos papeles secundarios, Michael Palin, Terry Jones y Terry Gilliam. Eric Idle actu\u00f3 como bar\u00edtono acompa\u00f1ado por una cuarteto vocal y la orquesta sinf\u00f3nica y coro de la BBC. Dicha actuaci\u00f3n se recopil\u00f3 en un blu-ray y DVD y sali\u00f3 a la venta en 2010. Esta obra es una adaptaci\u00f3n musical de su pel\u00edcula La vida de Brian y tiene un estilo m\u00e1s \"oper\u00edstico\" que Spamalot.", "subsections": []}, {"name": "Documentales", "text": "En 2009, con motivo del 40 aniversario de los Monty Phyton, se puso a la venta el documental Monty Python, Almost the truth (The lawyer's cut) o en su traducci\u00f3n al espa\u00f1ol, Monty Python, casi la verdad (La versi\u00f3n de los abogados). Esta serie documental est\u00e1 compuesta por 6 episodios, sketches, entrevistas extendidas a los cinco Monty Python vivos ese a\u00f1o (todos menos Graham Chapman) y material in\u00e9dito no emitido en televisi\u00f3n, con una duraci\u00f3n de casi ocho horas.", "subsections": []}, {"name": "Integrantes", "text": "Naci\u00f3 en South Shields, en el condado de Durham. Su padre falleci\u00f3 en un accidente cuando \u00e9l era peque\u00f1o, por lo que su madre le llev\u00f3 a la Royal Wolverhampton School para ser educado en dicho centro. Realiz\u00f3 sus estudios de literatura inglesa en la Universidad de Cambridge.\nIdle, el m\u00fasico del grupo, no es el autor de la canci\u00f3n de la serie de televisi\u00f3n Monty Python's Flying Circus, la cual es una marcha popular llamada \u00abLa campana de la Libertad\u00bb as\u00ed como de la mayor\u00eda de las canciones de las pel\u00edculas del grupo. En La vida de Brian canta la canci\u00f3n m\u00e1s reconocida de los Python, \u00abAlways Look On The Bright Side Of Life\u00bb. Idle es conocido por el uso de pelucas rid\u00edculas (una de las raras ocasiones en que no usa peluca es en la escena final de La vida de Brian), y por sus exasperantes papeles, como el hombre invisible, el hombre de las fotos, el hombre que quer\u00eda una hormiga, y otros. Idle tambi\u00e9n interpret\u00f3 al \"valiente\" Sir Robin en Los caballeros de la mesa cuadrada.\nEl \"Python agradable\", es, siguiendo a John Cleese y Eric Idle, el Python m\u00e1s conocido por su trabajo como actor y el m\u00e1s popular del grupo entre las fan\u00e1ticas femeninas. Particip\u00f3 con John Cleese en muchos de los mejores sketches de Monty Python's Flying Circus: los franceses de la oveja volante, o Centro de discusi\u00f3n. Realiz\u00f3 los papeles de Bevis, el barbero medio psic\u00f3pata travestido que quer\u00eda ser le\u00f1ador en el sketch \u00abLa Canci\u00f3n del Le\u00f1ador\u00bb y de Sir Galahad en Los caballeros de la mesa cuadrada. Aparec\u00eda al principio de cada episodio de \"Monty Python's Flying Circus\" como el n\u00e1ufrago que dec\u00eda \"It's...\"\nSu padre, un vendedor de seguros, cambi\u00f3 el apellido de la familia de \u00abCheese\u00bb a \u00abCleese\u00bb debido al significado de la palabra cheese, que en ingl\u00e9s es \"queso\". Cleese estudi\u00f3 derecho en la universidad de Cambridge. Lleg\u00f3 a ser famoso como el presentador de la BBC que aparec\u00eda sentado frente a un escritorio en lugares tan extra\u00f1os como una calle, una playa o un cami\u00f3n, y que dec\u00eda la frase \u00abAnd now for something completely different\u00bb (\u00aby ahora algo totalmente diferente\u00bb), que convirti\u00f3 en eslogan de los Monty Python. Fue, junto con Graham Chapman uno de los g\u00e9rmenes del grupo. Desde el fin de los Python se ha acostumbrado a trabajar en comedias de \u00e9xito de Hollywood\nGilliam naci\u00f3 en Medicine Lake, Minesota, en los Estados Unidos, y estudi\u00f3 Ciencias Pol\u00edticas en el Colegio Occidental de California. Siempre le llam\u00f3 m\u00e1s la atenci\u00f3n la direcci\u00f3n que la actuaci\u00f3n, por lo que sus papeles en la serie fueron muy espor\u00e1dicos y secundarios. Es conocido por las animaciones , en las que cortaba fotograf\u00edas y las volv\u00eda surrealistas. Despu\u00e9s de la disoluci\u00f3n del grupo, ha ganado fama como director de cintas serias y fant\u00e1sticas siendo, junto con John Cleese, el Python que m\u00e1s reconocimiento ha logrado.\nNaci\u00f3 el 1 de febrero de 1942 en la Bah\u00eda de Colwyn, en el norte del Gales. Junto con Gilliam, Jones es el otro Python no ingl\u00e9s. Recordado principalmente por sus papeles de mujer acompa\u00f1ado de la voz chillona que hac\u00eda. Fue la divertid\u00edsima madre de Brian en La vida de Brian, filme que dirigi\u00f3 \u00e9l mismo. Llev\u00f3 a cabo tambi\u00e9n Los caballeros de la mesa cuadrada, este \u00faltimo trabajando en cooperaci\u00f3n con Terry Gilliam y la \u00faltima pel\u00edcula con todos los Python, El sentido de la vida. Despu\u00e9s de la disoluci\u00f3n del grupo se dedic\u00f3, principalmente, a la televisi\u00f3n, como guionista y presentador. Dirigi\u00f3 tambi\u00e9n Erik el vikingo, y escribi\u00f3 el guion de Labyrinth. Tras varios a\u00f1os padeciendo una afasia progresiva primaria, muri\u00f3 el 21 de enero de 2020.\nConocido por protagonizar a personajes autoritarios, como el coronel famoso que interrump\u00eda los sketches. Tambi\u00e9n realiz\u00f3, varias veces, los papeles de doctor, para el que su formaci\u00f3n habr\u00e1 contribuido mucho, entre otros tantos otros papeles. Realiz\u00f3 los papeles principales en La vida de Brian, protagonizando el papel de Brian Cohen, y en Los caballeros de la mesa cuadrada, como el Rey Arturo. Con el tiempo, el alcoholismo perturb\u00f3 su desempe\u00f1o como actor. Mantuvo su homosexualidad en secreto hasta que lo confes\u00f3 en un programa de entrevistas presentado por el m\u00fasico de jazz George Melly. Tras la separaci\u00f3n del grupo, tendr\u00eda alguna que otra aparici\u00f3n en cine y televisi\u00f3n.\nUna de sus \u00faltimas apariciones fue en un videoclip de la banda inglesa de heavy metal Iron Maiden, concretamente el v\u00eddeo de la canci\u00f3n \u00abCan I Play with Madness\u00bb, de su disco Seventh Son of a Seventh Son, publicado en 1988. A mediados de ese mismo a\u00f1o, es diagnosticado con c\u00e1ncer de es\u00f3fago. \nGraham Chapman muri\u00f3 el 4 de octubre de 1989. Como parte de la eleg\u00eda de su funeral, Eric Idle cant\u00f3 un fragmento de \"Always Look On The Bright Side Of Life\", canci\u00f3n compuesta por \u00e9l mismo, con la que termina La vida de Brian y John Cleese realiz\u00f3 un mon\u00f3logo en donde tendr\u00eda que decir \"mierda\" a petici\u00f3n del propio Chapman.", "subsections": []}, {"name": "Influencia", "text": "Los Monty Python han ejercido una gran influencia en el humor contempor\u00e1neo. Su sentido del humor absurdo y pol\u00edticamente incorrecto fue algo totalmente novedoso en su momento y el impacto de este es comparado al de los Beatles en la m\u00fasica.\nLos Monty Python dieron nombre, al parecer sin su conocimiento, al lenguaje de programaci\u00f3n Python. Muchos de los ejemplos de uso de Python y nombres de sus componentes se basan en obras de este grupo. \nSu influencia en el mundo de la inform\u00e1tica tambi\u00e9n puede encontrarse en la palabra spam, derivada de uno de sus sketchs.\nEl lem\u00farido Avahi cleesei, de Madagascar, es una especie de primate apodada as\u00ed en honor a John Cleese, quien posee una gran afici\u00f3n por los l\u00e9mures, y colabora en organizaciones para salvar las especies en peligro de estos.\nEntre los artistas m\u00e1s influenciados por los Python est\u00e1n Mike Myers, Trey Parker, Matt Stone, Eddie Izzard, Seth MacFarlane, Matt Groening, Douglas Adams y el conjunto c\u00f3mico-musical argentino Les Luthiers, entre otros.\nTambi\u00e9n en Argentina, el actor y humorista Diego Capusotto, junto con el escritor Pedro Saborido, han realizado 12 temporadas de sketches con distintos personajes en un ciclo sin precedentes llamado Peter Capusotto y sus videos. Capusotto ha manifestado en varias ocasiones que una de sus grandes influencias fue Monty Python.", "subsections": []}, {"name": "Referencias", "text": "\u2191 Wilmut (1980), p.250.\n\u2191 The Pythons by 'The Pythons' ISBN 0-7528-5293-0\n\u2191 1. Whetting Your Appetite\n\u2191 Todd Leopold (11 de diciembre de 2003). How Monty Python changed the world. CNN. Consultado el 30 de marzo de 2007. \u00abPython has been called \"the Beatles of comedy,\"\u00bb.\u00a0\n\u2191 Mark Lewisohn. \u00abMonty Python's Flying Circus\u00bb. The bbc.uk.co Guide to Comedy. BBC. Consultado el 31 de marzo de 2007. \u00abIn essence, the Monty Python team are the comedy equivalent of the Beatles.\u00bb\u00a0\n\u2191 'Holy' Monty Python History Lesson. Entertainment Tonight. Consultado el 24 de abril de 2012 \n\u2191 'Monty Python' Reunion Planned for New Movie. Christian Post. Consultado el 24 de abril de 2012\n\u2191 BBC News, ed. (2 de enero de 2005). \u00abCook voted 'comedians' comedian'\u00bb. Consultado el 21 de septiembre de 2008.\u00a0\n\u2191 Agencia EFE (18 de agosto de 2009). \u00abPremio para los caballeros de humor absurdo\u00bb. El Pa\u00eds. Consultado el 19 de agosto de 2009.\u00a0\n\u2191 The Pythons Autobiography By The Pythons\u2014Graham Chapman, John Cleese, Terry Gilliam, Eric Idle, Terry Jones, Michael Palin, John Chapman, David Sherlock, Bob McCabe\u2014Thomas Dunne Books; Orion, 2003\n\u2191 \"The Roots of Monty Python\". BFI Screenonline. Consultado el 23 de enero de 2013\n\u2191 \"The Silliest Interview We've Ever Had / The Silliest Sketch We've Ever Done\". MontyPython.net. Consultado el 23 de enero de 2013\n\u2191 Monty Python - The Man Who Talks in Anagrams, archivado desde el original el 1 de septiembre de 2018, consultado el 12 de junio de 2019\u00a0.\n\u2191 Wilmut (1980), p.211\n\u2191 \u00abBBC \u2013 Comedy \u2013 Monty Python\u00bb.\u00a0\n\u2191 And Now for Something Completely Different (en ingl\u00e9s)\n\u2191 Monty Python Live at the Hollywood Bowl (en ingl\u00e9s)", "subsections": [{"name": "Bibliograf\u00eda", "text": "Chapman, Graham (1997). Graham Crackers: Fuzzy Memories, Silly Bits, and Outright Lies, Career Pr Inc. ISBN 1-56414-334-1\nLandy, Marcia (2005). Monty Python's Flying Circus. Wayne State University Press. ISBN\u00a00-8143-3103-3.\u00a0\nMorgan, David (junio de 1999). Monty Python Speaks, a Spike imprint, Avon Books Inc., New York, New York. ISBN 0-380-80479-4\nWilmut, Roger (1980). From Fringe to Flying Circus, Eyre Methuen Ltd, Londres. ISBN 0-413-50770-X"}]}, {"name": "Enlaces externos", "text": "Sitio web oficial de Monty Python (en ingl\u00e9s)\nArt\u00edculo sobre los Monty Python con enlaces a algunos de sus mejores sketchs.\nM\u00e1s informaci\u00f3n sobre los Monty Python", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Multiplataforma", "title": "Multiplataforma", "summary": "Por favor, ed\u00edtalo y/o discute el problema en la discusi\u00f3n para mejorarlo:\nCarece de fuentes o referencias que aparezcan en una fuente acreditada.\nEn inform\u00e1tica, se denomina multiplataforma a un atributo conferido a programas inform\u00e1ticos o m\u00e9todos y conceptos de c\u00f3mputacion que son implementados, y operan internamente en m\u00faltiples plataformas inform\u00e1ticas. El software multiplataforma puede dividirse en dos grandes tipos o clases: uno requiere una compilaci\u00f3n individual para cada plataforma que le da soporte, y el otro se puede ejecutar directamente en cualquier plataforma, sin preparaci\u00f3n especial, por ejemplo, el software escrito en un lenguaje interpretado o bytecode precompilado portable, para los cuales los int\u00e9rpretes o paquetes en tiempo de ejecuci\u00f3n son componentes comunes o est\u00e1ndar de todas las plataformas.\nPor ejemplo, una aplicaci\u00f3n multiplataforma puede ejecutarse sin problema alguno, tanto en Microsoft Windows en la arquitectura x86, como en Linux en la arquitectura x86 y Mac OS X, ya sea en el PowerPC o sistemas Apple Macintosh basados en x86. En general, una aplicaci\u00f3n multiplataforma se puede ejecutar tanto en todas las plataformas existentes o como m\u00ednimo dos plataformas.[1]\u200b", "sections": [{"name": "Plataformas", "text": "Una plataforma es una combinaci\u00f3n de hardware y software utilizado para ejecutar aplicaciones de software. Una plataforma puede ser descrita simplemente como un sistema operativo o arquitectura de ordenador, o podr\u00eda ser la combinaci\u00f3n de ambos (un ejemplo de una plataforma com\u00fan es Microsoft Windows que se ejecuta en la arquitectura x86). Otras conocidas plataformas de computadoras de escritorio incluyen Linux/Unix y Mac OS X (ambos de los cuales son a su vez multiplataforma). Hay, sin embargo, muchos dispositivos, como los tel\u00e9fonos m\u00f3viles que tambi\u00e9n son efectivamente plataformas inform\u00e1ticas, aunque com\u00fanmente sean menos considerados de esa manera. Una aplicaci\u00f3n se puede escribir en dependencia de las caracter\u00edsticas de una determinada Plataforma, ya sea el hardware, sistema operativo, o m\u00e1quina virtual en que se ejecuta. La plataforma Java es una m\u00e1quina virtual de la plataforma que se ejecuta en sistemas operativos y tipos de hardware, y es una plataforma de software com\u00fan para escribir (programar).", "subsections": [{"name": "Plataformas de hardware", "text": "Una plataforma de hardware puede referirse a la arquitectura del ordenador o la arquitectura del procesador. Por ejemplo, los CPUs x86 y x86-64 constituyen una de las m\u00e1s comunes arquitecturas de computadoras en uso en los ordenadores de prop\u00f3sito general. Estas m\u00e1quinas suelen ejecutar una versi\u00f3n de Microsoft Windows, aunque tambi\u00e9n se puede ejecutar otro sistemas operativos, tales como Linux, OpenBSD, NetBSD, Mac OS X yFreeBSD.\nUna arquitectura ARM es com\u00fan en los tel\u00e9fonos inteligentes y Tablet PC, que corren Windows, Android, iOS y otros sistemas operativos m\u00f3viles."}, {"name": "Plataformas de software", "text": "Las plataformas de software puede ser un sistema operativo o entorno de programaci\u00f3n, aunque m\u00e1s com\u00fanmente se trata de una combinaci\u00f3n de ambos. Una notable excepci\u00f3n a esto es Java, que utiliza un sistema operativo independiente de la m\u00e1quina virtual para cada c\u00f3digo compilado, conocido en el mundo de Java como bytecode. Ejemplos de plataformas de software incluyen:\nAndroid (sistema operativo) para tel\u00e9fonos inteligentes y Tablet PC\nAmigaOS (m68k), AmigaOS 4 (PowerPC), AROS (x86, PowerPC, m68k), MorphOS (PowerPC)\nBSD, muy multiplataforma (ver NetBSD, por ejemplo)\nJava\nLinux (x86, x86-64, PowerPC, y otras arquitecturas)\niOS (ARM)\nMac OS X (x86, x86-64)\nMicrosoft Windows (x86, x86-64, ARM)\nDOS sistemas de tipo en el x86: MS-DOS, IBM PC-DOS, DR-DOS, FreeDOS, etc.\nOS/2, eComStation\nSolaris (SPARC, x86, x86-64)\nLa CLI, tambi\u00e9n conocido por los nombres de aplicaci\u00f3n .NET Framework (de Microsoft) y Mono (de Novell)\nPlataforma Java\nComo ya se ha se\u00f1alado, la plataforma Java es una excepci\u00f3n a la regla general de que un sistema operativo es una plataforma de software. El lenguaje Java requiere de una m\u00e1quina virtual, o un \"CPU virtual\" en el que se ejecuta todo el c\u00f3digo que se escribe en el lenguaje. Esto permite que el mismo ejecutable binario pueda ejecutarse en todos los sistemas, apoyado por el software Java, a trav\u00e9s del uso de una m\u00e1quina virtual Java (JVM). Ejecutables de Java no se ejecutan de forma nativa en el sistema operativo, es decir, ni de Windows, ni Linux ejecutan programas Java directamente.\nAunque el c\u00f3digo Java no se ejecuta de forma nativa, la JVM es plenamente capaz de proporcionar servicios relacionados con el sistema operativo, como el disco I/O y el acceso a la red, si los privilegios adecuados se conceden. La JVM permite a los usuarios decidir el nivel de protecci\u00f3n adecuado, seg\u00fan una ACL. Por ejemplo, el acceso a disco y de red est\u00e1 habilitado normalmente para aplicaciones de escritorio, pero no para applets basados en el navegador.\nJNI tambi\u00e9n se puede utilizar para permitir el acceso a funciones espec\u00edficas de los sistemas operativos. En la actualidad, los programas Java pueden ejecutarse en Microsoft Windows, Mac OS X, Linux y sistemas operativos Solaris. Para aplicaciones m\u00f3viles, los plugins de los navegadores se utilizan en dispositivos basados en Windows y Mac, Android tiene soporte incorporado para Java."}, {"name": "Software multiplataforma", "text": "Para que el software pueda ser considerado multiplataforma, debe ser capaz de funcionar en m\u00e1s de una arquitectura de ordenador o sistema operativo. Esto puede ser una tarea que consume tiempo, ya que los diferentes sistemas operativos tienen diferentes interfaces de programaci\u00f3n de aplicaciones o API (por ejemplo, Linux utiliza una API diferente de Windows).\nEl hecho de que un determinado sistema operativo se pueda ejecutar en diferentes arquitecturas de computadora no quiere decir que el software escrito para ese sistema operativo autom\u00e1ticamente funcione en todas las arquitecturas que soporta el sistema operativo. Por ejemplo, a partir de agosto de 2006 OpenOffice.org no se ejecutaba de forma nativa en los AMD64 o Intel 64 l\u00edneas de procesadores los est\u00e1ndares para computadores de x86-64 64 bit. Sin embargo, desde entonces la situaci\u00f3n ha cambiado, y la suite OpenOffice.org de software ha sido portada a los sistemas de 64-bit. Esto tambi\u00e9n significa que solo porque un programa se escriba en un popular lenguaje de programaci\u00f3n como C o C++, no tiene por qu\u00e9 funcionar en todos los sistemas operativos que soporten la programaci\u00f3n de dicho lenguaje o incluso en el mismo sistema operativo en una arquitectura diferente."}, {"name": "Aplicaciones Web", "text": "Las aplicaciones Web suelen ser descritas como multiplataforma, ya que, idealmente, se puede acceder desde cualquiera de los diversos navegadores web en diferentes sistemas operativos. Tales aplicaciones generalmente emplean una arquitectura de sistema cliente-servidor, y pueden variar ampliamente en complejidad y funcionalidad. Esta amplia variabilidad complica considerablemente la meta de capacidad multiplataforma, que es rutinariamente en contradicci\u00f3n con el objetivo de funcionalidad avanzada."}, {"name": "Aplicaciones b\u00e1sicas", "text": "Aplicaciones web b\u00e1sicas lleva cabo la totalidad o la mayor parte del procesamiento de un servidor web \"Stateless\", y pasar el resultado al navegador web del cliente. Toda la interacci\u00f3n del usuario con la aplicaci\u00f3n consta de simples intercambios de solicitudes de datos y las respuestas del servidor. Este tipo de aplicaciones son la norma en las fases iniciales de la World Wide Web de desarrollo de aplicaciones. Tales aplicaciones siguen un simple transacci\u00f3n modelo, id\u00e9ntica a la de servir p\u00e1ginas web est\u00e1ticas. Hoy en d\u00eda, siguen siendo relativamente com\u00fan, especialmente cuando la compatibilidad entre plataformas y la simplicidad se considera m\u00e1s importante que las funcionalidades avanzadas. "}, {"name": "Aplicaciones avanzadas", "text": "Ejemplos destacados de las aplicaciones web avanzadas incluyen la interfaz web a Gmail, A9.com, y la p\u00e1gina web maps.live.com, parte del Live Search servicio de Microsoft. Tales aplicaciones avanzadas habitualmente dependen de las funciones adicionales que se encuentran solo en las versiones m\u00e1s recientes de los navegadores web m\u00e1s populares. Estas dependencias incluyen Ajax, JavaScript, HTML \"Din\u00e1mico\", SVG, y otros componentes de las aplicaciones ricas de Internet. Las versiones antiguas de los navegadores web m\u00e1s populares tienden a carecer de apoyo a ciertas caracter\u00edsticas."}]}, {"name": "Multiplataforma en los videojuegos", "text": "Tambi\u00e9n puede aplicarse a los videojuegos lanzados en una gama de consolas de videojuegos, computadoras especializadas dedicadas a la tarea de jugar juegos. Entre los ejemplos de videojuegos multiplataforma se incluyen: Miner 2049er, Tomb Raider: Legend, FIFA (serie de videojuegos), NHL Series y Minecraft.\nCada uno de ellos ha sido lanzado en una variedad de plataformas de juego, como la Wii, PlayStation 3, Xbox 360, computadoras personales (PC) y dispositivos m\u00f3viles.\nLas caracter\u00edsticas de un sistema particular pueden alargar el tiempo necesario para implementar un videojuego en m\u00faltiples plataformas. As\u00ed, un videojuego puede ser lanzado inicialmente en unas pocas plataformas y posteriormente en las restantes. Normalmente, esta situaci\u00f3n se produce cuando se lanza un nuevo sistema de juego, porque los desarrolladores de videojuegos necesitan familiarizarse con el hardware y el software asociados a la nueva consola.\nEs posible que algunos juegos no se conviertan en multiplataforma debido a los acuerdos de licencia entre los desarrolladores y los fabricantes de consolas de videojuegos que limitan el desarrollo de un juego a una consola en particular. Por ejemplo, Disney podr\u00eda crear un juego con la intenci\u00f3n de lanzarlo en las \u00faltimas consolas de Nintendo y Sony. En caso de que Disney conceda la licencia del juego a Sony en primer lugar, se le podr\u00eda exigir a cambio que lanzara el juego \u00fanicamente en la consola de Sony por un per\u00edodo corto o indefinido, prohibiendo efectivamente el lanzamiento multiplataforma durante ese per\u00edodo.", "subsections": [{"name": "Juego multiplataforma", "text": "Varios desarrolladores han implementado medios para jugar en l\u00ednea mientras utilizan diferentes plataformas. Psyonix, Epic Games, Microsoft y Valve poseen tecnolog\u00eda que permite a los jugadores de Xbox 360 y PlayStation 3 jugar con jugadores de PC, dejando la decisi\u00f3n de qu\u00e9 plataforma usar a los consumidores. El primer juego que permiti\u00f3 este nivel de interactividad entre los juegos de PC y consola fue Quake 3.\nLos juegos que incluyen juego en l\u00ednea multiplataforma incluyen Fortnite: Battle Royale, Rocket League, Final Fantasy XIV, Street Fighter V, Killer Instinct, Paragon y Fable Fortune, y Minecraft con su actualizaci\u00f3n Better Together para Windows 10, ediciones VR, Pocket Edition y Xbox One."}]}, {"name": "Estrategias de dise\u00f1o", "text": "A causa de los intereses en conflicto de compatibilidad entre plataformas y funcionalidades avanzadas, han surgido numerosas alternativas de dise\u00f1o de aplicaciones web.\nTales estrategias incluyen:", "subsections": [{"name": "Degradaci\u00f3n correcta", "text": "Degradaci\u00f3n correcta intenta proporcionar la misma funcionalidad o similar para todos los usuarios y plataformas, mientras que la disminuci\u00f3n de la funcionalidad de un \"m\u00ednimo com\u00fan denominator\" para obtener m\u00e1s exploradores cliente limitados. Por ejemplo, un usuario que intenta usar una caracter\u00edstica limitada de un navegador para acceder a Gmail puede notar que Gmail cambia al \"modo b\u00e1sico\", con funcionalidad reducida. Algunos ven esta estrategia como una forma menor de la capacidad multiplataforma."}, {"name": "Separaci\u00f3n de funciones", "text": "La separaci\u00f3n de las funcionalidades para simplificar la omici\u00f3n de los subconjuntos de funciones que no soportan los exploradores de los clientes dentro de ciertos sistemas operativos, sin dejar de ofrecer una \"completa\" aplicaci\u00f3n para el usuario."}, {"name": "C\u00f3digo base m\u00faltiple", "text": "M\u00faltiples aplicaciones codebase presentar diferentes versiones de una aplicaci\u00f3n en funci\u00f3n del cliente espec\u00edfico en uso. Esta estrategia es sin duda la forma m\u00e1s complicada y costosa de cumplir la capacidad multiplataforma, ya que incluso las diferentes versiones del navegador del cliente mismo (dentro del mismo sistema operativo) puede diferir considerablemente entre s\u00ed. Esto se complica a\u00fan m\u00e1s por el apoyo a plugins que puede o no estar presente para cualquier instalaci\u00f3n dada de un navegador web particular."}, {"name": "Bibliotecas de terceros", "text": "Bibliotecas de terceros intentan simplificar la capacidad multiplataforma de \"esconder\" las complejidades de las diferencias de los clientes detr\u00e1s de un API unificada."}]}, {"name": "Estrategias de prueba", "text": "Un aspecto complicado del dise\u00f1o de las aplicaciones web multiplataforma es la necesidad de pruebas de software. Adem\u00e1s de las complicaciones mencionadas anteriormente, existe la restricci\u00f3n adicional de que algunos navegadores web proh\u00edben la instalaci\u00f3n de diferentes versiones del mismo navegador en el mismo sistema operativo. T\u00e9cnicas tales como la virtualizaci\u00f3n completa se utilizan a veces como una soluci\u00f3n para este problema.", "subsections": []}, {"name": "Aplicaciones tradicionales", "text": "Aunque las aplicaciones web se est\u00e1n convirtiendo cada vez m\u00e1s popular, muchos usuarios todav\u00eda utilizan la aplicaci\u00f3n de software tradicional que no se basa en una arquitectura cliente/servidor web. La distinci\u00f3n entre las \"tradicionales\" y las aplicaciones \"web\" no es siempre inequ\u00edvoca, sin embargo, ya que las aplicaciones tienen muchas caracter\u00edsticas diferentes, los m\u00e9todos de instalaci\u00f3n y arquitecturas, y algunas de ellas pueden superponerse y ocurrir de maneras que difuminan la distinci\u00f3n. Sin embargo, esta distinci\u00f3n simplificada es una generalizaci\u00f3n com\u00fan y \u00fatil. ", "subsections": []}, {"name": "Software binario", "text": "Tradicionalmente en la inform\u00e1tica moderna, la aplicaci\u00f3n de software se ha distribuido a los usuarios finales como im\u00e1genes binarias, que se almacenan en archivos ejecutables, un tipo espec\u00edfico de archivo binario. Estos ejecutables solo admiten el sistema operativo y arquitectura de computadores que fueron construidas, lo que significa que haciendo un \"ejecutable multiplataforma\" ser\u00eda algo as\u00ed como una enorme tarea, y por lo general no se hace.\nPara el software que se distribuye como un archivo ejecutable binario, como el software escrito en C o C++, el programador debe crear el software para cada sistema operativo diferente y arquitectura de computadoras. Por ejemplo, Mozilla Firefox, un navegador web de c\u00f3digo abierto, est\u00e1 disponible en Microsoft Windows, Mac OS X (tanto PowerPC y x86 a trav\u00e9s de algo que Apple llama un binario universal), y Linux en arquitecturas de varios equipos. Las tres plataformas (en este caso, de Windows, Mac OS X y Linux) son distribuciones ejecutables independientes, si bien proceden del mismo c\u00f3digo fuente.\nEn el contexto del software binario, los programas multiplataforma est\u00e1n escritos en el c\u00f3digo fuente y luego, \"traducido\" a cada sistema que se ejecuta a trav\u00e9s de la compilaci\u00f3n en plataformas diferentes. Adem\u00e1s, el software puede ser portado a una arquitectura de computadora nueva o sistema operativo para que el programa se hace m\u00e1s multiplataforma de lo que ya es. Por ejemplo, un programa como Firefox, que ya se ejecuta en Windows en la familia x86, se puede modificar y re-programar para ejecutarse en Linux en x86 (y potencialmente otras arquitecturas) tambi\u00e9n.\nComo alternativa a la portabilidad, la virtualizaci\u00f3n de multiplaforma permite que las aplicaciones compiladas para una CPU y el sistema operativo se ejecute en un sistema con una CPU y/o sistema operativo, sin modificar el c\u00f3digo fuente o binarios. Por ejemplo, Apple Rosetta software, que est\u00e1 integrado en Intel basados en ordenadores Apple Macintosh, ejecuta las aplicaciones compiladas para la anterior generaci\u00f3n de Mac que utilizan PowerPC CPU. Otro ejemplo es IBM PowerVM Lx86, que permite Linux/x86 aplicaciones para ejecutarse sin modificaciones en el Linux/Sistema operativo de encendido.", "subsections": []}, {"name": "Scripts y lenguajes interpretados", "text": "Un script puede ser considerado como multiplataforma si su int\u00e9rprete est\u00e1 disponible en m\u00faltiples plataformas y la secuencia de comandos solo utiliza los servicios proporcionados por el lenguaje. Es decir, un script escrito en Python para un sistema como Unix probablemente se ejecutar\u00e1 con poca o ninguna modificaci\u00f3n en el de Windows, ya que tambi\u00e9n se ejecuta en Python de Windows, tambi\u00e9n hay m\u00e1s de una implementaci\u00f3n de Python que se ejecutan los mismos scripts (por ejemplo, IronPython para .NET). Lo mismo ocurre con muchos de los lenguajes de programaci\u00f3n de c\u00f3digo abierto que est\u00e1n disponibles y son lenguajes de scripting.\nA diferencia de los binarios ejecutables, el script puede utilizar el mismo en todos los equipos que tienen el software para interpretar la secuencia de comandos. Esto se debe a que las secuencias de comandos se almacenan generalmente en un texto sin formato en un archivo de texto. Puede haber algunos problemas, sin embargo, como el tipo de car\u00e1cter de l\u00ednea nueva que se encuentra entre las l\u00edneas. Generalmente, sin embargo, el trabajo poco o nada tiene que hacer para que un script escrito para un sistema, ejecute en otro.\nAlgunos muy populares entre plataformas scripting o lenguajes interpretados son:\nUn shell de Unix en el que com\u00fanmente se ejecutan en Linux y otros modernos sistemas Unix, as\u00ed como en Windows a trav\u00e9s de Cygwin POSIX (capa de compatibilidad).\nPerl - Un lenguaje de scripting creado en 1987. Se utiliza para programaci\u00f3n CGI WWW, peque\u00f1os sistemas de administraci\u00f3n de tareas y m\u00e1s.\nPHP - El lenguaje de scripting m\u00e1s popular en uso de las aplicaciones web.\nRuby - Un lenguaje de scripting cuyo prop\u00f3sito es ser orientado a objetos y f\u00e1cil de leer. Tambi\u00e9n se puede utilizar en la web a trav\u00e9s de Ruby on Rails.\n- Un lenguaje de programaci\u00f3n din\u00e1mico, adecuado para una amplia gama de aplicaciones, incluyendo aplicaciones web y de escritorio, redes, administraci\u00f3n de pruebas y muchos m\u00e1s.", "subsections": []}, {"name": "Videojuegos", "text": "Multiplataforma es un t\u00e9rmino que tambi\u00e9n puede aplicarse a los videojuegos liberados en una serie de consolas de videojuegos, especializados ordenadores dedicados a la tarea de jugar. Ejemplos de juegos de video multiplataforma son:\nMinero 2049er\nPhantasy Star Online\nTomb Raid\nCada uno ha sido puesto en libertad a trav\u00e9s de una variedad de plataformas de juego, como la Wii, PlayStation 3, Xbox 360, ordenadores personales (PCs), y dispositivos m\u00f3viles.\nLas caracter\u00edsticas de un sistema particular puede prolongar el tiempo necesario para implementar un juego de v\u00eddeo en m\u00faltiples plataformas. As\u00ed, un videojuego puede inicialmente ser puesto en algunas plataformas y posteriormente puesto en libertad el resto de plataformas. Por lo general, esta situaci\u00f3n se produce cuando un nuevo sistema de juego es liberado, porque los desarrolladores de videojuegos que se familiaricen con el hardware y el software asociado con la nueva consola.\nAlgunos juegos no pueden ser multiplataforma debido a los acuerdos de licencia entre los desarrolladores y fabricantes de videojuegos de consola que limitan el desarrollo de un juego para una consola en particular. Como ejemplo, Disney podr\u00eda crear un juego con la intenci\u00f3n de la liberaci\u00f3n en la \u00faltima Nintendo y Sony consolas de juegos. En caso de licencia de Disney del juego de Sony primero, Disney puede en cambio ser necesaria para liberar el juego \u00fanicamente en Sony de la consola por un corto tiempo o indefinidamente.\nVarios desarrolladores han puesto en marcha los medios para jugar juegos en l\u00ednea durante el uso de diferentes plataformas. Epic Games, Microsoft y Valve Software todos poseemos la tecnolog\u00eda que permite a Xbox 360 y PlayStation 3 a los jugadores jugar con los jugadores de PC, dejando la decisi\u00f3n de qu\u00e9 plataforma utilizar para los consumidores. El primer juego para permitir que este nivel de interactividad entre el PC y consola de juegos era Quake 3.\nLos juegos que ofrecen multiplataforma juego en l\u00ednea incluyen:\nKane & Lynch: Dead Men\nLost Planet: Colonies\nPhantasy Star Online\nShadowrun\nBlazBlue: Calamity Trigger\nUno\nFinal Fantasy XI Online\nEl Universo en Guerra: Asalto a la Tierra\nCuarto de juegos\nTeam Fortress 2\nPortal 2\nDust 514 con Eve Online\nMinecraft", "subsections": []}, {"name": "Software plataforma-independiente", "text": "El software que es independiente de la plataforma no se basa en las caracter\u00edsticas especiales de cualquier plataforma \u00fanica, o, si lo hace, se ocupa de las caracter\u00edsticas especiales que la hacen frente a m\u00faltiples plataformas.", "subsections": []}, {"name": "Programaci\u00f3n multiplataforma", "text": "La programaci\u00f3n multiplataforma es la pr\u00e1ctica de la forma activa de la escritura de software que funciona en m\u00e1s de una plataforma.", "subsections": [{"name": "M\u00e9todos de programaci\u00f3n multiplataforma", "text": "Hay diferentes maneras de abordar el problema de escribir una aplicaci\u00f3n multiplataforma. Una de ellos es simplemente crear varias versiones del mismo programa en diferentes \u00e1rboles de c\u00f3digo fuente, es decir, la versi\u00f3n de Windows de un programa puede tener un conjunto de archivos de c\u00f3digo fuente y la versi\u00f3n de Macintosh podr\u00eda tener otro, mientras que un software libre con sistema Unix podr\u00eda tener otro. Si bien este es un enfoque simple para el problema, tiene el potencial de ser mucho m\u00e1s caro en costos de desarrollo, tiempo de desarrollo, o ambos, sobre todo para las entidades corporativas. La idea detr\u00e1s de esto es crear m\u00e1s de dos programas diferentes que tienen la capacidad de comportarse de manera similar a la otra. Tambi\u00e9n es posible que este medio de desarrollo de una aplicaci\u00f3n multiplataforma dar\u00e1 lugar a m\u00e1s problemas de seguimiento de errores y corregir, porque los dos \u00e1rboles diferentes fuentes tendr\u00eda programadores diferentes, y por lo tanto los defectos diferentes en cada versi\u00f3n. Cuanto menor sea el equipo de programaci\u00f3n, m\u00e1s r\u00e1pido las correcciones de errores tienden a ser.\nOtro enfoque que se utiliza es depender de un software preexistente que oculta las diferencias entre la platform, llamado abstracci\u00f3n de la Platform, de tal manera que el programa en s\u00ed mismo no es consciente de la plataforma que se est\u00e1 ejecutando. Se podr\u00eda decir que este tipo de programas son independientes de la plataforma. Los programas que se ejecutan en la m\u00e1quina virtual de Java (JVM) se construyen de esta manera.\nAlgunas aplicaciones mezclan diversos m\u00e9todos de programaci\u00f3n multiplataforma para crear la aplicaci\u00f3n final. Un ejemplo de esto es el navegador web Firefox, que utiliza la abstracci\u00f3n para construir algunos de los componentes de nivel inferior, subestructuras separadas de c\u00f3digo para implementar las caracter\u00edsticas espec\u00edficas de la plataforma (como la interfaz gr\u00e1fica de usuario), y la aplicaci\u00f3n de m\u00e1s de un lenguaje de scripting para ayudar a facilitar facilidad de portabilidad. Firefox implementa XUL, CSS y JavaScript para la extensi\u00f3n del navegador, adem\u00e1s de plugins al estilo del cl\u00e1sico navegador Netscape. Gran parte del mismo navegador en s\u00ed est\u00e1 escrito en XUL, CSS y JavaScript, tambi\u00e9n."}, {"name": "Herramientas de programaci\u00f3n y entornos multiplataforma", "text": "Hay una serie de herramientas que est\u00e1n disponibles para ayudar a facilitar el proceso de programaci\u00f3n multiplataforma:\nEl Cairo: Un software libre, biblioteca que se utiliza para proporcionar un vector basado en gr\u00e1ficos, independiente del API del dispositivo. Est\u00e1 dise\u00f1ado para proporcionar primitivas para dibujos bidimensionales a trav\u00e9s de un n\u00famero de diferentes sistemas de apoyo. El Cairo est\u00e1 escrito en C y tiene enlaces para muchos lenguajes de programaci\u00f3n.\nEclipse: Entorno de desarrollo multiplataforma, c\u00f3digo abierto. Implementado en Java con una arquitectura configurable que soporta muchas herramientas para desarrollo de software. Complementos disponibles para varios lenguajes, como Java y C++.\nFLTK: Otro c\u00f3digo abierto multiplataforma. Kit de herramientas, pero m\u00e1s ligero, ya que se limita a la GUI. Un conjunto de herramientas de fuente abierta widget de que est\u00e1 completamente implementado en Object Pascal. Actualmente es compatible con Linux, Windows y un poco de Windows CE.\nGeneXus: En Windows es una soluci\u00f3n r\u00e1pida de desarrollo de software para la creaci\u00f3n de aplicaciones multiplataforma y de despliegue basado en la representaci\u00f3n del conocimiento y el apoyo a C#, Cobol, Java incluyendo Android y BlackBerry dispositivos inteligentes, Objective-C para el de Apple dispositivos m\u00f3viles, RPG, Ruby, Visual Basic y Visual FoxPro.Un conjunto de herramientas de c\u00f3digo abierto para el widget de sistemas tipo Unix con X11 y Microsoft Windows.Un lenguaje multiplataforma de c\u00f3digo abierto Un framework de aplicaciones escritas en C++, que se utiliza para escribir software nativo en numerosos sistemas (Microsoft Windows, POSIX, Mac OS X), sin cambios en el c\u00f3digo.\nQt (toolkit): Una estructura de aplicaciones y Widget Toolkit para sistemas Unix con X11, Microsoft Windows, Mac OS X, disponible tanto en virtud de c\u00f3digo abierto y licencias propietarias.\nReal Studio: un IDE RAD desarrollado por Real Software, utiliza un dialecto orientado a objetos del lenguaje de programaci\u00f3n BASIC, y produce binarios compilados para Mac OS X, Windows y Linux, como tambi\u00e9n, ser capaz de producir cgi aplicaciones basadas en web. El soporte iOS est\u00e1 actualmente en desarrollo.\nSimple DirectMedia Layer: Una librer\u00eda de multimedia multiplataforma de c\u00f3digo abierto, escrita en C que proporciona acceso de nivel bajo y alto a los gr\u00e1ficos, de entrada, audio, etc.\nPlataforma Smartface: Una herramienta multiplataforma para Windows que se usa para crear aplicaciones m\u00f3viles para J2ME, Symbian S60, Blackberry y Android, usando herramientas de arrastrar y soltar y edici\u00f3n de acciones.\nTcl/Tk\nUltimate++: es un marco de desarrollo r\u00e1pido de aplicaciones multiplataforma de C++ centrado en la productividad de los programadores. Incluye un conjunto de bibliotecas de usuario (GUI, SQL, etc.), Y un entorno de desarrollo integrado. Es compatible con Windows y Unix OS-s. El U++ compite con lenguajes de scripting populares preservando caracter\u00edsticas de C/C++ de tiempo de ejecuci\u00f3n. Tiene su propio entorno de desarrollo integrado, TheIDE, que cuenta con BLITZ-construir tecnolog\u00eda para aceleraci\u00f3n de C++ reconstruyendo hasta 4 veces el compilado.\nwxWidgets: un juego de herramientas widget de fuente abierta que es tambi\u00e9n un marco de aplicaci\u00f3n. Se ejecuta en sistemas Unix con X11, Microsoft Windows y Mac OS X. Se permite que las aplicaciones escritas para usarlo para funcionar en todos los sistemas que lo soporta, si la aplicaci\u00f3n no utiliza ning\u00fan sistema operativo espec\u00edfico de programaci\u00f3n, adem\u00e1s de a la misma.\nXPower++: es un IDE multiplataforma para Windows, Linux, Mac OS X y sistemas operativos m\u00f3viles."}, {"name": "Desaf\u00edos para el desarrollo multiplataforma", "text": "Hay algunos temas relacionados con el desarrollo de multiplataforma. Algunos de estos incluyen:\nPruebas de aplicaciones multiplataforma puede ser mucho m\u00e1s complicado, ya que las diferentes plataformas pueden exhibir comportamientos ligeramente diferentes o errores sutiles. Este problema ha llevado a algunos desarrolladores a ridiculizar el desarrollo multiplataforma como \u00abescribir una vez, depurar en todas partes\u00bb, eslogan de marketing.\nLos desarrolladores a menudo se limitan a utilizar el m\u00ednimo com\u00fan denominador subconjunto de caracter\u00edsticas que est\u00e1n disponibles en todas las plataformas. Esto puede afectar al rendimiento de la aplicaci\u00f3n o prohibir el uso de los desarrolladores caracter\u00edsticas m\u00e1s avanzadas de la plataforma.\nLas diferentes plataformas a menudo tienen diferentes convenciones de interfaz de usuario, que aplicaciones multiplataforma no siempre acomodar. Por ejemplo, las aplicaciones desarrolladas para Mac OS X y GNOME se supone que coloque el bot\u00f3n m\u00e1s importante en la parte derecha de la ventana o cuadro de di\u00e1logo, mientras que Microsoft Windows y KDE tienen la convenci\u00f3n opuesta. Aunque muchas de estas diferencias son sutiles, una aplicaci\u00f3n multiplataforma que no se ajusta adecuadamente a estos convenios puede sentirse torpe o ajeno al usuario. Cuando se trabaja con rapidez, a esas convenciones se oponen incluso puede resultar en la p\u00e9rdida de datos , como en un cuadro de di\u00e1logo para confirmar si el usuario desea guardar o descartar los cambios realizados en un archivo.\nLenguajes de secuencias de comandos y las m\u00e1quinas virtuales deben ser traducidos a c\u00f3digo ejecutable nativo cada vez que se ejecuta la aplicaci\u00f3n, imponiendo una penalizaci\u00f3n en el rendimiento. Esta pena puede ser aliviado mediante t\u00e9cnicas avanzadas como la compilaci\u00f3n just-in-time, pero incluso con estas t\u00e9cnicas, algo de sobrecarga computacional puede ser inevitable.\nLas diferentes plataformas requieren el uso de formatos de paquetes nativos tales como RPM y MSI. Multiplataforma instaladores como InstallAnywhere, JExpress, InstallBuilder o IzPack satisfacer esta necesidad.\nEntornos de ejecuci\u00f3n multiplataforma pueden sufrir fallos de seguridad multiplataforma, creando un ambiente f\u00e9rtil para el malware multiplataforma."}]}, {"name": "Referencias", "text": "\u2191 \u00abDefinici\u00f3n de Multiplataforma\u00bb. Consultado el 21 de marzo de 2014.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/NumPy", "title": "NumPy", "summary": "[\n]\nPythonCFortran\nNumPy (pronunciado  /\u02c8n\u028cmpa\u026a/ (numpai) o, a veces  /\u02c8n\u028cmpi/[3]\u200b[4]\u200b (numpi)) es una biblioteca para el lenguaje de programaci\u00f3n Python que da soporte para crear vectores y matrices grandes multidimensionales, junto con una gran colecci\u00f3n de funciones matem\u00e1ticas de alto nivel para operar con ellas. El precursor de NumPy, Numeric, fue creado originalmente por Jim Hugunin con contribuciones de varios otros desarrolladores. En 2005, Travis Oliphant cre\u00f3 NumPy incorporando caracter\u00edsticas de la competencia Numarray en Numeric, con amplias modificaciones. NumPy es un software de c\u00f3digo abierto y cuenta con muchos colaboradores. ", "sections": [{"name": "Historia", "text": "El lenguaje de programaci\u00f3n Python no fue dise\u00f1ado originalmente para computaci\u00f3n num\u00e9rica, pero atrajo la atenci\u00f3n de la comunidad cient\u00edfica y de ingenier\u00eda desde el principio. En 1995 se fund\u00f3 el grupo de inter\u00e9s especial (SIG) matrix-sig con el objetivo de definir un paquete de computaci\u00f3n de vectores; entre sus miembros se encontraba el dise\u00f1ador y mantenedor de Python Guido van Rossum, quien extendi\u00f3 la sintaxis de Python (en particular la sintaxis de indexaci\u00f3n) para facilitar la computaci\u00f3n de vectores.[5]\u200b \nJim Fulton complet\u00f3 una implementaci\u00f3n de un paquete para matrices, luego generalizado por Jim Hugunin y llamado Numeric (tambi\u00e9n conocido como las \"extensiones num\u00e9ricas de Python\" o \"NumPy\"). Hugunin, estudiante de posgrado en el Instituto de Tecnolog\u00eda de Massachusetts (MIT), :\u200a10\u200ase uni\u00f3 a la Corporaci\u00f3n para Iniciativas de Investigaci\u00f3n Nacional (CNRI) en 1997 para trabajar en JPython, dejando a Paul Dubois del Laboratorio Nacional Lawrence Livermore (LLNL) para asumir el cargo de mantenedor. :\u200a10\u200aOtros colaboradores tempranos incluyen a David Ascher, Konrad Hinsen y Travis Oliphant. :\u200a10\u200a\nSe escribi\u00f3 un nuevo paquete llamado Numarray como reemplazo m\u00e1s flexible de Numeric.[6]\u200b Al igual que Numeric, actualmente tambi\u00e9n est\u00e1 obsoleto.[7]\u200b[8]\u200b Numarray ten\u00eda operaciones m\u00e1s r\u00e1pidas para matrices grandes, pero era m\u00e1s lento que Numeric para las peque\u00f1as,[9]\u200b por lo que durante un tiempo ambos paquetes se usaron en paralelo para diferentes casos de uso. La \u00faltima versi\u00f3n de Numeric (v24.2) se public\u00f3 el 11 de noviembre de 2005, mientras que la \u00faltima versi\u00f3n de Numarray (v1.5.2) se public\u00f3 el 24 de agosto de 2006.[10]\u200b \nHab\u00eda un deseo de incluir Numeric en la biblioteca est\u00e1ndar de Python, pero Guido van Rossum decidi\u00f3 que el c\u00f3digo no se pod\u00eda mantener en su estado en ese momento. [\u00bfcu\u00e1ndo?][11]\u200b A principios de 2005, el desarrollador de NumPy, Travis Oliphant, quer\u00eda unificar la comunidad en torno a un solo paquete de arreglo y port\u00f3 las caracter\u00edsticas de Numarray a Numeric, lanzando el resultado como NumPy 1.0 en 2006.[6]\u200b Este nuevo proyecto formaba parte de SciPy. Para evitar instalar el gran paquete SciPy solo para obtener un objeto de matriz, este nuevo paquete se separ\u00f3 y se llam\u00f3 NumPy. El soporte para Python 3 se a\u00f1adi\u00f3 en 2011 con la versi\u00f3n 1.5.0 de NumPy.[12]\u200b \nEn 2011, PyPy comenz\u00f3 a desarrollar una implementaci\u00f3n de la API NumPy para PyPy.[13]\u200b Todav\u00eda no es totalmente compatible con NumPy.[14]\u200b ", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "NumPy apunta a la implementaci\u00f3n de Python de referencia CPython, un int\u00e9rprete de c\u00f3digo de bytes no optimizador. Los algoritmos matem\u00e1ticos escritos para esta versi\u00f3n de Python a menudo se ejecutan mucho m\u00e1s lento que los equivalentes compilados. NumPy aborda el problema de la lentitud en parte al proporcionar matrices multidimensionales, funciones y operadores que operan de manera eficiente en matrices, lo que requiere reescribir algo de c\u00f3digo, principalmente bucles internos, usando NumPy. \nEl uso de NumPy en Python brinda una funcionalidad comparable a MATLAB, ya que ambos se interpretan,[15]\u200b y ambos permiten al usuario escribir programas r\u00e1pidos siempre que la mayor\u00eda de las operaciones funcionen en vectores o matrices en lugar de escalares. En comparaci\u00f3n, MATLAB cuenta con una gran cantidad de cajas de herramientas adicionales, en particular Simulink, mientras que NumPy est\u00e1 intr\u00ednsecamente integrado con Python, un lenguaje de programaci\u00f3n m\u00e1s moderno y completo. Adem\u00e1s, se encuentran disponibles paquetes complementarios de Python; SciPy es una biblioteca que agrega m\u00e1s funcionalidad similar a MATLAB y Matplotlib es un paquete de trazado que proporciona una funcionalidad de trazado similar a MATLAB. Internamente, tanto MATLAB como NumPy se basan en BLAS y LAPACK para c\u00e1lculos de \u00e1lgebra lineal eficientes. \nLos bindings de Python de la ampliamente utilizada biblioteca de visi\u00f3n por computadora OpenCV utilizan matrices NumPy para almacenar y operar con datos. Dado que las im\u00e1genes con m\u00faltiples canales se representan simplemente como matrices tridimensionales, indexar, cortar o enmascarar con otras matrices son formas muy eficientes de acceder a p\u00edxeles espec\u00edficos de una imagen. La matriz NumPy como estructura de datos universal en OpenCV para im\u00e1genes, puntos de caracter\u00edsticas extra\u00eddos, n\u00facleos de filtrado y muchos m\u00e1s simplifica enormemente el flujo de trabajo de programaci\u00f3n y la depuraci\u00f3n . ", "subsections": [{"name": "La estructura de datos ndarray", "text": "La funcionalidad principal de NumPy es su estructura de datos \"ndarray\", para una matriz de n dimensiones. Estas matrices son vistas escalonadas de la memoria.[6]\u200b A diferencia de la estructura de datos de lista incorporada de Python, estas matrices se escriben de forma homog\u00e9nea: todos los elementos de una \u00fanica matriz deben ser del mismo tipo. \nDichas matrices tambi\u00e9n pueden ser vistas en b\u00faferes de memoria asignados por extensiones de C o C++, Cython y Fortran al int\u00e9rprete CPython sin la necesidad de copiar datos, lo que brinda un mayor grado de compatibilidad con las bibliotecas num\u00e9ricas existentes. Esta funcionalidad es explotada por el paquete SciPy, que incluye varias de estas bibliotecas (en particular BLAS y LAPACK). NumPy tiene soporte incorporado para ndarrays mapeados en memoria.[6]\u200b "}, {"name": "Limitaciones", "text": "Insertar o agregar entradas a una matriz no es tan trivialmente posible como lo es con las listas de Python. La rutina np.pad(...) para extender matrices crea nuevas matrices con la forma deseada y los valores de relleno, copia la matriz dada en la nueva y la devuelve. La operaci\u00f3n np.concatenate([a1, a2])de NumPy no vincula realmente las dos matrices, sino que devuelve una nueva, llena con las entradas de ambas matrices dadas en secuencia. La remodelaci\u00f3n de las dimensiones de una matriz con np.reshape(...) solo es posible siempre que el n\u00famero de elementos de la matriz no cambie. Estas circunstancias se originan en el hecho de que las matrices de NumPy deben ser vistas en b\u00faferes de memoria contiguos. Un paquete de reemplazo llamado Blaze intenta superar esta limitaci\u00f3n.[16]\u200b \nLos algoritmos que no se pueden expresar como una operaci\u00f3n vectorizada normalmente se ejecutar\u00e1n lentamente porque deben implementarse en \"Python puro\", mientras que la vectorizaci\u00f3n puede aumentar la complejidad de la memoria de algunas operaciones de constante a lineal, porque se deben crear matrices temporales que sean tan grandes como las entradas. Varios grupos han implementado la compilaci\u00f3n en tiempo de ejecuci\u00f3n de c\u00f3digo num\u00e9rico para evitar estos problemas. Las soluciones de c\u00f3digo abierto que interact\u00faan con NumPy incluyen scipy.weave, numexpr[17]\u200b y Numba.[18]\u200b Cython y Pythran son otras alternativas de compilaci\u00f3n est\u00e1tica."}]}, {"name": "Ejemplos", "text": ">>>\nimport\nnumpy\nas\nnp\nx\n=\nnp\n.\narray\n([\n1\n,\n2\n3\n])\ny\narange\n(\n10\n)\n# como en Python list(range(10)), pero devuelve una matriz de numpy\n0\n4\n5\n6\n7\n8\n9\na\nb\nlinspace\n# crea un vector con cuatro puntos equiespaciados, desde 0 hasta 2.\nc\n-\n1.\n1.33333333\n1.66666667\n4.\n**\n36\npi\n100\nsin\ncos\nfrom\nnumpy.random\nrand\nnumpy.linalg\nsolve\ninv\n([[\n],\n[\n6.7\n9.0\n]])\ntranspose\n()\n3.\n5.\n2.\n9.\n2.27683616\n0.96045198\n0.07909605\n1.04519774\n0.56497175\n0.1299435\n0.39548023\n0.05649718\n0.11299435\n# resuelve la ecuaci\u00f3n ax = b\n4.83050847\n2.13559322\n1.18644068\n*\n20\n# crea una matriz de 3x3 con valores aleatorios en el intervalo [0,1] escalados por 20\n3.98732789\n2.47702609\n4.71167924\n9.24410671\n5.5240412\n10.6468792\n10.38136661\n8.44968437\n15.17639591\ndot\n# multiplicaci\u00f3n de matrices\n53.61964114\n38.8741616\n71.53462537\n118.4935668\n86.14012835\n158.40440712\n155.04043289\n104.3499231\n195.26228855\n@\n# notaci\u00f3n alternativa desde Python 3.5 y NumPy 1.10\nM\nzeros\nshape\n11\n))\nT\ncv2\nr\nreshape\n256\n%\n,(\n# matriz de p\u00edxeles 256x256 con un gradiente horizontal de 0 a 255, para el canal del color rojo\ng\nzeros_like\n# matriz del mismo tama\u00f1o que r pero rellena de ceros, para el canal del color verde\n# matriz r traspuesta que genera un gradiente vertical, para el canal del color azul\ncv2\nimwrite\n'gradients.png'\ndstack\n]))\n# las im\u00e1genes OpenCV se interpretan como BGR, la matriz agrupada se escribir\u00e1 en un archivo PNG de 8 bit llamado 'gradients.png'\nTrue\n# # # Python iterativo puro # # #\npoints\n[[\n],[\n]]\nqPoint\n]\nminIdx\nminDist\nfor\nidx\npoint\nin\nenumerate\n):\n# itera sobre todos los puntos\ndist\nsum\n([(\ndp\ndq\nzip\n)])\n0.5\n# calcula la distancia eucl\u00eddea desde cada punto a q\nif\n<\nor\n:\n# si se requiere, actualiza la distancia m\u00ednima y el \u00edndice del punto correspondiente\nprint\n'Punto m\u00e1s cercano a q: \n{0}\n'\nformat\nPunto\nm\u00e1s\ncercano\nq\n# # # Vectorizaci\u00f3n equivalente en NumPy # # #\nargmin\nlinalg\nnorm\naxis\n# calcula todas las distancias eucl\u00eddeas de una vez y devuelve el \u00edndice de la menor de ellas", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "SciPy\nMatplotlib\nProgramaci\u00f3n con matrices", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abReleases \u2013 numpy/numpy\u00bb. Consultado el 7 de diciembre de 2023  \u2013 via GitHub.\u00a0\n\u2191 \u00abNumPy \u2014 NumPy\u00bb. numpy.org. NumPy developers.\u00a0\n\u2191 Pine, David (2014). \u00abPython resources\u00bb. Rutgers University. Consultado el 7 de abril de 2017.\u00a0\n\u2191 \u00abHow do you say numpy?\u00bb. Reddit. 2015. Consultado el 7 de abril de 2017.\u00a0\n\u2191 Millman, K. Jarrod; Aivazis, Michael (2011). \u00abPython for Scientists and Engineers\u00bb. Computing in Science and Engineering 13 (2): 9-12.\u00a0\n\u2191 a b c d van der Walt, St\u00e9fan; Colbert, S. Chris; Varoquaux, Ga\u00ebl (2011). \u00abThe NumPy array: a structure for efficient numerical computation\u00bb. Computing in Science and Engineering (IEEE). Bibcode:2011arXiv1102.1523V. arXiv:1102.1523.\u00a0\n\u2191 \u00abNumarray Homepage\u00bb. Consultado el 24 de junio de 2006.\u00a0\n\u2191 Travis E. Oliphant (7 de diciembre de 2006). Guide to NumPy. Consultado el 2 de febrero de 2017.\u00a0\n\u2191 Travis Oliphant and other SciPy developers. \u00ab[Numpy-discussion] Status of Numeric\u00bb. Archivado desde el original el 3 de febrero de 2017. Consultado el 2 de febrero de 2017.\u00a0\n\u2191 \u00abNumPy Sourceforge Files\u00bb. Consultado el 24 de marzo de 2008.\u00a0\n\u2191 \u00abHistory_of_SciPy - SciPy wiki dump\u00bb. scipy.github.io.\u00a0\n\u2191 \u00abNumPy 1.5.0 Release Notes\u00bb. Consultado el 29 de abril de 2011.\u00a0\n\u2191 \u00abPyPy Status Blog: NumPy funding and status update\u00bb. Consultado el 22 de diciembre de 2011.\u00a0\n\u2191 \u00abNumPyPy Status\u00bb. Consultado el 14 de octubre de 2013.\u00a0\n\u2191 The SciPy Community. \u00abNumPy for Matlab users\u00bb. Consultado el 2 de febrero de 2017.\u00a0\n\u2191 \u00abBlaze Ecosystem Docs\u00bb. Read the Docs. Consultado el 17 de julio de 2016.\u00a0\n\u2191 Francesc Alted. \u00abnumexpr\u00bb. Consultado el 8 de marzo de 2014.\u00a0\n\u2191 \u00abNumba\u00bb. Consultado el 8 de marzo de 2014.\u00a0", "subsections": []}, {"name": "Otras lecturas", "text": "Bressert, Eli (2012). Scipy and Numpy: An Overview for Developers. O'Reilly. ISBN\u00a0978-1-4493-0546-8.\u00a0\nMcKinney, Wes (2017). Python for Data Analysis\u00a0: Data Wrangling with Pandas, NumPy, and IPython (2nd edici\u00f3n). Sebastopol: O'Reilly. ISBN\u00a0978-1-4919-5766-0.\u00a0\nVanderPlas, Jake (2016). \u00abIntroduction to NumPy\u00bb. Python Data Science Handbook: Essential Tools for Working with Data. O'Reilly. pp.\u00a033\u201396. ISBN\u00a0978-1-4919-1205-8.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio oficial de NumPy (en ingl\u00e9s)\nHistoria de NumPy (en ingl\u00e9s)\nIntroducci\u00f3n a las matrices en NumPy Archivado el 12 de junio de 2010 en Wayback Machine. (en ingl\u00e9s)\nNumPy para usuarios de Matlab (en ingl\u00e9s)\nMatplotlib, paquete para graficar con NumPy (en ingl\u00e9s", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Objeto_(programaci%C3%B3n)", "title": "Objeto (programaci\u00f3n)", "summary": "Busca fuentes: \u00abObjeto (programaci\u00f3n)\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn el paradigma de programaci\u00f3n orientada a objetos (POO, o bien OOP en ingl\u00e9s), un objeto es un ente orientado a objetos (programa de computadoras) que consta de un estado y de un comportamiento, que a su vez constan respectivamente de datos almacenados y de tareas realizables durante el tiempo de ejecuci\u00f3n. Un objeto puede ser creado instanciando una clase, como ocurre en la programaci\u00f3n orientada a objetos, o mediante escritura directa de c\u00f3digo y la replicaci\u00f3n de otros objetos, como ocurre en la programaci\u00f3n basada en prototipos.\nEstos objetos interact\u00faan unos con otros, en contraposici\u00f3n a la visi\u00f3n tradicional en la cual un programa es una colecci\u00f3n de subrutinas (funciones o procedimientos), o simplemente una lista de instrucciones para el computador. Cada objeto es capaz de recibir mensajes, procesar datos y enviar mensajes a otros objetos de manera similar a un servicio.\nEn el mundo de la programaci\u00f3n orientada a objetos (POO), un objeto es el resultado de la instanciaci\u00f3n de una clase.[1]\u200b Una clase es el anteproyecto que ofrece la funcionalidad en ella definida, pero \u00e9sta queda implementada solo al crear una instancia de la clase, en la forma de un objeto. Por ejemplo: dado un plano para construir sillas (una clase de nombre clase_silla), entonces una silla concreta, en la que podemos sentarnos, construida a partir de este plano, ser\u00eda un objeto de clase_silla. Es posible crear (construir) m\u00faltiples objetos (sillas) utilizando la definici\u00f3n de la clase (plano) anterior. Los conceptos de clase y objetos son an\u00e1logos a los de tipo de datos y variable; es decir, definida una clase podemos crear objetos de esa clase, igual que disponiendo de un determinado tipo de dato (por ejemplo el tipo entero), podemos definir variables de dicho tipo:\n( 'int' es un tipo de dato y 'a' y 'b' son variables de tipo entero con las que podemos operar)\nPara utilizar la funcionalidad definida en una clase en particular (salvo en las clases abstractas), primeramente es necesario crear un objeto de esa clase. De la misma manera, para una persona que desea sentarse, las especificaciones para construir una silla ser\u00e1n de poca utilidad; lo que se necesita es una silla real construida a partir de esas especificaciones. Siguiendo con la analog\u00eda anterior, tambi\u00e9n se puede decir que para hacer operaciones aritm\u00e9ticas, de nada sirve por s\u00ed solo el tipo entero (int); para ello necesitamos variables (o constantes) con las que operar.", "sections": [{"name": "Definici\u00f3n de objeto", "text": "Un objeto en POO representa alguna entidad de la vida real, es decir, alguno de los objetos que pertenecen al negocio con que estamos trabajando o al problema con el que nos estamos enfrentando, y con los que podemos interactuar. A trav\u00e9s del estudio de ellos se adquiere el conocimiento necesario para, mediante la abstracci\u00f3n y la generalizaci\u00f3n, agruparlos seg\u00fan sus caracter\u00edsticas en conjuntos. Estos conjuntos determinan las clases de objetos con las que estamos trabajando. Primero existen los objetos; luego aparecen las clases en funci\u00f3n de la soluci\u00f3n que estemos buscando. \u00c9sta es la forma m\u00e1s com\u00fan de adquirir conocimiento aunque no es la \u00fanica. En ocasiones, cuando el observador es un experto del negocio (o del problema), el proceso puede ser a la inversa y comenzar el an\u00e1lisis en una base te\u00f3rica abstracta, sustentada por el conocimiento previo que da lugar primeramente a clases de objetos que satisfagan las necesidades de la soluci\u00f3n.\nEstos conceptos son parte de la base te\u00f3rica de la idea de objeto y clase utilizados en la POO. Los objetos tienen caracter\u00edsticas fundamentales que nos permiten conocerlos mediante la observaci\u00f3n, identificaci\u00f3n y el estudio posterior de su comportamiento; estas caracter\u00edsticas son:\nIdentidad\nComportamiento\nEstado\nEn las ramas de las ciencias de la computaci\u00f3n m\u00e1s estrictamente matem\u00e1ticas, el t\u00e9rmino objeto es usado en sentido puramente matem\u00e1tico para referirse a cualquier \"cosa\". Esta interpretaci\u00f3n resulta \u00fatil para discutir sobre teor\u00edas abstractas, pero no es suficientemente concreta para servir como definici\u00f3n de un tipo primitivo en discusiones de ramas m\u00e1s espec\u00edficas, como en la programaci\u00f3n, que est\u00e1 m\u00e1s cerca de c\u00e1lculos reales y el procesamiento de informaci\u00f3n.", "subsections": [{"name": "Identidad", "text": "La identificaci\u00f3n  es la propiedad que permite diferenciar a un objeto y distinguirse de otros. Generalmente esta propiedad es tal, que da nombre al objeto. Tomemos por ejemplo el \"verde\" como un objeto concreto de una clase color; la propiedad que da identidad \u00fanica a este objeto es precisamente su \"color\" verde. Tanto es as\u00ed que para nosotros no tiene sentido usar otro nombre para el objeto que no sea el valor de la propiedad que lo identifica.\nEn programaci\u00f3n la identidad de todos los objetos sirve para comparar si dos objetos son iguales o no. No es raro encontrar que en muchos lenguajes de programaci\u00f3n la identidad de un objeto est\u00e9 determinada por la direcci\u00f3n de memoria de la computadora en la que se encuentra el objeto, pero este comportamiento puede ser variado redefiniendo la identidad del objeto a otra propiedad."}, {"name": "Comportamiento", "text": "El comportamiento de un objeto est\u00e1 directamente relacionado con su funcionalidad y determina las operaciones que \u00e9ste puede realizar o a las que puede responder ante mensajes enviados por otros objetos. La funcionalidad de un objeto est\u00e1 determinada, primariamente, por su responsabilidad. Una de las ventajas fundamentales de la POO es la reusabilidad del c\u00f3digo; un objeto es m\u00e1s f\u00e1cil de reutilizarse en tanto su responsabilidad sea mejor definida y m\u00e1s concreta.\nUna tarea fundamental a la hora de dise\u00f1ar una aplicaci\u00f3n inform\u00e1tica es definir el comportamiento que tendr\u00e1n los objetos de las clases involucradas en la aplicaci\u00f3n, asociando la funcionalidad requerida por la aplicaci\u00f3n a las clases adecuadas."}, {"name": "Estado", "text": "El estado de un objeto se refiere al conjunto de atributos y sus valores en un instante de tiempo dado. El comportamiento de un objeto puede modificar el estado de \u00e9ste. Cuando una operaci\u00f3n de un objeto modifica su estado se dice que esta tiene \"efecto colateral\".\nEsto tiene especial importancia en aplicaciones que crean varios hilos de ejecuci\u00f3n. Si un objeto es compartido por varios hilos y en el transcurso de sus operaciones estas modifican el estado del objeto, es posible que se deriven errores del hecho de que alguno de los hilos asuma que el estado del objeto no cambiar\u00e1 (V\u00e9ase Condici\u00f3n de carrera"}]}, {"name": "Representaci\u00f3n en las computadoras", "text": "Los objetos, aunque son entidades conceptuales, dado el dise\u00f1o de las computadoras, se corresponde directamente con bloques de memoria de tama\u00f1o y localizaci\u00f3n espec\u00edficos. Esto ocurre porque los c\u00e1lculos y el procesamiento de la informaci\u00f3n en \u00faltima instancia requieren de una representaci\u00f3n en la memoria de la computadora. En este sentido, los objetos son primitivas fundamentales necesarias para definir de forma precisa conceptos como referencias, variables y vinculaci\u00f3n de nombres. En ciencias de la computaci\u00f3n se utiliza cotidianamente la interpretaci\u00f3n m\u00e1s concreta de objeto en lugar de las m\u00e1s abstractas sin que esto sea considerado un error.\nEs preciso hacer notar que aunque un bloque de memoria puede aparecer contiguo en un nivel de abstracci\u00f3n y no contiguo en otro, lo importante es que este aparece contiguo para el programa, quien lo trata como un objeto. Por este motivo, los detalles de implementaci\u00f3n privados de un modelo de objetos no deben ser expuestos al cliente del objeto, y estos pueden ser cambiados sin que se requieran cambios al c\u00f3digo cliente.\nLos objetos en la computadora existen entonces, solo dentro de contextos capaces de reconocerlos; un espacio de memoria solo contiene un objeto si un programa lo trata como tal (por ejemplo, reserv\u00e1ndolo para uso exclusivo de un procedimiento espec\u00edfico y/o asoci\u00e1ndole un tipo de dato). As\u00ed, el tiempo de vida de un objeto es el tiempo durante el cual este es tratado como un objeto. Es por esto que los objetos son entidades conceptuales, a pesar de su presencia f\u00edsica en la memoria de la computadora.\nEn otras palabras, los conceptos abstractos que no ocupen espacio de memoria en tiempo de ejecuci\u00f3n, no son, de acuerdo con esta definici\u00f3n, objetos. Ejemplos de estos conceptos son: patrones de dise\u00f1o exhibidos por un conjunto de clases y tipos de datos en lenguajes de programaci\u00f3n que utilizan tipos est\u00e1ticos.\nSe llama objeto fantasma a un objeto que no es referenciado en un programa, y que por tanto no sirve a ning\u00fan prop\u00f3sito. En un lenguaje que posea un recolector de basura, este marcar\u00e1 la memoria ocupada por el objeto como libre, aunque \u00e9sta todav\u00eda contendr\u00e1 los datos del objeto hasta el momento en que sea reescrita.", "subsections": []}, {"name": "Objetos en la programaci\u00f3n orientada a objetos", "text": "En programaci\u00f3n orientada a objetos (POO), una instancia de programa (por ejemplo un programa ejecut\u00e1ndose en una computadora) es tratada como un conjunto din\u00e1mico de objetos interactuando entre s\u00ed. Los objetos en la POO extienden la noci\u00f3n m\u00e1s general descrita en secciones anteriores para modelar un tipo muy espec\u00edfico que est\u00e1 definido fundamentalmente por:\natributos, que representan los datos asociados al objeto, o, lo que es lo mismo, sus propiedades o caracter\u00edsticas. Los atributos y sus valores en un momento dado, determinan el estado de un objeto.\nm\u00e9todos, que acceden a los atributos de una manera predefinida e implementan el comportamiento del objeto.\nLos atributos y m\u00e9todos de un objeto est\u00e1n definidos por su clase, aunque (en un lenguaje din\u00e1mico como Python o Ruby) una instancia puede poseer atributos que no fueron definidos en su clase. Algo similar ocurre con los m\u00e9todos: una instancia puede contener m\u00e9todos que no est\u00e9n definidos en su clase de la misma manera que una clase puede declarar ciertos m\u00e9todos como \"m\u00e9todos de clase\", y estos (en dependencia del lenguaje) podr\u00e1n estar o no presentes en la instancia.\nEn el caso de la mayor\u00eda de los objetos, los atributos solo pueden ser accedidos a trav\u00e9s de los m\u00e9todos; de esta manera es m\u00e1s f\u00e1cil garantizar que los datos permanecer\u00e1n siempre en un estado bien definido (invariante de clase).\nEn un lenguaje en el que cada objeto es creado a partir de una clase, un objeto es llamado una instancia de esa clase. Cada objeto pertenece a un tipo y dos objetos que pertenezcan a la misma clase tendr\u00e1n el mismo tipo de dato. Crear una instancia de una clase es entonces referido como instanciar la clase.\nEn casi todos los lenguajes de programaci\u00f3n orientados a objeto, el operador \"punto\" (.) es usado para referirse o \"llamar\" a un m\u00e9todo particular de un objeto. Un ejemplo de lenguaje que no siempre usa este operador es C++, ya que para referirse a los m\u00e9todos de un objeto a trav\u00e9s de un puntero al objeto se utiliza el operador (->). \nConsid\u00e9rese como ejemplo una clase aritm\u00e9tica llamada Aritm\u00e9tica. Esta clase contiene m\u00e9todos como \"sumar\", \"restar\", \"multiplicar\", \"dividir\", etc. que calculan el resultado de realizar estas operaciones sobre dos n\u00fameros.\nUn objeto de esta clase puede ser utilizado para calcular el producto de dos n\u00fameros, pero primeramente ser\u00eda necesario definir dicha clase y crear un objeto. En las secciones a continuaci\u00f3n se muestra c\u00f3mo hacer esto utilizando dos lenguajes de programaci\u00f3n: C++ y Python.", "subsections": [{"name": "Declaraci\u00f3n de una clase", "text": "Esta clase podr\u00eda ser definida de la siguiente manera en C++:\nclass\n \nAritmetica\n{\n    \npublic\n:\n        \ninline\nint\nsumar\n(\na\n,\nb\n)\nconst\n            \nreturn\n+\n;\n}\nrestar\n-\nfloat\nmultiplicar\n*\ndividir\n/\n};\no como sigue en Python:\n:\ndef\nsumar\nself\n):\nrestar\nmultiplicar\ndividir"}, {"name": "Instanciaci\u00f3n de una clase en un objeto", "text": "Para crear un objeto de tipo 'Aritmetica' (instanciar Aritmetica) en C++ se har\u00eda de la siguiente forma:\nAritmetica\ncalculador\n=\n();\n#Otra manera usando punteros\ncalculador1\nnew\nla misma operaci\u00f3n usando python ser\u00eda as\u00ed:\n()"}, {"name": "Operando con un objeto", "text": "Una vez que tenemos un objeto de 'Aritmetica', podemos usarlo para realizar c\u00e1lculos sobre dos n\u00fameros. En C++ contamos con dos objetos de ejemplo: \"calculador\" y \"calculador1\"; en esta \u00faltima variable en realidad hemos almacenado la direcci\u00f3n de memoria del objeto creado. En este lenguaje esto sienta diferencias a la hora de utilizar el objeto.\nPara calcular la suma entre 78 y 69 usando un objeto \"calculador\" necesitar\u00edamos un c\u00f3digo como el siguiente en C++:\nresultado\n0\n.\n78\n69\n);\n->\nahora usando Python para sumar dos n\u00fameros con el objeto calculador:\n.\nOtro ejemplo del mundo real de un objeto podr\u00eda ser \"mi perro\", el cual es una instancia de un tipo (una clase) llamada \"perro\", la que es una subclase de la clase \"animal\". En el caso de un objeto polim\u00f3rfico, algunos detalles de su tipo pueden ser ignorados; por ejemplo, el objeto \"mi perro\" puede ser usado en un m\u00e9todo que espera recibir un \"animal\". Tambi\u00e9n podr\u00eda usarse un objeto \"gato\", puesto que esta tambi\u00e9n pertenece a la clase \"animal\". Pero mientras es accedido como un \"animal\", algunos atributos de un \"perro\" o un \"gato\" permanecer\u00e1n no disponibles, como la \"cola\", porque no todos los animales tienen cola.\nAtributos din\u00e1micos en objetos\nPython y C++ son lenguajes con caracter\u00edsticas muy diferentes. Python utiliza un sistema de tipos din\u00e1mico y C++ en cambio, uno est\u00e1tico o estricto. El sistema de tipos usado en Python permite al programador agregar atributos a una instancia que no han sido definidos en la clase que le dio origen, cosa que no es posible hacer en un lenguaje como C++. Por ejemplo: \nLa clase siguiente en Python no define ning\u00fan atributo:\nPrueba\nobject\npass\npero es posible hacer lo siguiente:\n1\np\nPrueba\n2\nunNumero\n3\nprint\n\"Atributo unNumero de p = \n%s\n\"\n%\n4\nAtributo\nde\nA la instancia de p creada en la l\u00ednea 1, le es asignado en la l\u00ednea 2 el valor \"3\", lo cual crea un atributo de nombre unNumero en p de tipo \"int\" para almacenar el n\u00famero 3."}]}, {"name": "Relaciones entre objetos", "text": "Como ya se ha dicho antes, un sistema orientado a objetos est\u00e1 caracterizado por objetos que interact\u00faan entre s\u00ed. Estas interacciones suponen ciertos tipos de relaciones entre los objetos del sistema. La sem\u00e1ntica que expresa un objeto en el sistema est\u00e1 determinada, en primer lugar, por las relaciones que \u00e9ste establece con otros objetos o conjuntos de objetos. Tomemos como ejemplo un objeto fecha, del que sin establecer ning\u00fan tipo de relaci\u00f3n, podr\u00eda decirse que significa un d\u00eda del a\u00f1o particular. Pero si relacionamos ese objeto fecha con un objeto Persona de manera que represente la fecha en que esa persona naci\u00f3, en ese contexto dado, el mismo objeto fecha adoptar\u00eda un significado diferente, el de un cumplea\u00f1os; aunque sigue siendo una fecha, ahora tiene otra idea asociada.\nLas relaciones entre objetos no solo est\u00e1n definidas por los objetos que participan y la circunstancia que los relaciona, sino tambi\u00e9n por la cantidad de objetos (cardinalidad de la relaci\u00f3n) y la direcci\u00f3n de la misma. Una relaci\u00f3n puede tener cardinalidad:\nuno a uno, ejemplo: un auto tiene un motor.\nuno a muchos, ejemplo: un auto tiene muchas ruedas.\nmuchos a muchos, ejemplo: un auto se puede servir en muchas gasolineras y una gasolinera puede servir a muchos autos.\ny direccionalidad:\nunidireccional, ejemplo: un auto tiene cuatro ruedas.\nbidireccional\nLas relaciones entre objetos m\u00e1s generales son las siguientes:", "subsections": [{"name": "Composici\u00f3n", "text": "La composici\u00f3n (tambi\u00e9n conocida como relaci\u00f3n asociativa) es un tipo de relaci\u00f3n que se establece entre dos objetos que tienen comunicaci\u00f3n persistente. Se utiliza para expresar que un par de objetos tienen una relaci\u00f3n de dependencia para llevar a cabo su funci\u00f3n, de modo que uno de los objetos involucrados est\u00e1 compuesto por el otro.\nDe manera pr\u00e1ctica, es posible reconocer asociatividad entre dos objetos A y B si la proposici\u00f3n \"A tiene un B\" (o viceversa) es verdadera.\nPor ejemplo: \"una computador tiene un disco duro\" es verdadero; por tanto, un objeto computador tiene una relaci\u00f3n de composici\u00f3n con al menos un objeto disco duro."}, {"name": "Uso", "text": "Un objeto usa (conoce) a otro cuando puede enviarle mensajes, por ejemplo, para requerir de este alg\u00fan servicio. La composici\u00f3n puede verse como un caso particular de esta relaci\u00f3n."}, {"name": "Delegaci\u00f3n", "text": "En ocasiones, para lograr flexibilidad de dise\u00f1o, un objeto es implementado de forma tal que este delegue parte de su funcionalidad en otro objeto. Esto es muy com\u00fan en aplicaciones que hacen uso de interfaces gr\u00e1ficas de usuario, en las que los controles gr\u00e1ficos generales delegan la acci\u00f3n que se ejecutar\u00e1 ante determinado est\u00edmulo en otro objeto."}]}, {"name": "Objetos especializados", "text": "Algunos t\u00e9rminos para tipos especializados de objetos son:\nSingleton: un objeto del que solo puede existir una \u00fanica instancia de su clase durante el tiempo de vida del programa.\nFunctor: un objeto que puede ser utilizado como una funci\u00f3n.\nObjeto inmutable: un objeto creado con un estado fijo y que no puede variar en el tiempo de vida del mismo.\nObjeto de primera clase: un objeto que puede ser utilizado sin restricciones.\nContenedor: un objeto que contiene a otros objetos.\nF\u00e1brica de objetos: un objeto cuyo prop\u00f3sito es crear otros objetos.\nMetaobjeto: un objeto a partir del cual se pueden crear otros objetos (comparable con una clase, la que no necesariamente es un objeto).\nPrototipo: un metaobjeto especializado a partir del cual se pueden crear otros objetos copi\u00e1ndolo.\nObjeto todopoderoso: un objeto que sabe mucho o hace mucho. Este es un ejemplo de antipatr\u00f3n de dise\u00f1o.\nAntiobjeto: una met\u00e1fora computacional \u00fatil para conceptualizar y solucionar problemas complejos, usualmente con aproximaciones paralelas.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Patr\u00f3n de dise\u00f1o\nProgramaci\u00f3n orientada a objetos\nClase (inform\u00e1tica)", "subsections": []}, {"name": "Referencias", "text": "\u2191 Schildt, Helbert (2007). Java, Manual de referencia (7 edici\u00f3n). Mc Graw Hill. pp.\u00a0105. ISBN\u00a00-07-226385-7. Consultado el 21 de enero de 2016.\u00a0", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pa%C3%ADses_Bajos", "title": "Pa\u00edses Bajos", "summary": "Nederland\nReino de los Pa\u00edses Bajos\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n\u00a0\u00a0\u00a0\u00a0\n52\u00b019\u203200\u2033N 5\u00b033\u203200\u2033E\ufeff / \ufeff52.316666666667, 5.55\n[\n]\n52\u00b023\u203200\u2033N 4\u00b054\u203200\u2033E\ufeff / \ufeff52.38333, 4.90000\n0,946\nMuy Alto\n\u2191 La Haya es la sede del Gobierno.\n\u2191 El fris\u00f3n es una lengua regional hablada por m\u00e1s de &&&&&&&&&0450000.&&&&&0450\u00a0000 personas en la provincia de Frisia, donde es cooficial con el neerland\u00e9s.\n\u2191 Antes de 2002, el flor\u00edn neerland\u00e9s (\u0192, NLG).\nPa\u00edses Bajos[6]\u200b (PP. BB.; en neerland\u00e9s: Nederland\u24d8) es una de las cuatro naciones constituyentes que forman el Reino de los Pa\u00edses Bajos. Es uno de los veintisiete Estados soberanos que integran la Uni\u00f3n Europea. Su capital es \u00c1msterdam;[7]\u200b sin embargo, la organizaci\u00f3n y la administraci\u00f3n del Reino radican en La Haya, sede oficial de la monarqu\u00eda, as\u00ed como de sus autoridades ejecutivas, legislativas y judiciales. Aruba, Curazao y San Mart\u00edn son territorios de ultramar que no forman parte de la Uni\u00f3n Europea.\nLas provincias que conforman los Pa\u00edses Bajos est\u00e1n situadas en el noroeste de Europa y limitan al norte y oeste con el mar del Norte, al sur con B\u00e9lgica y al este con Alemania. Completan el territorio neerland\u00e9s las municipalidades especiales de Bonaire, San Eustaquio y Saba, situadas en el Caribe. El pa\u00eds constituye una de las zonas m\u00e1s densamente pobladas del mundo.\nComo su nombre indica, el territorio del pa\u00eds est\u00e1 formado por tierras (land) bajas (neder) de las que, aproximadamente, una cuarta parte est\u00e1n situadas al nivel del mar o por debajo de este.[8]\u200b\nEl pa\u00eds est\u00e1 clasificado como \u00abde ingresos altos\u00bb seg\u00fan el Banco Mundial[9]\u200b y es uno de los estados m\u00e1s desarrollados: en 2018 est\u00e1 situado en el d\u00e9cimo lugar en cuanto a desarrollo humano seg\u00fan el \u00cdndice de Desarrollo Humano publicado por Naciones Unidas.[10]\u200b Es adem\u00e1s uno de los pa\u00edses con uno de los niveles m\u00e1s bajos de percepci\u00f3n de corrupci\u00f3n,[11]\u200b y es una de las democracias m\u00e1s consolidadas del mundo.[12]\u200b", "sections": [{"name": "Terminolog\u00eda", "text": "El pa\u00eds fue m\u00e1s conocido a finales del siglo\u00a0XX como Holanda, que en realidad es el nombre de una de sus doce regiones hist\u00f3ricas, situada en la parte occidental del pa\u00eds. El Diccionario panhisp\u00e1nico de dudas, publicado por la Real Academia Espa\u00f1ola, admite su uso como sin\u00f3nimo.[13]\u200b[14]\u200b[nota 1]\u200b Su idioma tambi\u00e9n es conocido tradicionalmente y por la misma raz\u00f3n como holand\u00e9s, aun cuando su nombre oficial es neerland\u00e9s; en realidad, el holand\u00e9s en sentido estricto es un dialecto del neerland\u00e9s; admisible por la RAE en el habla corriente, pero nunca en textos oficiales en donde debe ser referido como neerland\u00e9s. Lo mismo sucede con el gentilicio holand\u00e9s. La RAE lo admite en el habla corriente, pero no para los textos oficiales. En ese caso, el adjetivo a usar es \u00abneerland\u00e9s\u00bb.\nA menudo, se confunden tambi\u00e9n los Pa\u00edses Bajos con la uni\u00f3n aduanera conocida como Benelux formada por B\u00e9lgica, los Pa\u00edses Bajos y Luxemburgo; la denominaci\u00f3n tiene su base en el acuerdo de cooperaci\u00f3n intergubernamental que se hizo efectivo en 1944.[15]\u200b", "subsections": []}, {"name": "Historia", "text": "Art\u00edculo principal:", "subsections": [{"name": "Prehistoria", "text": "Los Pa\u00edses Bajos han sido habitados desde la \u00faltima glaciaci\u00f3n; los vestigios m\u00e1s antiguos hallados tienen una antig\u00fcedad de 100\u00a0000 a\u00f1os, cuando el pa\u00eds pose\u00eda un clima de tundra con muy escasa vegetaci\u00f3n. Sus primeros pobladores fueron cazadores-recolectores.[16]\u200b Al finalizar la Edad de hielo, el \u00e1rea fue habitada por varios grupos paleol\u00edticos. Uno de ellos fabricaba incluso canoas (Pesse, hacia 6500\u00a0a.\u00a0C.)[17]\u200b y antes de eso, alrededor de 8000\u00a0a.\u00a0C., una tribu mesol\u00edtica residi\u00f3 cerca de Bergumermeer (Frisia).\nLa agricultura lleg\u00f3 hacia el a\u00f1o 5000\u00a0a.\u00a0C., a trav\u00e9s de la cultura de alfarer\u00eda lineal (probablemente proveniente de la Europa central), pero solo fue practicada en las llanuras del extremo sur del pa\u00eds (Limburgo del Sur). Los recolectores-cazadores de la cultura Swifterbant est\u00e1n atestiguados a partir del 5600\u00a0a.\u00a0C.[18]\u200b y desarrollaron una sociedad agr\u00edcola hacia el 4300\u00a0a.\u00a0C.-4000\u00a0a.\u00a0C.[18]\u200b[19]\u200b en la que destac\u00f3 la introducci\u00f3n de peque\u00f1as proporciones de granos en una econom\u00eda tradicional.[20]\u200b\nLos primeros restos notables de la prehistoria fueron los d\u00f3lmenes, que han sido encontrados en la provincia de Drente, y fueron probablemente construidos por gente de la cultura granjera de Funnelbeaker entre 4100 y 3200\u00a0a.\u00a0C.[21]\u200b La primera evidencia del uso de ruedas est\u00e1 datada en torno al 2400\u00a0a.\u00a0C., y probablemente est\u00e1 relacionada con la cultura Bellbeaker (Klokbeker cultuur).[22]\u200b Esta cultura tambi\u00e9n experiment\u00f3 con cobre, de lo que se ha encontrado alguna evidencia (yunques de piedra, cuchillos de cobre, diademas de cobre) en el parque de Veluwe. Los hallazgos de cobre demuestran el comercio con otras regiones, porque el mineral de cobre no se encuentra en el pa\u00eds.\nLa Edad del Bronce probablemente comenz\u00f3 alrededor del 2000\u00a0a.\u00a0C., como en la tumba de \"El herrero de Wageningen\".[23]\u200b Despu\u00e9s de este descubrimiento, m\u00e1s objetos de la Edad del Bronce aparecieron, como en Epe, en Drouwen y sobre todo en Drente, que, debido a la cantidad de objetos encontrados como cuentas de esta\u00f1o en un collar, nos indican que era centro de comercio de la \u00e9poca. La riqueza de los Pa\u00edses Bajos en la Edad del Hierro puede ser vista en la \"Tumba del rey en Oss\" (sobre el 500\u00a0a.\u00a0C.), all\u00ed un verdadero rey fue enterrado con algunos objetos como una espada de hierro con un grabado de oro y coral en el mayor t\u00famulo funerario de la Europa Occidental, que ten\u00eda 52\u00a0m de ancho.[24]\u200b\nEn la \u00e9poca de la llegada de los romanos, los Pa\u00edses Bajos se hallaban habitados por varias tribus germ\u00e1nicas, quienes se hab\u00edan asentado aqu\u00ed alrededor del 600\u00a0a.\u00a0C., como los tubanti, los canninefates o los frisios.[16]\u200b Tribus celtas se instalaron en el sur, entre ellas los eburones, menapios y texuandri. Diversos germanos se asentaron en el delta del Rin al comienzo de la ocupaci\u00f3n romana, y formaron la tribu de los b\u00e1tavos.[25]\u200b"}, {"name": "Roma", "text": "En el siglo\u00a0I\u00a0a.\u00a0C., los romanos conquistaron la parte sur del pa\u00eds, donde crearon la provincia romana de Germania Inferior.[16]\u200b Los romanos fueron los primeros en construir ciudades en el pa\u00eds, como Utrecht, Nimega y Maastricht.[26]\u200b La parte norte, que estaba fuera del Imperio romano y que era el lugar donde viv\u00edan los frisios, fue fuertemente influenciada por su poderoso vecino del sur.[16]\u200b\nLa relaci\u00f3n con los habitantes del pa\u00eds fue buena en general; muchos b\u00e1tavos sirvieron en la caballer\u00eda romana.[27]\u200b La cultura b\u00e1tava fue influenciada por la romana, resultando, entre otras cosas, en templos de tipo romano como el de Elst, dedicado a los dioses locales. Sin embargo, esto no impidi\u00f3 la rebeli\u00f3n de los b\u00e1tavos en el 69\u00a0d.\u00a0C., acaudillados por el b\u00e1tavo Julio Civilis, un oficial de las tropas auxiliares. Durante la revuelta, que aprovech\u00f3 la inestabilidad que se produjo en el imperio durante el a\u00f1o de los cuatro emperadores, los b\u00e1tavos consiguieron aniquilar dos legiones romanas e infligir humillantes derrotas al ej\u00e9rcito romano.[28]\u200b Otros soldados romanos se sumaron a la revuelta, que incluso dividi\u00f3 la parte norte del ej\u00e9rcito romano y en abril del 70\u00a0d.\u00a0C., Vespasiano envi\u00f3 unas cuantas legiones para frenar la revuelta. Su comandante, Quinto Petilio Cerial, fue derrotado por los b\u00e1tavos y entabl\u00f3 negociaciones con Julio Civilis, en alg\u00fan lugar entre el Waal y el Mosa cerca de Noviomagus (Nimega) o, como los b\u00e1tavos probablemente lo llamaban, Batavodurum.[29]\u200b"}, {"name": "Despu\u00e9s de Roma", "text": "Los reci\u00e9n llegados se unieron a los habitantes originales para crear tres pueblos: los frisios a lo largo de la costa, los sajones en el este y los francos en el sur.[16]\u200b Los francos se convirtieron al cristianismo despu\u00e9s de que su rey Clodoveo I lo hiciera en el a\u00f1o 496, y as\u00ed el cristianismo fue introducido en el norte gracias a la conquista de Frisia por los francos. Los Pa\u00edses Bajos pertenec\u00edan al imperio franco de Carlomagno, cuyo n\u00facleo se encontraba en lo que hoy es B\u00e9lgica y el norte de Francia, y que se extend\u00eda adem\u00e1s por el resto de Francia, Alemania, norte de Italia y otros territorios de la Europa occidental. En 843, con el Tratado de Verd\u00fan, el Imperio qued\u00f3 dividido en tres partes: Francia Occidental, Francia Oriental y Lotaringia. Posteriormente, este imperio central se dividi\u00f3; la mayor parte de los territorios de habla neerlandesa se integraron en Alemania, y Francia intent\u00f3 incorporar a Flandes sin \u00e9xito.[16]\u200b\nEntre los a\u00f1os 800 y 1000, los Pa\u00edses Bajos padecieron los saqueos de los vikingos, cuyos ataques eran muy violentos, como en la destrucci\u00f3n de la ciudad de Dorestad. Pero la supremac\u00eda vikinga termin\u00f3 en 920, cuando el rey Enrique I de Alemania liber\u00f3 Utrecht. Los reyes y emperadores alemanes dominaron los Pa\u00edses Bajos durante los siglos X y XI. Alemania recibi\u00f3 la denominaci\u00f3n de Sacro Imperio Romano Germ\u00e1nico tras la coronaci\u00f3n de Ot\u00f3n I el Grande como emperador.[30]\u200b Nimega fue un lugar significativo para los emperadores germanos, varios de ellos nacieron y murieron all\u00ed.\nLas Cruzadas fueron populares en los Pa\u00edses Bajos y muchos se unieron para ir a luchar en Tierra Santa. El Sacro Imperio Romano Germ\u00e1nico se mostr\u00f3 incapaz de mantener la unidad pol\u00edtica debido a la creciente independencia de las ciudades. Los gobernantes locales transformaron sus ducados y condados en reinos privados y se sent\u00edan poco obligados a obedecer al emperador. Una gran parte de lo que actualmente son los Pa\u00edses Bajos estaba gobernada por el conde de la regi\u00f3n de Holanda, el duque de G\u00fceldres, el duque de Brabante Flamenco y el obispo de Utrecht. En el norte, Frisia y Groninga mantuvieron su independencia y eran gobernadas por la peque\u00f1a nobleza.\nG\u00fceldres y la regi\u00f3n de Holanda luchaban por el control de Utrecht. Por su parte, Utrecht se vio marginada a causa de las continuas dificultades que experimentaba para elegir nuevos obispos, mientras que las dinast\u00edas de los Estados vecinos eran m\u00e1s estables. Groninga, Drente y la mayor parte de G\u00fceldres, que hab\u00eda formado parte de Utrecht, se independizaron. Brabante trat\u00f3 de someter a sus vecinos, aunque sus intentos fracasaron. Los Pa\u00edses Bajos tambi\u00e9n intentaron asegurar su supremac\u00eda en Zelanda y Frisia, pero tampoco lo lograron. En el norte, Frisia conserv\u00f3 su independencia durante este per\u00edodo. Pose\u00eda sus propias instituciones y se opon\u00eda a la imposici\u00f3n del sistema feudal que se pod\u00eda encontrar en otras localidades europeas. A pesar de ello, los frisios perdieron su independencia cuando fueron derrotados en 1498 por los mercenarios lansquenetes alemanes del duque Alberto III de Sajonia-Meissen."}, {"name": "Borgo\u00f1a", "text": "Los Pa\u00edses Bajos Borgo\u00f1ones es un t\u00e9rmino que describe a la entidad geopol\u00edtica que abarcaba a los territorios de la regi\u00f3n de los Pa\u00edses Bajos (Nederlanden; Lage Landen), que fueron incorpor\u00e1ndose al dominio de los duques de Borgo\u00f1a durante el per\u00edodo comprendido entre 1384 y 1477.\nLos territorios borgo\u00f1ones se vieron expandidos con el Condado de Namur en 1421, los ducados de Brabante y Limburgo en 1439, los condados de Henao, Holanda y Zelanda en 1432, el Ducado de Luxemburgo en 1441 y el ducado de G\u00fceldres en 1437.\nEn 1433 buena parte del territorio de los Pa\u00edses Bajos y B\u00e9lgica fue unificado por el duque Felipe III de Borgo\u00f1a.[31]\u200b Antes de la uni\u00f3n borgo\u00f1ona, los neerlandeses se identificaban con su ciudad, su condado o ducado local o como s\u00fabditos del Sacro Imperio Romano Germ\u00e1nico. Fue durante esta etapa borgo\u00f1ona cuando comenz\u00f3 a surgir entre los neerlandeses una conciencia de naci\u00f3n. Los principales nobles de los Pa\u00edses Bajos invitaron al duque a conquistar este pa\u00eds, a pesar de que \u00e9l no ten\u00eda ninguna pretensi\u00f3n hist\u00f3rica sobre los Pa\u00edses Bajos. \u00c1msterdam creci\u00f3 y en el siglo\u00a0XV se convirti\u00f3 en el principal puerto comercial europeo para el grano procedente de la regi\u00f3n b\u00e1ltica.\nG\u00fceldres se opon\u00eda al dominio borgo\u00f1\u00f3n y trat\u00f3 de crear su propio Estado en el noreste de los Pa\u00edses Bajos y noroeste de Alemania. Debido a la falta de dinero, G\u00fceldres hizo que sus soldados se proveyeran de lo que necesitaran mediante el saqueo de los territorios enemigos. Estos soldados supusieron una gran amenaza para los Pa\u00edses Bajos borgo\u00f1ones. G\u00fceldres estaba aliada con Francia, Inglaterra y Dinamarca, los cuales quer\u00edan poner fin a la prosperidad de Flandes y al dominio borgo\u00f1\u00f3n sobre los Pa\u00edses Bajos.\nCuando Carlos el Temerario, duque de Borgo\u00f1a, muri\u00f3 en enero de 1477 en la batalla de Nancy sin descendencia masculina, el rey Luis XI de Francia se apoder\u00f3 del ducado de Borgo\u00f1a y lo anexion\u00f3 al dominio real, sobre la base de que los infantazgos se hab\u00edan reglamentado de forma que, al extinguirse la descendencia masculina, deb\u00edan incorporarse a la Corona. Pero Mar\u00eda de Borgo\u00f1a, la hija del duque de Borgo\u00f1a, se cas\u00f3 con el futuro emperador Maximiliano I de Habsburgo para defender su herencia y no acept\u00f3 la p\u00e9rdida del ducado, manteniendo as\u00ed la titulaci\u00f3n de duque de Borgo\u00f1a por el prestigio que otorgaba a su titular el ser Gran Maestre y Jefe Soberano de la Orden del Tois\u00f3n de Oro.\nEn febrero de 1477, Mar\u00eda de Borgo\u00f1a concede el llamado Gran Privilegio a sus s\u00fabditos de Flandes (B\u00e9lgica, Pa\u00edses Bajos, Luxemburgo y norte de Francia), que fue firmado en Gante, devolvi\u00e9ndoles los privilegios arrebatados por los duques anteriores, Felipe el Bueno y Carlos el Temerario. Era un Estatuto que garantizaba el autogobierno de los Pa\u00edses Bajos, seg\u00fan el cual se creaba un Gran Consejo para asesorar a Mar\u00eda de Borgo\u00f1a, que se compromet\u00eda a no declarar la guerra o subir los impuestos sin el consentimiento de los Estados Generales de los Pa\u00edses Bajos.\nAl firmarse el tratado de Senlis en 1493, los franceses conservaron el territorio del Ducado de Borgo\u00f1a, pero devolvieron el Franco Condado y el Artois a los borgo\u00f1ones. En 1493, Felipe el Hermoso ya era mayor de edad y su intitulaci\u00f3n en 1495 muestra sus posesiones territoriales en los Pa\u00edses Bajos:\nEl matrimonio de Felipe el Hermoso con la hija de los Reyes Cat\u00f3licos y futura reina Juana I posibilit\u00f3 la vinculaci\u00f3n de los territorios de Borgo\u00f1a y los Pa\u00edses Bajos con los futuros monarcas espa\u00f1oles.\nEn el tratado de Nimega (1678), se cedi\u00f3 definitivamente el territorio de Borgo\u00f1a a Francia, con lo que una vez adquiridos todos los territorios de Borgo\u00f1a (Franco Condado y Ducado de Borgo\u00f1a), Luis XIV de Francia invisti\u00f3 a su nieto Luis de Francia (1682-1712), como duque de Borgo\u00f1a. Por otra parte, Carlos II de Espa\u00f1a y sus sucesores conservaron los t\u00edtulos borgo\u00f1ones de forma nominal en su intitulaci\u00f3n."}, {"name": "Pa\u00edses Bajos de los Habsburgo", "text": "Por herencia y conquista el pa\u00eds estuvo\nXVI\nAl emperador Carlos le sucedi\u00f3 su hijo Felipe II de Espa\u00f1a.[35]\u200b A diferencia de su padre, que hab\u00eda crecido en Gante (B\u00e9lgica), Felipe tuvo poco apego personal con los Pa\u00edses Bajos, y as\u00ed la nobleza local le consider\u00f3 indiferente hacia su Estado. Como cat\u00f3lico devoto, Felipe estaba consternado por el \u00e9xito de la Reforma protestante, que llev\u00f3 a un aumento del n\u00famero de calvinistas. Sus intentos por reforzar la persecuci\u00f3n religiosa de los protestantes y sus esfuerzos por centralizar el gobierno, la justicia y los impuestos le hicieron impopular y condujeron a una revuelta. Los neerlandeses lucharon por su independencia de Espa\u00f1a, lo que origin\u00f3 la guerra de los Ochenta A\u00f1os (1568-1648). Siete provincias rebeldes se unieron en la Uni\u00f3n de Utrecht en 1579 y formaron la Rep\u00fablica de los Siete Pa\u00edses Bajos Unidos.[36]\u200b\nLos tratados de paz con Francia (1598) y con Inglaterra (1604) y el agotamiento por la guerra llevaron al establecimiento de la tregua de los doce a\u00f1os.\nEn la pr\u00e1ctica los territorios del norte formaban las Provincias Unidas: Holanda, Zelanda, Utrecht, G\u00fceldres (con Zutphen), Overijssel (con Drente), Frisia y Groniga, adem\u00e1s de los territorios de la Generalidad (partes de Brabante, Flandes y Limburgo). Los territorios del sur, bajo la soberan\u00eda de los Habsburgo, formaron los Pa\u00edses Bajos espa\u00f1oles: Flandes, Artois, Henao, Namur, Luxemburgo, Brabante, Amberes, Malinas, Limburgo. Esto se reflej\u00f3 en los Estados Generales de los Pa\u00edses Bajos, ya que en la parte septentrional se establecieron en La Haya y en la parte meridional en Bruselas.\nDe esta manera, por el Acta de Abjuraci\u00f3n de 1581 y la Tregua de los doce a\u00f1os de 1609 se formaron dos entidades pol\u00edticas: al norte, las Provincias Unidas, y al sur los Pa\u00edses Bajos espa\u00f1oles.\nMediante la Tregua con las provincias del Norte, los archiduques Alberto e Isabel Clara Eugenia emprendieron una pol\u00edtica de reparaci\u00f3n y reorganizaci\u00f3n interna, protegiendo las artes, las ciencias, as\u00ed como el comercio y la agricultura. Adem\u00e1s su Edicto Perpetuo de 12 de julio de 1611[37]\u200b conforma el primer c\u00f3digo legal belga. No obstante, aunque independientes los Pa\u00edses Bajos permanecieron dentro de la esfera de influencia espa\u00f1ola.\nEn 1714, con el Tratado de Rastatt el emperador Carlos VI obtuvo el control de los Pa\u00edses Bajos espa\u00f1oles, pasando a ser conocidos como los Pa\u00edses Bajos austr\u00edacos.\nLa pol\u00edtica centralizadora del emperador Jos\u00e9 II de Habsburgo en contra de los antiguos privilegios provoc\u00f3 la rebeli\u00f3n general en 1788, la Revoluci\u00f3n brabanzona, que se declararon independientes y formaron los Estados Unidos de B\u00e9lgica (11 de enero de 1790), en una declaraci\u00f3n firmada por Brabante Flamenco, G\u00fceldres, Flandes, Flandes Occidental, Henao, Namur, Tournai, Tournaisis y Malinas, pero no Luxemburgo.[38]\u200b\nA fines de 1790, el poder imperial lo restaur\u00f3 el emperador Leopoldo II de Austria.\nDurante las guerras revolucionarias francesas, el ej\u00e9rcito revolucionario franc\u00e9s venci\u00f3 en 1792 al austriaco en la batalla de Jemappes y conquist\u00f3 los territorios de los Pa\u00edses Bajos meridionales, pero la victoria austriaca en Neerwinden en 1793 puso en retirada al ej\u00e9rcito franc\u00e9s.\nFinalmente, los franceses obtuvieron en 1794 la victoria en la batalla de Fleurus y los austriacos se retiraron de nuevo de los Pa\u00edses Bajos.\nEl 1 de octubre de 1795, la Convenci\u00f3n Nacional anexion\u00f3 los Pa\u00edses Bajos y el Obispado de Lieja.[39]\u200b La p\u00e9rdida de territorios fue reconocida por Austria en el Tratado de Campo Formio, el 17 de octubre de 1797."}, {"name": "Rep\u00fablica Neerlandesa (1581-1795)", "text": "Guillermo I de Orange, el fundador de la familia real neerlandesa, lider\u00f3 a los neerlandeses durante la primera parte de la guerra. Los primeros a\u00f1os fueron un \u00e9xito para las tropas espa\u00f1olas. Sin embargo, los asedios siguientes en los Pa\u00edses Bajos fueron contrarrestados. El rey de Espa\u00f1a perdi\u00f3 el dominio de los Pa\u00edses Bajos despu\u00e9s de que las tropas de Felipe II amotinadas saqueasen Amberes y matasen a un n\u00famero considerable de sus habitantes. Los cat\u00f3licos conservadores del sur y el este apoyaron a los espa\u00f1oles, que reconquistaron Amberes y otras ciudades flamencas y neerlandesas. Si bien la mayor parte del territorio en los Pa\u00edses Bajos se sustraer\u00eda finalmente al dominio de la rama espa\u00f1ola de los Habsburgo, no sucedi\u00f3 lo mismo en Flandes, teniendo como resultado la separaci\u00f3n hist\u00f3rica entre los Pa\u00edses Bajos y Flandes). Muchos flamencos huyeron a los Pa\u00edses Bajos, entre ellos, la mitad de la poblaci\u00f3n de Amberes, tres cuartos de la de Brujas y Gante y toda la poblaci\u00f3n de Nieuwpoort, Dunkerque y el campo.\nLa guerra continu\u00f3 ininterrumpidamente durante sesenta a\u00f1os m\u00e1s, pero el enfrentamiento principal hab\u00eda terminado. La Paz de Westfalia, firmada el 30 de enero de 1648, confirm\u00f3 la independencia de las Provincias Unidas respecto a Espa\u00f1a y Alemania. Los neerlandeses ya no se consideraban a s\u00ed mismos como alemanes desde el siglo\u00a0XV, pero permanecieron oficialmente como parte del Sacro Imperio Romano Germ\u00e1nico hasta 1648. La identidad nacional se form\u00f3 principalmente por la provincia de la que proced\u00eda la mayor\u00eda de la poblaci\u00f3n. Puesto que los Pa\u00edses Bajos eran con diferencia, la provincia m\u00e1s importante, la Rep\u00fablica de las Siete Provincias lleg\u00f3 a ser conocida como Pa\u00edses Bajos en el extranjero.\nLos pescadores neerlandeses cazaban ballenas en la costa de Svalbard, comerciaban con especias en la India e Indonesia y fundaron colonias en Nueva \u00c1msterdam (hoy Nueva York), Sud\u00e1frica y las Indias Orientales Neerlandesas. El mayor asentamiento neerland\u00e9s en el extranjero fue la Colonia del Cabo, fundada por Jan van Riebeeck en nombre de la Compa\u00f1\u00eda Neerlandesa de las Indias Orientales, en Ciudad del Cabo en 1652. El pr\u00edncipe de Orange adquiri\u00f3 el control de la Colonia del Cabo en 1788.\nAdem\u00e1s, algunas antiguas colonias portuguesas fueron conquistadas por los neerlandeses, principalmente en el nordeste de Brasil, Angola, Indonesia y Ceil\u00e1n. Debido a estos acontecimientos, el siglo\u00a0XVII lleva el sobrenombre de la Edad de Oro de los Pa\u00edses Bajos. Como eran una rep\u00fablica, estaban gobernados m\u00e1s por una aristocracia de comerciantes urbanos, llamados los regentes. Los Estados Generales, con representantes de todas las provincias, decid\u00edan aquellas cuestiones importantes para toda la Rep\u00fablica. Sin embargo, a la cabeza de cada provincia estaba el estat\u00fader de esa provincia, un puesto ocupado por un descendiente de la Casa de Orange.\nEn 1650 el estat\u00fader Guillermo II de Orange-Nassau muri\u00f3 repentinamente de viruela. Su hijo, el \u00faltimo estat\u00fader y rey de Inglaterra, Guillermo III, naci\u00f3 ocho d\u00edas despu\u00e9s, por tanto, dej\u00f3 a la naci\u00f3n sin un sucesor obvio. Los pr\u00edncipes de Orange se convirtieron en estat\u00fader y en gobernantes casi hereditarios en 1672 y 1748. La Rep\u00fablica Neerlandesa de las Provincias Unidas fue una aut\u00e9ntica rep\u00fablica solamente desde 1650 hasta 1672 y de 1702 a 1748. A estos per\u00edodos se les llama la Primera y Segunda Era sin estat\u00fader."}, {"name": "Reino Unido de los Pa\u00edses Bajos", "text": "El territorio de los Pa\u00edses Bajos fue incorporado al Primer Imperio franc\u00e9s bajo el reinado de Napole\u00f3n I desde 1810 hasta 1814. Despu\u00e9s se form\u00f3 el Reino Unido de los Pa\u00edses Bajos que inclu\u00eda a las actuales B\u00e9lgica y Luxemburgo. El Congreso de Viena aport\u00f3 dos importantes cambios: se perdi\u00f3 el dominio colonial sobre Indonesia y se unificaron el norte y sur de los Pa\u00edses Bajos.\nLas tensiones entre el norte y el sur, entre otras causas por la diferencia religiosa, provocaron que en 1830 los belgas se declararan independientes (Revoluci\u00f3n belga), y aunque el rey Guillermo I envi\u00f3 un a\u00f1o m\u00e1s tarde tropas, la movilizaci\u00f3n del ej\u00e9rcito franc\u00e9s en favor de la causa belga le hizo desistir de cualquier enfrentamiento. Solo ocho a\u00f1os m\u00e1s tarde, en 1839, se reconoci\u00f3 oficialmente la independencia de B\u00e9lgica.\nLa ascensi\u00f3n de la reina Guillermina al trono en 1890 signific\u00f3 la separaci\u00f3n de los Pa\u00edses Bajos de Luxemburgo, debido a que el t\u00edtulo de Gran Duque no pod\u00eda ser heredado por una mujer.[40]\u200b Durante el siglo\u00a0XIX el pa\u00eds tard\u00f3 en industrializarse en comparaci\u00f3n con Alemania o Francia.[41]\u200b"}, {"name": "Guerras mundiales", "text": "A pesar de que los Pa\u00edses Bajos movilizaron sus tropas en agosto de 1914, permanecieron neutrales durante la Primera Guerra Mundial.[42]\u200b La invasi\u00f3n alemana de B\u00e9lgica aquel mismo a\u00f1o indujo a muchos refugiados belgas (en torno a un mill\u00f3n) a buscar cobijo en el pa\u00eds. Dado que los neerlandeses se encontraban rodeados por pa\u00edses en guerra y el mar del Norte no era seguro para la navegaci\u00f3n civil, los alimentos escasearon y se hizo necesario recurrir al racionamiento. Al finalizar el conflicto en 1918, la situaci\u00f3n regres\u00f3 a la normalidad.\nLa Gran Depresi\u00f3n de 1929 tuvo efectos muy negativos para la econom\u00eda neerlandesa. Como el gobierno de Henrik Colijn se neg\u00f3 a cambiar su pol\u00edtica econ\u00f3mica y a salir del patr\u00f3n oro, los Pa\u00edses Bajos tardaron m\u00e1s tiempo en recuperarse de la crisis que otros pa\u00edses europeos. La depresi\u00f3n provoc\u00f3 mucho desempleo y pobreza, adem\u00e1s de un creciente descontento social. El auge del nacionalsocialismo en Alemania no pas\u00f3 inadvertido en los Pa\u00edses Bajos, en los que surgi\u00f3 el temor a un nuevo conflicto armado. A pesar de ello, la opini\u00f3n mayoritaria entre los neerlandeses era que Alemania respetar\u00eda la neutralidad de los Pa\u00edses Bajos.\nAl estallar la Segunda Guerra Mundial en 1939, declararon su neutralidad una vez m\u00e1s. No obstante, el 10 de mayo de 1940 los alemanes lanzaron un ataque contra los Pa\u00edses Bajos y B\u00e9lgica y conquistaron la mayor parte del pa\u00eds en poco tiempo. Las mal equipadas tropas neerlandesas pudieron hacer muy poco; el 14 de mayo ya solo quedaban unas pocas bolsas de resistencia. Sin embargo, aquel d\u00eda la Luftwaffe (fuerza a\u00e9rea alemana) bombarde\u00f3 R\u00f3terdam, la segunda ciudad m\u00e1s importante del pa\u00eds, matando a 800 personas y destruyendo buena parte de la ciudad, lo que dej\u00f3 sin hogar a 78\u00a0000 personas. Tras este bombardeo y las amenazas alemanas de realizar uno similar en Utrecht, los Pa\u00edses Bajos capitularon el 15 de mayo (excepto la provincia de Zelanda). La familia real y algunas tropas huyeron al Reino Unido. Algunos miembros de la familia real vivieron en Ottawa (Canad\u00e1) hasta la liberaci\u00f3n aliada.\nFuerzas japonesas invadieron las Indias Orientales Neerlandesas el 11 de enero de 1942; all\u00ed, los neerlandeses se rindieron el 8 de marzo, despu\u00e9s de que los japoneses desembarcaran en Java. Sin embargo, muchos nav\u00edos y militares neerlandeses lograron alcanzar Australia, desde donde lucharon contra los japoneses. El invierno 1944-1945 fue especialmente duro, provocando hambruna y pasando a la historia neerlandesa con el nombre de Hongerwinter (\"invierno del hambre\").[43]\u200b El 6 de mayo de 1945, la Alemania nazi claudic\u00f3 y firm\u00f3 su rendici\u00f3n ante los neerlandeses en Wageningen."}, {"name": "Desde 1945", "text": "Despu\u00e9s de la guerra, la econom\u00eda neerlandesa prosper\u00f3 y el pa\u00eds fue miembro fundador de la Comunidad Europea del Carb\u00f3n y del Acero (CECA) en 1951, la cual desemboc\u00f3 finalmente en 1957 en la fundaci\u00f3n de la Comunidad Econ\u00f3mica Europea. Ya en 1944 B\u00e9lgica, los Pa\u00edses Bajos y Luxemburgo comenzaron una cooperaci\u00f3n aduanera bajo el nombre de Benelux, (BElgi\u00eb-NEderland-LUXembourg), que aboc\u00f3 en 1958 en una uni\u00f3n econ\u00f3mica.[44]\u200b El Tratado de la Uni\u00f3n Europea o Tratado de Maastricht es conocido as\u00ed porque se firm\u00f3 en la ciudad neerlandesa de Maastricht.[45]\u200b\nEn 1953 el pa\u00eds sufri\u00f3 una de las cat\u00e1strofes naturales m\u00e1s grandes de su historia. En la noche del 31 de enero al 1 de febrero se rompieron m\u00faltiples diques en el suroeste del pa\u00eds, inundando grandes zonas de las provincias de Zelanda y Holanda Meridional causando la muerte a cerca de 1800 personas y p\u00e9rdidas millonarias.[46]\u200b A partir de entonces, se inici\u00f3 el Plan Delta que proyect\u00f3 la construcci\u00f3n de grandes diques y obras civiles para la retenci\u00f3n de los embates de las aguas del mar del Norte. Pero las obras que deber\u00edan proteger la provincia de Zelanda no se terminaron hasta casi el final del siglo\u00a0XX.\nLa creaci\u00f3n del Benelux, uni\u00f3n econ\u00f3mica junto con B\u00e9lgica y Luxemburgo, y su posterior adhesi\u00f3n a otros organismos paneuropeos dio paso a la creaci\u00f3n de la Comunidad Econ\u00f3mica Europea tras la firma de los tratados de Roma en 1957, por lo que los Pa\u00edses Bajos son considerados como uno de los pa\u00edses fundadores de dicha organizaci\u00f3n. Durante los a\u00f1os 1970 la crisis del petr\u00f3leo hizo que los diferentes gobiernos creasen un frente con cambios en la pol\u00edtica econ\u00f3mica, creando un ejemplo de crecimiento, lo que algunos denominaron polder-economie o econom\u00eda de p\u00f3lder. En 1980 la reina Juliana abdic\u00f3 en su hija Beatriz, el sexto monarca desde la creaci\u00f3n del Reino de los Pa\u00edses Bajos y tercera mujer, tras su madre y su abuela, que reina el territorio de forma consecutiva.\nLos gabinetes de Ruud Lubbers (1982-1994) comenzaron con una pol\u00edtica de economizar y privatizar. En 1992 se firm\u00f3 en la ciudad de Maastricht el Tratado de la Uni\u00f3n Europea. El gabinete de Wim Kok (1994-2002) estaba compuesto por liberales y socialdem\u00f3cratas y fue el primer gabinete sin partidos cristianos. En 2001 se introdujeron las reformas liberales pioneras en el mundo, como el matrimonio entre personas del mismo sexo y la legalizaci\u00f3n de la eutanasia.\nEl 28 de enero de 2013, la reina Beatriz anunci\u00f3 por televisi\u00f3n su abdicaci\u00f3n a favor de su hijo el pr\u00edncipe Guillermo Alejandro, que reina con el mismo nombre a partir del 30 de abril de dicho a\u00f1o.[47]\u200b"}]}, {"name": "Gobierno y pol\u00edtica", "text": "Los Pa\u00edses Bajos forman una monarqu\u00eda constitucional. El pa\u00eds se describe como un estado de consolidaci\u00f3n pol\u00edtico-social, llegando incluso a proyectarse como un statu quo de los pa\u00edses del mundo. Las pol\u00edticas de su gobierno se caracterizan por un esfuerzo en alcanzar amplio consenso en decisiones importantes, dentro de la comunidad pol\u00edtica y de la sociedad en su totalidad. El Estado adem\u00e1s se caracteriza pol\u00edtica y socialmente por reformar instituciones como la familia y permitir con ello la entrada de nuevas maneras de convivencia social tales como el matrimonio del mismo sexo, la transexualidad,[48]\u200b la eutanasia y el uso de drogas recreativas.\nDentro de su conformaci\u00f3n pol\u00edtica, el rey desempe\u00f1a el poder ejecutivo y ratifica la libre elecci\u00f3n del primer ministro por el pueblo. El poder legislativo est\u00e1 representado por lo que hasta hoy d\u00eda se denominan Estados Generales (Parlamento), las cuales consisten en dos c\u00e1maras de representaci\u00f3n legislativa. El poder judicial es representado por las Asambleas Provisionales, las cuales tambi\u00e9n son elegidas por sufragio directo.[cita\u00a0requerida] En los Pa\u00edses Bajos, el estado neerland\u00e9s financia, adem\u00e1s del salario, todos los costos de la Casa Real, lo que incluye palacios, viajes en avi\u00f3n, personal, entre otros, con costos que ascienden 4,5 millones de euros al a\u00f1o.[cita\u00a0requerida]\nSe rige de acuerdo al Estatuto del Reino de 1954 y a la Constituci\u00f3n de 1815, los cuales han sido reformados en innumerable cantidad de ocasiones. El sufragio masculino se implant\u00f3 en 1917 y el universal en 1919.", "subsections": []}, {"name": "Organizaci\u00f3n pol\u00edtico-administrativa", "text": "Los Pa\u00edses Bajos, como pa\u00eds constituyente del reino, est\u00e1n formados por doce provincias:\nBrabante Septentrional\nDrente\nFlevoland\nFrisia\nG\u00fceldres\nGroninga\nHolanda Meridional\nHolanda Septentrional\nLimburgo\nOverijssel\nUtrecht\nZelanda\nCada provincia est\u00e1 gobernada por un comisionado o gobernador designado por el rey, y una c\u00e1mara legislativa elegida mediante sufragio universal. Las provincias tienen varias municipalidades, cada una de ellas gobernada por una junta elegida popularmente y un burgomaestre o alcalde nombrado por el monarca.\nAsimismo, las municipalidades especiales de Bonaire, San Eustaquio y Saba, localizadas en el llamado Caribe Neerland\u00e9s, forman parte del territorio de los Pa\u00edses Bajos desde el 10 de octubre de 2010, pero no forman parte de ninguna provincia. Antes de la disoluci\u00f3n de las Antillas Neerlandesas, las tres municipalidades, junto con Curazao y Sint Maarten, formaban parte de los Pa\u00edses Bajos, completando el territorio del Reino de los Pa\u00edses Bajos el pa\u00eds constituyente de Aruba, con el mismo estatus en el reino que los Pa\u00edses Bajos desde 1986. Tras dicha fecha, Curazao y Sint Maarten pasaron a obtener la misma autonom\u00eda que Aruba.", "subsections": []}, {"name": "Relaciones exteriores", "text": "V\u00e9ase tambi\u00e9n:\nLa pol\u00edtica exterior de Pa\u00edses Bajos se centra en la defensa de los intereses del reino y est\u00e1 presidida por el deseo de fomentar la paz, la libertad, el bienestar y el orden jur\u00eddico internacional. Se desarrolla en gran medida en las decisiones de las Naciones Unidas (ONU), la Uni\u00f3n Europea (UE) y la Organizaci\u00f3n del Tratado del Atl\u00e1ntico Norte (OTAN). Fue uno de los fundadores de la ONU, la OTAN, la Comunidad Europea, el FMI (Fondo Monetario Internacional), el BIRD (Banco Mundial) y la UEO (Uni\u00f3n Europea Occidental).[49]\u200b", "subsections": []}, {"name": "Geograf\u00eda", "text": "El nombre del pa\u00eds, Nederlanden (\u00abTierras bajas\u00bb), se debe a que una parte del norte y oeste del territorio del pa\u00eds se encuentra por debajo del nivel del mar. Al sureste del pa\u00eds se extienden los llamados Pa\u00edses altos superiores, que se elevan un poco por encima del nivel del mar.\nUn complejo sistema de drenaje de agua, cuya construcci\u00f3n se inici\u00f3 en la \u00e9poca medieval, ha permitido incrementar la superficie del pa\u00eds en m\u00e1s de un 20\u00a0%. Sin un drenaje constante la mitad de los Pa\u00edses Bajos ser\u00eda inundado por el mar y por los numerosos r\u00edos que cruzan su territorio, como es el caso del Rin que desemboca en R\u00f3terdam, lo que ha hecho de esta ciudad el puerto de mayor tr\u00e1fico de Europa. Junto con el Rin hay otros dos r\u00edos m\u00e1s que dividen al pa\u00eds en dos partes, estos son el r\u00edo Mosa y el Waal. El punto m\u00e1s alto del pa\u00eds se encuentra en Vaalserberg, en la provincia de Limburgo y tiene una altitud de 321 metros sobre el nivel del mar.[50]\u200b", "subsections": [{"name": "Plan Delta", "text": "Durante la inundaci\u00f3n del mar del Norte de 1953, la brecha en un dique caus\u00f3 la muerte a 1835 personas, forzando la evacuaci\u00f3n de otras 70\u00a0000, adem\u00e1s de ser destruidas 4500 edificaciones. Para evitar que una cat\u00e1strofe as\u00ed se repitiera, un ambicioso proyecto fue puesto en marcha, el Plan Delta (Idioma neerland\u00e9s: Deltawerken) que uni\u00f3 las desembocaduras del Rin y el Mosa.\nLa obra m\u00e1s destacada del complejo es la Oosterscheldekering que est\u00e1 considerada una de las siete maravillas del mundo moderno seg\u00fan la Sociedad Americana de Ingenieros Civiles.\nAdem\u00e1s, los Pa\u00edses Bajos son uno de los pa\u00edses que m\u00e1s sufren el cambio clim\u00e1tico. Las inundaciones producidas por el mar son un problema y un desbordamiento de los r\u00edos tambi\u00e9n podr\u00eda ser muy peligroso.[51]\u200b[52]\u200b[53]\u200b"}, {"name": "Clima", "text": "El bioma primigenio es el bosque templado de frondosas. Seg\u00fan WWF, la pr\u00e1ctica totalidad del pa\u00eds pertenece a la ecorregi\u00f3n denominada bosque mixto atl\u00e1ntico, salvo el extremo sureste, que corresponde al bosque de frondosas de Europa occidental. Los vientos del oeste, especialmente en invierno son fuertes, las lluvias copiosas y las temperaturas moderadas con granizo.[54]\u200b La siguiente tabla muestra las variaciones del clima en el pa\u00eds:"}]}, {"name": "Econom\u00eda", "text": "Pa\u00edses Bajos cuenta con una econom\u00eda de mercado que se constituye como una de las m\u00e1s grandes[cita\u00a0requerida] y desarrolladas del mundo. Seg\u00fan el Banco Mundial, en 2018 su econom\u00eda creci\u00f3 un 2,6\u00a0%[55]\u200b y alcanzaba un PIB per c\u00e1pita de 54\u00a0024,059\u00a0USD.[56]\u200b El 70,2\u00a0% de la fuerza laboral trabaja en el sector servicios, un 17,9\u00a0% trabaja en la industria, y tan solo el 1,6\u00a0% de la fuerza laboral trabaja en el sector de agricultura.[57]\u200b En el segundo trimestre del a\u00f1o 2019, la tasa de desempleo se situ\u00f3 en el 3,3\u00a0%, una de las m\u00e1s bajas de la OCDE.[58]\u200b En 2015, el porcentaje de poblaci\u00f3n que viv\u00eda con menos de 5,50 d\u00f3lares al d\u00eda era del 0,5\u00a0%.[59]\u200b\n\u00a0Alemania\n Rep\u00fablica Popular China\n\u00a0B\u00e9lgica\n\u00a0Reino Unido\n\u00a0Francia\n\u00a0Estados Unidos\n\u00a0Italia\nLa econom\u00eda neerlandesa destaca por su alto grado de competitividad, situ\u00e1ndose en 2019 en el cuarto puesto de un total de 141 pa\u00edses.[60]\u200b El comercio representa m\u00e1s del 80\u00a0% de su PIB y si se suman sus importaciones y exportaciones, a pesar de que su poblaci\u00f3n tiene un peso relativo del 0,22\u00a0% en la poblaci\u00f3n mundial, su comercio equivale al 4\u00a0% del total. En 2006, el puerto de R\u00f3terdam era el s\u00e9ptimo contenedor m\u00e1s grande en t\u00e9rminos de TEU. En el norte, cerca de Slochteren, est\u00e1 situado uno de los campos de gas natural m\u00e1s grandes del mundo.[61]\u200b Hasta ahora la explotaci\u00f3n de este campo dio un ingreso total de 159\u00a0000 millones de euros desde mediados de los a\u00f1os 1970. Con un poco m\u00e1s de la mitad de las reservas consumidas y esperando una subida continuada de los precios del petr\u00f3leo, se esperan ingresos durante las pr\u00f3ximas d\u00e9cadas.[62]\u200b\nDebido a la escasez de recursos naturales, con la notable excepci\u00f3n de gas natural, los Pa\u00edses Bajos son muy dependientes de las importaciones de otros pa\u00edses.[63]\u200b\nSeg\u00fan las previsiones de la Comisi\u00f3n Europea, la econom\u00eda neerlandesa crecer\u00e1 un 1,7\u00a0% en 2019 y un 1,3\u00a0% para 2020 y 2021, por lo que se tratar\u00e1 de un crecimiento moderado, pero superior al de otros pa\u00edses de su entorno como Alemania, B\u00e9lgica, Francia.[64]\u200b", "subsections": [{"name": "Turismo", "text": "En 2017, unos 17,6 millones de personas visitaron los Pa\u00edses Bajos, y el sector da empleo a m\u00e1s de 640 000 personas.[65]\u200b \u00c1msterdam es la capital del pa\u00eds y uno de los destinos m\u00e1s visitados por los turistas. La poblaci\u00f3n utiliza la bicicleta como medio de transporte preferente. Los lugares m\u00e1s relevantes para visitar en \u00c1msterdam son el museo van Gogh, el Rijksmuseum y la casa de Ana Frank.\nEn el resto del pa\u00eds los destinos m\u00e1s frecuentes son: La Haya, capital administrativa de los Pa\u00edses Bajos; R\u00f3terdam con el Europort, el puerto m\u00e1s grande de Europa y segundo del mundo; Gouda, con su mercado de queso que se celebra todos los jueves; Alkmaar, tambi\u00e9n importante por sus quesos; y Dordrecht, ciudad m\u00e1s antigua de los Pa\u00edses Bajos junto con Nimega y las localidades de Lisse e Hillegom, que poseen el Keukenhof. Tambi\u00e9n son importantes Delft, Haarlem, Utrecht o Groninga.\nCabe destacar que el pa\u00eds dispone de siete lugares declarados Patrimonio de la humanidad por la Unesco.[66]\u200b Uno de ellos se encuentra en las Antillas Neerlandesas, la zona hist\u00f3rica de Willemstad. Adem\u00e1s cuenta con otro lugar m\u00e1s, compartido con Alemania, el mar de Frisia. El resto son: Schokland y sus alrededores, la l\u00ednea de defensa de \u00c1msterdam, la red de molinos de Kinderdijk-Elshout, la Ir.D.F. Woudagemaal, el Droogmakerij de Beemster y la casa Rietveld Schr\u00f6der.\nA partir de 2020, y bajo la supervisi\u00f3n del Ministerio de Asuntos Exteriores, la marca \"Holanda\" cambi\u00f3, para conocerse de la misma manera que el nombre oficial del pa\u00eds \"Pa\u00edses Bajos\" (NL Netherlands). Netherlands (en ingl\u00e9s) y en may\u00fasculas, NL es el nuevo logotipo que sustituir\u00e1 al topon\u00edmico Holland, usado hasta 2019. Las embajadas y consulados siempre han utilizado el nombre oficial Pa\u00edses Bajos, debido a que Holanda del Norte y del Sur son solo dos de las 12 provincias nacionales. La Oficina Nacional de Turismo, que se promociona hasta ahora como Holland, analizar\u00e1 c\u00f3mo adaptar el nuevo emblema, vigente a partir de este 1 de enero.[67]\u200b"}]}, {"name": "Demograf\u00eda", "text": "En el a\u00f1o 2019, ten\u00eda una poblaci\u00f3n de 17 282 163 habitantes.[68]\u200b El idioma oficial es el neerland\u00e9s y la esperanza de vida es de 79,1 a\u00f1os. El 99\u00a0% de la poblaci\u00f3n est\u00e1 alfabetizada y presentan una de las densidades de poblaci\u00f3n m\u00e1s altas del mundo, con 399 494 hab/km\u00b2.[69]\u200b De 1950 a 2000, la poblaci\u00f3n se increment\u00f3 de 10 a 15,9 millones de habitantes, pero el ritmo de crecimiento de la poblaci\u00f3n fue m\u00e1s lento en comparaci\u00f3n con los anteriores 50 a\u00f1os.[70]\u200b La estimaci\u00f3n del crecimiento actual es del 0,412\u00a0%, con un promedio de hijos por mujer de 1,66.[71]\u200b\nEl gobierno alent\u00f3 la emigraci\u00f3n despu\u00e9s de la Segunda Guerra Mundial, ya que tem\u00eda una superpoblaci\u00f3n del territorio. Cerca de medio mill\u00f3n de personas abandonaron el pa\u00eds, pero el n\u00famero de inmigrantes provenientes principalmente de Indonesia, las Antillas Neerlandesas, Turqu\u00eda, Surinam y Marruecos, ha superado el n\u00famero de emigrantes en los \u00faltimos a\u00f1os.[72]\u200b\nLa composici\u00f3n \u00e9tnica actual es la siguiente:[73]\u200b\n80,9\u00a0% neerlandeses\n2,4\u00a0% alemanes\n2,4\u00a0% indonesios\n2,2\u00a0% turcos\n2,0\u00a0% surinameses\n1,9\u00a0% marroqu\u00edes\n0,8\u00a0% antillanos y arubanos\n6,0\u00a0% otros", "subsections": [{"name": "Urbanizaci\u00f3n", "text": "El pa\u00eds est\u00e1 densamente poblado, aunque las ciudades sean modestas en el tama\u00f1o comparado con otros pa\u00edses europeos o mundiales. No tienen un tama\u00f1o muy grande, pero el grado de urbanizaci\u00f3n medio de estas es muy alto. La capital y la ciudad m\u00e1s grande es \u00c1msterdam, aunque el gobierno est\u00e1 localizado en La Haya. Mientras que la capital generalmente est\u00e1 definida como la ciudad donde habita la sede del gobierno, en este caso nadie llamar\u00eda nunca a La Haya como capital, aunque s\u00ed es conocida como la \u00abcapital legal del mundo\u00bb.[74]\u200b"}, {"name": "Randstad", "text": "El Randstad (del neerland\u00e9s rand, 'borde', y stad, 'ciudad') es el nombre que recibe la mayor conurbaci\u00f3n de los Pa\u00edses Bajos, a su vez una de las mayores de Europa.[75]\u200b\nHay que distinguir entre la regi\u00f3n metropolitana de Randstad, con una poblaci\u00f3n en torno a los 6,5 millones de habitantes (40\u00a0% del total de los Pa\u00edses Bajos), y la Regi\u00f3n de Randstad (una asociaci\u00f3n socioecon\u00f3mica), que re\u00fane unos 7,6 millones de habitantes (casi la mitad de la poblaci\u00f3n del pa\u00eds).[76]\u200b Ambas entidades se extienden por las provincias de Holanda Meridional, Holanda Septentrional, Utrecht y Flevoland."}]}, {"name": "Cultura", "text": "Durante el periodo g\u00f3tico y renacentista los Pa\u00edses Bajos comenzaron a experimentar un desarrollo art\u00edstico notable, sobre todo en pintura. En el plano intelectual, Erasmo de R\u00f3terdam, nacido en los Pa\u00edses Bajos tuvo gran influencia en la vida cultural de su pa\u00eds y de Europa durante el siglo\u00a0XVI. Posteriormente y en su honor se otorga desde 1958 el Premio Erasmus en el campo de las humanidades, ciencias sociales y las artes.\nEn el siglo\u00a0XVII, durante el periodo que se conoce como la \u00abEdad de Oro neerlandesa\u00bb, la influencia cultural del pa\u00eds tuvo su c\u00faspide. Entre las figuras neerlandesas m\u00e1s notorias de esa \u00e9poca estaban Christiaan Huygens y Baruch Spinoza. Adem\u00e1s, hab\u00eda extranjeros que viv\u00edan en el pa\u00eds gracias a su ambiente de tolerancia, como el franc\u00e9s Ren\u00e9 Descartes o el ingl\u00e9s John Locke. El pa\u00eds es conocido popularmente por sus molinos de viento, zapatos de madera, tulipanes, bicicletas y tolerancia social.", "subsections": [{"name": "Pintura", "text": "La pintura barroca neerlandesa es burguesa, dominando los temas de paisaje, retratos y vida cotidiana, con la figura de Rembrandt como su mejor exponente. En esta \u00abEdad de Oro neerlandesa\u00bb del siglo\u00a0XVII tambi\u00e9n destacaron Johannes Vermeer, Frans Hals y anteriormente Hieronymus Bosch. En siglos m\u00e1s recientes, el pa\u00eds ha producido pintores notables como Vincent van Gogh o Piet Mondrian.\nLa abstracci\u00f3n de Mondrian se elabor\u00f3 a partir de la ret\u00edcula cubista, a la que progresivamente redujo a trazos horizontales y verticales que encierran planos de color puro. Por su simplificaci\u00f3n, el lenguaje del neoplasticismo (v\u00e9ase De Stijl). En el periodo de entreguerras, Theo van Doesburg, despu\u00e9s de haber sido uno de los principales defensores del neoplasticismo, renov\u00f3 de manera decisiva el arte abstracto al mantener que la creaci\u00f3n art\u00edstica solo deb\u00eda estar sometida a reglas controlables y l\u00f3gicas."}, {"name": "Literatura", "text": "En la Edad Media destaca la versi\u00f3n en neerland\u00e9s antiguo de una historia caballeresca francesa, Flores y Blancaflor, inspirada en un cuento de las Mil y una noches; original es, sin embargo, Karel ende Elegast (Carlomagno y Elegast); hay tambi\u00e9n una versi\u00f3n en neerland\u00e9s del Roman del Renart franc\u00e9s. El primer poeta de nombre conocido es Hendrik van Veldeke (ca. 1170). Se considera padre de la prosa en neerland\u00e9s al m\u00edstico Jan van Ruusbroec (1293-1381), cuya obra Die Chierheit der Gheesteliker Brulocht (El atav\u00edo de la boda espiritual) influy\u00f3 en la literatura asc\u00e9tica y m\u00edstica de toda Europa. El humanismo del renacimiento dio figuras como Erasmo de R\u00f3terdam y culmin\u00f3 con el Siglo de Oro de la literatura neerlandesa, el XVII, cuando se tradujo la Biblia al neerland\u00e9s con distintas peculiaridades de cada dialecto para forjar un neerland\u00e9s literario com\u00fan; esta es la llamada Biblia de los estados. Los autores m\u00e1s importantes de este siglo de oro fueron Joost van den Vondel, Pieter Corneliszoon Hooft, Constantijn Huygens y Gerbrand Adriaensz Bredero. En el siglo\u00a0XVIII destaca una singular pareja de mujeres escritoras que viv\u00edan juntas, Betje Wolff (1738-1804) y su amiga Aagje Deken (1741-1804), que escriben notables novelas epistolares. La generaci\u00f3n rom\u00e1ntica del XIX est\u00e1 representada por Willem Bilderdijk (1756-1831), Hi\u00ebronymus van Alphen (1746-1803), Rhijnvis Feith (1753-1824), Hendrik Tollens (1780-1856) y A. C. W. Staring (1767-1840). En la narrativa destac\u00f3 Multatuli, con una novela que denuncia el colonialismo, Max Havelaar (1860), y, en el ensayo, Busken Huet (1826-1886). El naturalismo est\u00e1 representado por Marcellus Emants (1848-1923). La generaci\u00f3n de 1880 lo toma como precursor, formando un grupo denominado Tachtigers: Willem Kloos, H\u00e9l\u00e8ne Swarth, Albert Verwey, Frederik van Eeden, Lodewijk van Deyssel y Herman Gorter. En el siglo\u00a0XX hay que mencionar la novela psicol\u00f3gica de Louis Couperus y, tras la segunda guerra mundial, a tres autores que dominaron el panorama: Willem Frederik Hermans, Harry Mulisch y Gerard Reve. Despu\u00e9s sobresalieron Hella Haasse y Cees Nooteboom, entre muchos otros tan importantes como estos."}, {"name": "Gastronom\u00eda", "text": "La cocina se caracteriza por el consumo en grandes cantidades de pan y patatas. Es muy popular una tostada redonda untada con mantequilla: el beschuit, que se suele comer como desayuno, con diferentes sabores y que se emplea en diferentes celebraciones. Tambi\u00e9n es famoso uno de los platos nacionales, el erwtensoep que b\u00e1sicamente es una sopa de guisantes.\nSon populares los quesos, entre los que destacan el Gouda, Edam y Leyden. Muchas de las ciudades en el este tienen sus propios quesos, algunos de ellos distinguibles solo por el sabor y por su apariencia exterior. Pero como en todos los pa\u00edses europeos las diferencias regionales se hacen patentes y cada regi\u00f3n tiene sus platos t\u00edpicos. El norte, protestante, tiene otra forma de ver la vida que el sur, cat\u00f3lico; y eso se refleja tambi\u00e9n en sus influencias gastron\u00f3micas. Tambi\u00e9n hay que destacar el bocadillo de arenque (haring broodje). Su dulce m\u00e1s apreciado son las galletas rellenas de sirope llamadas stroopwafels."}, {"name": "Idioma", "text": "En el pa\u00eds la mayor\u00eda de la poblaci\u00f3n habla el neerland\u00e9s, que es el idioma oficial, pero tambi\u00e9n est\u00e1n reconocidas lenguas provinciales y dialectos regionales. Tambi\u00e9n se habla en Flandes y en Surinam, mientras que en Indonesia las generaciones m\u00e1s j\u00f3venes est\u00e1n empezando a recuperar el uso del idioma en el pa\u00eds, hasta ahora habitual sobre todo en la poblaci\u00f3n que conoci\u00f3 la colonizaci\u00f3n neerlandesa.\nEl fris\u00f3n es la lengua cooficial en la provincia de Frisia, y es hablado por 453\u00a0000 personas.[77]\u200b\nVarios dialectos del bajo saj\u00f3n neerland\u00e9s se hablan en la parte noreste del pa\u00eds y son reconocidos por los neerlandeses como lenguas regionales de acuerdo con la Carta Europea de las Lenguas Regionales o Minoritarias. Son hablados por 1 798 000 personas.\nOtro dialecto neerland\u00e9s es el limburgu\u00e9s, que se habla en el sureste de la provincia de Limburgo y es hablado por 825\u00a0000 personas.[78]\u200b\nEn Sud\u00e1frica y en Namibia, los descendientes de los colonos neerlandeses hablan afrik\u00e1ans, un idioma que desciende del neerland\u00e9s.\nEn las Antillas Neerlandesas, mas en especifico las islas de Aruba, Curazao y Bonaire, se habla el papiamento.\nEs tradicional en el pa\u00eds hablar otras lenguas, el 70\u00a0% de la poblaci\u00f3n tiene un conocimiento alto del ingl\u00e9s, entre el 55 y el 59\u00a0% habla el alem\u00e1n y cerca del 19\u00a0% habla el franc\u00e9s.[79]\u200b"}, {"name": "Religi\u00f3n", "text": "\u00a0\u00a0\u00a0\u00a0\u00a0Irreligi\u00f3n (no creyente) (Ateo) (Agn\u00f3stico) 50.1% \n\u00a0\u00a0\u00a0\u00a0\u00a0Iglesia Cat\u00f3lica 23.7% \n\u00a0\u00a0\u00a0\u00a0\u00a0Protestantismo 15.5% \n\u00a0\u00a0\u00a0\u00a0\u00a0Otros cristianos 4.6% \n\u00a0\u00a0\u00a0\u00a0\u00a0Islam 4.9% \n\u00a0\u00a0\u00a0\u00a0\u00a0Otros 1.1% \nTras la reforma del siglo\u00a0XVI, el pa\u00eds qued\u00f3 dividido en una parte cat\u00f3lica y otra protestante. Su separaci\u00f3n es aproximadamente de suroeste a nordeste: la primera es cat\u00f3lica mientras que la segunda, protestante, incluye varias ramas, como la Iglesia reformada (calvinistas) y los luteranos.[82]\u200b\nEn 2005, 43,6\u00a0% de la poblaci\u00f3n neerlandesa es cristiana (el 27\u00a0% se declaraba cristiana cat\u00f3lica, y un 16,6\u00a0% se declaraba cristiana protestante). Un 5\u00a0% de la poblaci\u00f3n es musulmana, un peque\u00f1o porcentaje es jud\u00eda, y un 48\u00a0% de la poblaci\u00f3n no se declara perteneciente a una religi\u00f3n en general.[83]\u200b[84]\u200b Despu\u00e9s de los atentados ocurridos en Europa los ciudadanos neerlandeses no musulmanes contemplaban el islam como una amenaza, y la presencia de musulmanes como algo desagradable, aunque desde 2006 se muestran menos negativos sobre la presencia de estos. Ello parece deberse a que no se han producido atentados graves en ese tiempo, al agotamiento sobre el tema y al aumento del contacto entre no-musulmanes y musulmanes.[85]\u200b\nSeg\u00fan la encuesta del Eurobar\u00f3metro de 2005, el 34\u00a0% de los ciudadanos neerlandeses respondieron \"Creo que hay un Dios\", mientras que el 37\u00a0% respondi\u00f3 \"Creo que hay una especie de esp\u00edritu o fuerza vital\" y el 27\u00a0% dijo \"No creo que exista ning\u00fan tipo de esp\u00edritu, dios, la vida o la fuerza\".[86]\u200b Adem\u00e1s, el 41\u00a0% de la poblaci\u00f3n admiti\u00f3 que habitualmente piensan en el significado y el prop\u00f3sito de la vida y el 6\u00a0% dijo que nunca lo pensaban.[86]\u200b"}, {"name": "Tecnolog\u00eda", "text": "Los Pa\u00edses Bajos siempre se destacaron por estar a la delantera en materia de tecnolog\u00eda y en su aplicaci\u00f3n en \u00e1reas como el urbanismo, la ecolog\u00eda, la medicina, la educaci\u00f3n, etc.\nLa Comisi\u00f3n Europea ha publicado los resultados de la edici\u00f3n de 2016 del \u00cdndice de la Econom\u00eda y la Sociedad Digitales en los que Dinamarca, los Pa\u00edses Bajos, Suecia y Finlandia siguen ocupando los primeros puestos de estos resultados.[87]\u200b\nPor su parte, el \u00cdndice global de innovaci\u00f3n, a cargo de la Organizaci\u00f3n Mundial de la Propiedad Intelectual, en su versi\u00f3n 2023, Pa\u00edses Bajos se ubica en el s\u00e9ptimo lugar en innovaci\u00f3n,[88]\u200b dentro de dicho \u00edndice, entre 132 pa\u00edses, bajando respecto a la posici\u00f3n n\u00famero 5 que ocup\u00f3 en 2022.[89]\u200b[90]\u200b"}, {"name": "Educaci\u00f3n", "text": "La educaci\u00f3n est\u00e1 dividida en colegios y en diferentes grupos de edad dentro de ellos, algunos de estos con diferentes niveles educativos. Los colegios se dividen en colegios p\u00fablicos o colegios especiales religiosos. El Informe PISA, que est\u00e1 coordinado por la Organizaci\u00f3n para la Cooperaci\u00f3n y el Desarrollo Econ\u00f3mico, coloc\u00f3 en el noveno lugar de la educaci\u00f3n mundial a los Pa\u00edses Bajos en 2008, obteniendo un crecimiento considerable en la media de la Organizaci\u00f3n.[91]\u200b\nLa educaci\u00f3n elemental comprende desde los cuatro a los doce a\u00f1os. Desde los cinco a\u00f1os es obligatorio. A partir de los doce a\u00f1os se puede escoger entre realizar la educaci\u00f3n preparatoria de nivel medio (que consta de cuatro a\u00f1os), la educaci\u00f3n general continuada (que consta de cinco a\u00f1os), o la educaci\u00f3n cient\u00edfica preparatoria (que consta de seis a\u00f1os). Una vez terminados estos estudios, se puede optar por hacer la educaci\u00f3n terciaria entre las que se incluyen las universidades. Al terminar estos estudios, se puede realizar una maestr\u00eda que se termina con una edad promedio de veintid\u00f3s a\u00f1os, para luego comenzar a trabajar. Todas las universidades, a excepci\u00f3n de Nyenrode, reciben financiaci\u00f3n del estado. Las universidades de \u00c1msterdam, Delft, Leiden y Utrecht figuran cada a\u00f1o entre las cien mejores del mundo.[92]\u200b[93]\u200b"}, {"name": "Deportes", "text": " Pa\u00edses Bajos en los Juegos Ol\u00edmpicos\n Selecci\u00f3n de f\u00fatbol de los Pa\u00edses Bajos\n F\u00fatbol en los Pa\u00edses Bajos\n Selecci\u00f3n de baloncesto de los Pa\u00edses Bajos\n Eredivisie\nUno de los deportes m\u00e1s importantes del pa\u00eds es el ciclismo, tanto en ruta como en pista. Jan Janssen y Joop Zoetemelk son los \u00fanicos neerlandeses que han ganado el tradicional Tour de Francia, adem\u00e1s de triunfar en el Campeonato del Mundo de ciclismo y en los Juegos Ol\u00edmpicos.[94]\u200b Otras ciclistas, como Leontien Van Moorsel y Marianne Vos tambi\u00e9n han triunfado en los Juegos Ol\u00edmpicos y ha conseguido campeonatos mundiales. Tambi\u00e9n merecen menci\u00f3n los campeones de los Juegos Ol\u00edmpicos y de los campeonatos del mundo, Hennie Kuiper, Jan Raas y Gerrie Knetemann.\nEl f\u00fatbol es la otra rama deportiva que tambi\u00e9n posee mucha popularidad. Son conocidos clubes como el Ajax \u00c1msterdam, Feyenoord R\u00f3terdam y el PSV Eindhoven. Estos consiguieron ser los m\u00e1ximos campeones europeos en su historia, pero solamente el Ajax \u00c1msterdam y el Feyenoord R\u00f3terdam (que entre s\u00ed tienen una hist\u00f3rica rivalidad) lograron coronarse como campeones mundiales de clubes. Existen otros clubes conocidos a nivel local como el Sparta Rotterdam (uno de los m\u00e1s antiguos del pa\u00eds), y otros como el AZ Alkmaar y el Football Club Twente, ambos campeones de liga en alguna ocasi\u00f3n. Aparte de estos \u00e9xitos, los Pa\u00edses Bajos han tenido a varios balones de oro como Johan Cruyff, ganador en tres ocasiones, Ruud Gullit, ganador en una ocasi\u00f3n o Marco van Basten ganador en otras tres ocasiones.[95]\u200b Adem\u00e1s de estos tres futbolistas, los Pa\u00edses Bajos tambi\u00e9n tienen otros mundialmente conocidos tales como Kees Kist, Wim Kieft (ganadores de la Bota de Oro junto con Van Basten), adem\u00e1s de otros como Johan Neeskens, Rob Rensenbrink, Dennis Bergkamp, Ronald Koeman, Edwin van der Sar, Clarence Seedorf, Robin van Persie, Patrick Kluivert, Wesley Sneijder, entre otros. Muchos de estos jugadores han actuado en importantes clubes europeos.\nLa liga nacional es conocida con el nombre de Eredivisie, y en la actualidad es una de las 10 ligas de importancia en Europa. La Eredivisie fue considerada en los a\u00f1os 1990 como una de las m\u00e1s fuertes del mundo seg\u00fan la Federaci\u00f3n de Historia y Estad\u00edstica del F\u00fatbol, siendo elegida como la mejor tercera en 1992.\nEl \u00fanico t\u00edtulo de la selecci\u00f3n de f\u00fatbol de los Pa\u00edses Bajos (que durante una \u00e9poca fue conocida popularmente como \u00abla naranja mec\u00e1nica\u00bb) es la Eurocopa 1988, celebrada en Alemania Federal. Fue subcampeona del mundo en 1974, 1978 y 2010.\nEl tenis tambi\u00e9n ha tenido \u00e9xitos, aunque este no tiene tanta relevancia como el f\u00fatbol y el ciclismo. Richard Krajicek es el \u00fanico neerland\u00e9s en ganar un torneo de Grand Slam, concretamente el Campeonato de Wimbledon, en 1996. Martin Verkerk es otro jugador que ha llegado a una final de Grand Slam, en 2003, aunque cay\u00f3 ante Juan Carlos Ferrero en Roland Garros. El hockey sobre hierba tambi\u00e9n es una de las ramas deportivas m\u00e1s importantes a nivel mundial. La Selecci\u00f3n femenina de hockey sobre hierba de los Pa\u00edses Bajos consigui\u00f3 ganar el Campeonato mundial de hockey sobre hierba hasta en seis ocasiones y el seleccionado masculino lo ha hecho tambi\u00e9n en dos ocasiones.\nTambi\u00e9n destaca en nataci\u00f3n con grandes nadadores y diversos r\u00e9cords mundiales como Inge de Bruijn, ganadora de ocho medallas ol\u00edmpicas entre 2000 y 2004, cuatro de ellas de oro, adem\u00e1s de batir 10 r\u00e9cords mundiales, Pieter van den Hoogenband tres veces campe\u00f3n ol\u00edmpico, 14 veces campe\u00f3n europeo y 43 campe\u00f3n nacional, Marleen Veldhuis, que tuvo el r\u00e9cord mundial de 50 metros libres as\u00ed como el de 4 x 100 libre.[96]\u200b[97]\u200b\nEn los deportes de motor, el Circuito de Assen est\u00e1 considerado como la catedral del motociclismo mundial, celebr\u00e1ndose all\u00ed el Gran Premio de los Pa\u00edses Bajos de Motociclismo, mientras que el Circuito de Zandvoort acogi\u00f3 durante muchos a\u00f1os el equivalente de F\u00f3rmula 1. En esta \u00faltima categor\u00eda Max Verstappen es el piloto m\u00e1s joven de la historia en debutar en el campeonato del mundo y tambi\u00e9n el m\u00e1s joven en ganar un gran premio, aparte de ser el \u00fanico piloto neerland\u00e9s que lo consigui\u00f3, y, en el a\u00f1o 2021, se ha convertido en el primer piloto neerland\u00e9s en proclamarse campe\u00f3n del mundo de esta categor\u00eda. En 2022 se ha convertido en bicampe\u00f3n de la m\u00e1xima categor\u00eda del automovilismo, y en 2023 ganar\u00eda su tercer t\u00edtulo consecutivo, logrando en dicho a\u00f1o la mayor dominaci\u00f3n que un piloto haya tenida en una temporada de F\u00f3rmula 1, con 19 carreras ganadas (lo que significa el 86.3% de la temporada) hecho que lo llevar\u00eda proclamarse como el 3.\u00ba Piloto con m\u00e1s victorias en la categor\u00eda. En este a\u00f1o tambi\u00e9n romper\u00eda el r\u00e9cord de victorias consecutivas con 10 victorias al hilo; todo esto ha llevado a Max a ser llamado \"El orgullo del pa\u00eds\". Y llev\u00e1ndolo a tener la base local m\u00e1s s\u00f3lida de un piloto.Adem\u00e1s del anterior, solo otro piloto neerland\u00e9s, Jos Verstappen (su padre), logr\u00f3 subir al podio.\nEn otros deportes como el atletismo destaca Ellen van Langen ganadora de los 800 metros planos en los Juegos Ol\u00edmpicos de Barcelona 1992, pero sobre todo Fanny Blankers-Koen, cuatro veces medalla de oro en los Juegos Ol\u00edmpicos de Londres 1948.[98]\u200b En equitaci\u00f3n Anky van Grunsven ha obtenido ocho medallas ol\u00edmpicas en la disciplina de adiestramiento o doma cl\u00e1sica. En b\u00e9isbol son la primera potencia europea gracias a que en los territorios neerlandeses caribe\u00f1os de Aruba y Curazao es el deporte m\u00e1s popular y la gran mayor\u00eda de los jugadores que componen el equipo nacional provienen o tienen or\u00edgenes en los mismos. En las artes marciales son un pa\u00eds con una larga tradici\u00f3n de luchadores de kickboxing como Peter Aerts, Ernesto Hoost, Remy Bonjasky o Semmy Schilt que han dominado por completo las competiciones internacionales.[99]\u200b"}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Pa\u00edses Bajos. Contenido relacionado con Pa\u00edses Bajos.\nCronolog\u00eda de la Uni\u00f3n Europea\nTratado de \u00c1msterdam\nRefer\u00e9ndum sobre la Constituci\u00f3n Europea en los Pa\u00edses Bajos\nOperaci\u00f3n Market Garden\nMunicipios de los Pa\u00edses Bajos", "subsections": []}, {"name": "Notas", "text": "\u2191 \n[...] Es frecuente y admisible emplearlo en el habla corriente para referirse a todo el pa\u00eds, uso que no debe extenderse a textos oficiales [...].\nReal Academia Espa\u00f1ola. Diccionario panhisp\u00e1nico de dudas (2005).", "subsections": []}, {"name": "Referencias", "text": "\u2191 a b CIA. \u00abPa\u00edses Bajos - Geograf\u00eda - Libro Mundial de Hechos\u00bb. Consultado el 18 de febrero de 2017.\u00a0\n\u2191 \u00abPopulation and population dynamics; month, quarter and year\u00bb. Centraal Bureau voor de Statistiek. Consultado el 22 de enero de 2018.\u00a0\n\u2191 Real Academia Espa\u00f1ola. \u00abneerland\u00e9s\u00bb. Diccionario de la lengua espa\u00f1ola (23.\u00aa edici\u00f3n).\u00a0\n\u2191 a b \u00abWorld Economic Outlook Database, October 2023 Edition. (Netherlands)\u00bb. IMF.org. International Monetary Fund. 10 de octubre de 2023. Consultado el 10 de octubre de 2023.\u00a0\n\u2191 Programa de las Naciones Unidas para el Desarrollo (PNUD), ed. (2022). \u00abHuman Development Insights\u00bb (en ingl\u00e9s). Archivado desde el original el 26 de marzo de 2024. Consultado el 26 de marzo de 2024.\u00a0\n\u2191 Real Academia Espa\u00f1ola\u00a0y Asociaci\u00f3n de Academias de la Lengua Espa\u00f1ola (2023). \u00abPa\u00edses Bajos\u00bb. Diccionario panhisp\u00e1nico de dudas (2.\u00aa edici\u00f3n, versi\u00f3n provisional).\u00a0\n\u2191 \u00abConstituci\u00f3n del Reino de los Pa\u00edses Bajos\u00bb. Gobierno de los Pa\u00edses Bajos. 28 de febrero de 2019. Cap\u00edtulo 2, art\u00edculo 32. Consultado el 29 de octubre de 2019. \u00ab(...) la capital \u00c1msterdam (...)\u00bb.\u00a0\n\u2191 \u00abPa\u00edses Bajos\u00bb. europa.eu. Archivado desde el original el 26 de octubre de 2008. Consultado el 1 de julio de 2008.\u00a0\n\u2191 Banco Mundial. \u00abWorld Bank Country and Lending Groups\u00bb (en ingl\u00e9s). Archivado desde el original el 11 de enero de 2018. Consultado el 18 de noviembre de 2019.\u00a0\n\u2191 Cuadro estad\u00edstico 1. Informe sobre Desarrollo Humano 2018. Consultado el 25 de septiembre de 2018\n\u2191 Transparencia Internacional. \u00abCorruption Perceptions Index 2018\u00bb (en ingl\u00e9s). Archivado desde el original el 30 de enero de 2019. Consultado el 18 de noviembre de 2019.\u00a0\n\u2191 Economist Intelligence Unit. \u00abEIU Democracy Index 2018 - World Democracy Report\u00bb (en ingl\u00e9s). Consultado el 18 de noviembre de 2019.\u00a0\n\u2191 \u00abPa\u00edses Bajos. 2.\u00bb DPD (2005). Consultado el 1 de julio de 2014.\n\u2191 \u00abPor qu\u00e9 Holanda quiere que el mundo ya no le llame as\u00ed\u00bb. La Naci\u00f3n. 28 de junio de 2021. Consultado el 28 de junio de 2021.\u00a0\n\u2191 Le Benelux en quelques traits Archivado el 9 de marzo de 2010 en Wayback Machine., Benelux. Consultado el 1 de marzo de 2010.\n\u2191 a b c d e f Historia de los Pa\u00edses Bajos. holandalatina.com. Consultado el 24 de noviembre de 2009.\n\u2191 Wrecks & shipfinds of Western & inland Europe Archivado el 16 de marzo de 2008 en Wayback Machine., ABC\n\u2191 a b Louwe Kooijmans, L. P. (1998). \u00abTrijntje van de Betuweroute, Jachtkampen uit de Steentijd te Hardinxveld-Giessendam\u00bb (PDF). Spiegel Historiael 33. pp.\u00a0423-428. Archivado desde el original el 26 de julio de 2007.\u00a0\n\u2191 Prehistoric agricultural field found in Swifterbant, 4300-4000 BC\n\u2191 Raemakers, Daan (2006). \u00abDe spiegel van Swifterbant\u00bb (PDF). University of Groningen. Archivado desde el original el 10 de abril de 2008.\u00a0\n\u2191 D\u00f3lmenes en Pa\u00edses Bajos, un curioso fen\u00f3meno, sobreholanda.com, consultado el 26 de noviembre de 2009\n\u2191 Mallory, J. P. y Douglas Q. Adams (1997). The Encyclopedia of Indo-European Culture (EIEC), p. 93. Fitzroy Dearborn.\n\u2191 Images about the Late Dutch Bronze Age. versatel.nl. Consultado el 26 de noviembre de 2009.\n\u2191 Dutch pre-Roman Iron Age. versatel.nl. Consultado el 26 de noviembre de 2009.\n\u2191 Lendering, Jona. Germania inferior (1). Archivado el 7 de junio de 2020 en Wayback Machine. livius.org. Consultado el 26 de noviembre de 2009.\n\u2191 Germania Inferior. absoluteastronomy.com. Consultado el 29 de octubre de 2009.\n\u2191 The Histories. classics.mit.edu. Consultado el 29 de octubre de 2009.\n\u2191 The Batavian revolt. Archivado el 4 de mayo de 2016 en Wayback Machine.. livius.org. Consultado el 1 de marzo de 2010.\n\u2191 Historiae, T\u00e1cito, siglo\u00a0I\u00a0a.\u00a0C.\n\u2191 Sacro Imperio Romano. portalplanetasedna.com. Consultado el 26 de noviembre de 2009.\n\u2191 DUQUES DE GUISA: Genealog\u00eda Archivado el 18 de septiembre de 2009 en Wayback Machine. retratosdehistoria.net. Consultado el 14 de diciembre de 2009.\n\u2191 \u00abLuxembourg II. Titles of European hereditary rulers\u00bb. narod.ru.\u00a0\n\u2191 Carlos, gobernador de los Pa\u00edses Bajos. diomedes.com. Consultado el 14 de diciembre de 2009.\n\u2191 Historia. amadeus.net. Consultado el 14 de diciembre de 2009.\n\u2191 Felipe II. tudorplace.com. Consultado el 14 de diciembre de 2009.\n\u2191 Union of Utrecht. rootsweb.ancestry.com. Consultado el 14 de diciembre de 2009.\n\u2191 \u00abORDONNANCE ET EDIT PERPETUEL DES ARCHIDUCS NOS PRINCES SOUVERAINS\u00bb. skynet.be. Archivado desde el original el 9 de octubre de 2018. Consultado el 16 de marzo de 2015.\u00a0\n\u2191 Tratado de Uni\u00f3n de los Estados Unidos Belgas.\n\u2191 www.1789-1815.com\n\u2191 \u00abB\u00e9lgica: incompatibilidad hist\u00f3rica\u00bb. Deutsche Welle 24 de diciembre de 2007. 2007. Consultado el 10 de marzo de 2008.\u00a0\n\u2191 Mokyr, Joel (2000). \u00abThe industrial revolution and the Netherlands: Why did it not happen?\u00bb [La revoluci\u00f3n industrial y los Pa\u00edses Bajos: \u00bfpor qu\u00e9 no ocurri\u00f3?]. De Economist 148: 503-520. ISSN\u00a01572-9982. doi:10.1023/A:1004134217178.\u00a0\n\u2191 Abbenhuis, Maartje M. The Art of Staying Neutral. Amsterdam: Amsterdam UP, 2006.\n\u2191 La Segunda Guerra Mundial (1940-1945). inghist.nl. Consultado el 29 de enero de 2010.\n\u2191 \u00abLos fundadores de la UE\u00bb. Deutsche Welle 20 de marzo de 2007. 2007. Consultado el 10 de marzo de 2008.\u00a0\n\u2191 \u00abEl Tratado de Maastricht: su primera d\u00e9cada\u00bb. Deutsche Welle 31 octubre de 2003. 2003. Consultado el 10 de marzo de 2008.\u00a0\n\u2191 \u00abLas barreras de Pa\u00edses Bajos hacia el mar\u00bb. Discovery Channel. Consultado el 29 de enero de 2010.\u00a0\n\u2191 bajos-abdicara-favor-hijo-2304603 \u00abLa reina Beatriz de Pa\u00edses Bajos abdica en favor de su hijo\u00bb. Consultado el 28 de enero de 2013.\u00a0 (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima).\n\u2191 \u00abAsociacion de Transexuales de Andaluc\u00eda - Sylvia Rivera: Una Ni\u00f1a Transexual comparte su Historia con sus Amigos\u00bb. atandalucia.org.\u00a0\n\u2191 \u00abMinisterio holand\u00e9s de Asuntos Exteriores - Pol\u00edtica exterior\u00bb. minbuza.nl. Archivado desde el original el 2 de octubre de 2006.\u00a0\n\u2191 \u00ab404 De pagina is niet gevonden\u00bb. planet.nl.\u00a0\n\u2191 Nickerson, Colin (5 de diciembre de 2005). Netherlands relinquishes some of itself to the waters. Boston Globe. Consultado el 18 de septiembre de 2008.\u00a0\n\u2191 Olsthoorn, A. A.; Richard S. J. Tol (febrero de 2001). \u00abFloods, flood management and climate change in The Netherlands\u00bb. Institute for Environmental Studies (Institute for Environmental Studies, Vrije Universiteit). Archivado desde el original el 22 de febrero de 2008. Consultado el 18 de septiembre de 2008.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |mes= (ayuda); La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 Tol, Richard S. J.; Nicolien van der Grijp, Alexander A. Olsthoorn, Peter E. van der Werff (2003). \u00abAdapting to Climate: A Case Study on Riverine Flood Risks in the Netherlands\u00bb. Risk Analysis (Blackwell-Synergy) 23 (3): 575-583. doi:10.1111/1539-6924.00338. Archivado desde el original el 16 de diciembre de 2018. Consultado el 10 de octubre de 2007.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 Pa\u00edses Bajos: clima y vegetaci\u00f3n. geografia.laguia2000.com. Consultado el 11 de febrero de 2010.\n\u2191 Banco Mundial. \u00abGDP growth (annual\u00a0%) - Netherlands\u00bb. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 Banco Mundial. \u00abGDP per capita (current US$) - Netherlands\u00bb. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 a b Central Intelligence Agency (CIA9. \u00abThe Netherlands - The World Factbook\u00bb (en ingl\u00e9s). Archivado desde el original el 5 de septiembre de 2015. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 \u00abUnemployment rate - OECD Data\u00bb (en ingl\u00e9s). OCDE Data. Consultado el 19 de noviembre de 2019.\u00a0\n\u2191 The World Bank Data. \u00abPoverty headcount ratio at $5.50 a day (2011 PPP) (% of population) - Netherlands\u00bb. Consultado el 19 de noviembre de 2019.\u00a0\n\u2191 World Economic Forum. \u00abThe Global Competitiveness Index 4.0 2019 Rankings\u00bb (PDF) (en ingl\u00e9s). p.\u00a0xiii. Consultado el 19 de noviembre de 2019.\u00a0\n\u2191 Port of Rotterdam - Home Archivado el 15 de abril de 2009 en Wayback Machine., portofrotterdam.com, Consultado el 5 de octubre de 2008\n\u2191 \u00abAardgas als smeerolie\u00bb. Andere Tijden. Transscript. VPRO. 15 de enero de 2006. http://geschiedenis.vpro.nl/programmas/2899536/afleveringen/25899792/.\u00a0\n\u2191 Encyclop\u00e6dia Britannica. \u00abNetherlands - Economy\u00bb. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 Comisi\u00f3n Europea. \u00abEconomic performance by country\u00bb [Comportamiento econ\u00f3mico por pa\u00eds]. Consultado el 17 de noviembre de 2019.\u00a0\n\u2191 Gobierno de los Pa\u00edses Bajos. \u00abTourism and Recreation - Spreading tourism\u00bb (en ingl\u00e9s). Consultado el 20 de noviembre de 2019.\u00a0\n\u2191 UNESCO. \u00abWorld Heritage List: Europe and North America\u00bb (en ingl\u00e9s).\u00a0\n\u2191 Ferrer, Isabel (1 de enero de 2020). \u00abLa marca Holanda se renueva y ahora ser\u00e1 NL Netherlands\u00bb. El Pa\u00eds. ISSN\u00a01134-6582. Consultado el 11 de febrero de 2020.\u00a0\n\u2191 \u00abPopulation; key figures\u00bb. Centraal Bureau voor de Statistiek. Consultado el 20 de noviembre de 2019.\u00a0\n\u2191 Population counter. cbs.nl. Consultado el 11 de febrero de 2010.\n\u2191 Population: history. statline.cbs.nl. Consultado el 11 de febrero de 2010.\n\u2191 Europe: Netherlands. Archivado el 15 de mayo de 2020 en Wayback Machine. cia.gov. Consultado el 11 de febrero de 2010.\n\u2191 External migration; sex, age (31 dec), marital status and country of birth. statline.cbs.nl. Consultado el 11 de febrero de 2010.\n\u2191 Demografie van de allochtonen in Nederland. Archivado el 9 de octubre de 2018 en Wayback Machine. (En neerland\u00e9s.)\n\u2191 van Krieken, Peter J.; David McKay (2005). The Hague: Legal Capital of the World. Cambridge University Press. ISBN\u00a09067041858.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 OECD Territorial Reviews: Randstad Holland, Netherlands. oecd.org. Consultado el 11 de febrero de 2010.\n\u2191 Regio Randstad Brussel. Randstad. Consultado el 1 de marzo de 2010.\n\u2191 \u00abThe World Factbook\u00bb. cia.gov. Archivado desde el original el 7 de marzo de 2014. Consultado el 17 de septiembre de 2008.\u00a0\n\u2191 Welschen, Ad: Course Dutch Society and Culture, International School for Humanities and Social Studies ISHSS, Universiteit van Amsterdam, 2000-2005.\n\u2191 Ginsburgh, Victor; Ignacio Ortu\u00f1o-Ortin, Shlomo Weber (febrero de 2005). \u00abWhy Do People Learn Foreign Languages?\u00bb (pdf). Universit\u00e9 libre de Bruxelles. Archivado desde el original el 23 de septiembre de 2008. Consultado el 17 de septiembre de 2008.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |mes= (ayuda); La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 Schmeets, Hans (2016). De religieuze kaart van Nederland, 2010\u20132015. Centraal Bureau voor der Statistiek. p.\u00a05.\u00a0\n\u2191 CBS. \u00abHelft Nederlanders is kerkelijk of religieus\u00bb. www.cbs.nl (en nl-NL). Consultado el 17 de octubre de 2017.\u00a0\n\u2191 El pa\u00eds en breve. Ministerio neerland\u00e9s de Asuntos Exteriores. Consultado el 11 de septiembre de 2008.\n\u2191 \u00abCopia archivada\u00bb. Archivado desde el original el 11 de agosto de 2011. Consultado el 24 de noviembre de 2017.\u00a0\n\u2191 https://web.archive.org/web/20091116154332/http://www.wrr.nl/content.jsp?objectid=3840\n\u2191 \u00abHolandeses modifican postura ante musulmanes\u00bb. webislam.com.\u00a0\n\u2191 a b \u00abEurobarometer on Social Values, Science and technology 2005 (p\u00e1g. 11)\u00bb. Consultado el 5 de mayo de 2007.\u00a0\n\u2191 [1]\n\u2191 OMPI. \u00ab\u00cdndice mundial de innovaci\u00f3n 2023. La innovaci\u00f3n frente a la incertidumbre\u00bb. www.wipo.int. Consultado el 11 de octubre de 2023.\u00a0\n\u2191 OMPI. \u00ab\u00cdndice mundial de innovaci\u00f3n 2022\u00bb. www.wipo.int. Consultado el 28 de marzo de 2023.\u00a0\n\u2191 P\u00e9rez Sarmenti, Iv\u00e1n. \u00abLos 5 pa\u00edses m\u00e1s innovadores del mundo, seg\u00fan Global Innovation Index\u00bb. CNN. Consultado el 28 de marzo de 2023.\u00a0\n\u2191 Range of rank on the PISA 2006 science scale, Organizaci\u00f3n para la Cooperaci\u00f3n y el Desarrollo Econ\u00f3mico, Consultado el 18 de septiembre de 2008.\n\u2191 \u00abSistemas de educaci\u00f3n superior en Francia y Pa\u00edses Bajos \u2013 una comparaci\u00f3n\u00bb. www.cosmopolitburo.com. Archivado desde el original el 15 de noviembre de 2012. Consultado el 13 de mayo de 2010.\u00a0\n\u2191 \u00abUniversity of Groningen\u00bb. timeshighereducation.co.uk.\u00a0\n\u2191 Palmar\u00e9s Archivado el 20 de septiembre de 2008 en Wayback Machine. El Mundo. Consultado el 17 de septiembre de 2008.\n\u2191 Palmar\u00e9s del Bal\u00f3n de Oro. ABC. Consultado el 17 de septiembre de 2008.\n\u2191 \u00abSe despide un grande\u00bb. ESPNdeportes.com.\u00a0\n\u2191 Nataci\u00f3n: De Bruijn anuncia su retiro definitivo. Emol. Consultado el 17 de septiembre de 2008.\n\u2191 Fanny Blankers-Koen, la mejor atleta del siglo XX. El Mundo. Consultado el 17 de septiembre de 2008.\n\u2191 History. K-1. Consultado el 17 de septiembre de 2008.", "subsections": []}, {"name": "Bibliograf\u00eda", "text": "Wilson, Charles (1968). Los pa\u00edses Bajos y la cultura europea en el siglo XVII (Guadarrama edici\u00f3n).\u00a0\nKossmann, E. H. (1987). The Low Countries: History of the Northern and Southern Netherlands (en ingl\u00e9s).\u00a0\nGu\u00eda de viajes.(Pa\u00edses Bajos). Plaza & Jan\u00e9s. 1994.\u00a0\nIsrael, Jonathan (1995). The Dutch Republic: Its Rise, Greatness, and Fall 1477-1806 (en ingl\u00e9s).\u00a0\nHistory of the Low Countries (en ingl\u00e9s). J. C. H. Blom and E. Lamberts, eds. 1998.\u00a0\nEchevarria, Miguel \u00c1ngel (1998). Flandes y la monarqu\u00eda hisp\u00e1nica, 1500-1713. Silex. ISBN\u00a0978-84-77-37068-0.\u00a0\nQueipo de Llano, Gonzalo; Alcala-Zamora, Jos\u00e9 (2001). Espa\u00f1a, Flandes y el mar del Norte (1618-1939). Centro de estudios constitucionales. ISBN\u00a0978-84-25-91144-6.\u00a0\nHerrero S\u00e1nchez, Manuel; Crespo Solana, Ana (2002). Espa\u00f1a y las 17 provincias de los Pa\u00edses Bajos: una revisi\u00f3n historiogr\u00e1fica (XVI-XVIII). Universidad de C\u00f3rdoba. ISBN\u00a084-7801-661-9.\u00a0\nArblaster, Paul (2006). A History of the Low Countries (en ingl\u00e9s). Palgrave Essential Histories Series New York: Palgrave Macmillan. ISBN\u00a01-4039-4828-3.\u00a0\nGray, Jeremy (2008). \u00c1msterdam. Lonely Planet. ISBN\u00a0978-84-08-07727-5.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Netherlands.\n Wikiquote alberga frases c\u00e9lebres de o sobre Pa\u00edses Bajos.\n Wikinoticias tiene noticias relacionadas con Pa\u00edses Bajos.\nSitio web oficial de la Oficina de Turism", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Palabra_reservada", "title": "Palabra reservada", "summary": "En los lenguajes inform\u00e1ticos, una palabra reservada es una palabra que tiene un significado gramatical especial para ese lenguaje y no puede ser utilizada como un identificador de objetos en c\u00f3digos del mismo, como pueden ser las variables.\nPor ejemplo, en SQL, un usuario no puede ser llamado \"group\", porque la palabra group es usada para indicar que un identificador se refiere a un grupo, no a un usuario. Al tratarse de una palabra clave su uso queda restringido.\nOcasionalmente la especificaci\u00f3n de un lenguaje de programaci\u00f3n puede tener palabras reservadas que est\u00e1n previstas para un posible uso en futuras versiones. En Java const y goto son palabras reservadas \u2014 no tienen significado en Java, pero tampoco pueden ser usadas como identificadores. Al reservar los t\u00e9rminos pueden ser implementados en futuras versiones de Java, si se desea, sin que el c\u00f3digo fuente m\u00e1s antiguo escrito en Java deje de funcionar.", "sections": [{"name": "Palabras reservadas e independencia del lenguaje", "text": "En la CLI de .NET, todos los lenguajes tienen que proporcionar un mecanismo para utilizar los identificadores p\u00fablicos que son palabras reservadas en ese lenguaje. .|. Para ver por qu\u00e9 es necesario, supongamos que se define una clase en VB.NET como sigue:\nEntonces, se compila esta clase en un ensamblado de .NET y se distribuye como parte de un conjunto de herramientas. Un programador de C#, que quiere definir una variable de tipo \u201cthis\u201d encontrar\u00eda un problema: \u201cthis\u201d es una palabra reservada en C#. El siguiente fragmento en C# no compilar\u00e1:\nUn tema similar aparece cuando se accede a miembros, sobrescribiendo m\u00e9todos virtuales e identificando espacios de nombres. En C#, colocando la arroba (@) antes del identificador, se forzar\u00e1 a ser considerado como un identificador en vez de una palabra reservada por el compilador. El signo arroba no es considerado parte del identificador.\nPor consistencia, esta utilizaci\u00f3n tambi\u00e9n se permite en configuraciones no-p\u00fablicas como variables locales, nombres de par\u00e1metros y miembros privados.", "subsections": []}, {"name": "Palabras reservadas en SQL", "text": "En java, son palabras reservadas todas las sentencias, cl\u00e1usulas modificadoras, tipos de dato, y funciones propias del DBMS.As\u00ed, por ejemplo, no se pueden usar denominaciones tales como SELECT, GROUP, CONCAT, SUM, MAX o semejantes.\nEn cada DBMS, adem\u00e1s, existen conjuntos de denominaciones que le son propias, y que si pueden ser usadas en otros, lo que tiende a producir ciertos problemas al migrar proceso o sintaxis de uno a otro. Tal es el caso de SYSDATE, NOW, o BIGINT, el primero de los cuales es usual en Oracle, y los dos siguientes en MySQL.\nPese a eso, todos los DBMS tienen, tambi\u00e9n, la posibiilidad de usar estas palabras reservadas, siempre que se respete ciertas reglas sint\u00e1ctica: Todas las palabras reservadas usadas para nombres de objetos creados en una base de datos deben estar encerrados entre caracteres espec\u00edficamente usados para ello. En varios sistemas de bases de datos se utilizanpara ello los acentos graves (`), que no tienen otro uso en el SQL.", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pandas_(software)", "title": "Pandas (software)", "summary": "Pandas es una librer\u00eda de Python especializada en la manipulaci\u00f3n y el an\u00e1lisis de datos. Ofrece estructuras de datos y operaciones para manipular tablas num\u00e9ricas y series temporales, es como el Excel de Python. Es un\u00a0software libre  distribuido bajo la licencia BSD.[1]\u200b El nombre deriva del t\u00e9rmino \"datos de panel\", t\u00e9rmino de\u00a0econometr\u00eda\u00a0que designa datos que combinan una dimensi\u00f3n temporal con otra dimensi\u00f3n transversal.[2]\u200b", "sections": [{"name": "Caracter\u00edsticas de la biblioteca", "text": "Tipo de datos DataFrame para manipulaci\u00f3n de datos con indexaci\u00f3n integrada.\nHerramientas para leer y escribir datos entre estructuras de dato en-memoria y formatos de archivo variados.\nAlineaci\u00f3n de dato y manejo integrado de datos faltantes.\nReestructuraci\u00f3n y segmentaci\u00f3n de conjuntos de datos.\nSegmentaci\u00f3n vertical basada en etiquetas, indexaci\u00f3n elegante, y segmentaci\u00f3n horizontal de grandes conjuntos de datos.\nInserci\u00f3n y eliminaci\u00f3n de columnas en estructuras de datos.\nAgrupaci\u00f3n predefinida en la biblioteca lo que permite realizar cadenas de operaciones dividir-aplicar-combinar sobre conjuntos de datos.\nMezcla y uni\u00f3n de datos.\nIndexaci\u00f3n jer\u00e1rquica de ejes para trabajar con datos de altas dimensiones en estructuras de datos de menor dimensi\u00f3n.\nFuncionalidad de series de tiempo: generaci\u00f3n de rangos de fechas y conversi\u00f3n de frecuencias, desplazamiento de ventanas estad\u00edsticas y de regresiones lineales, desplazamiento de fechas y retrasos.[3]\u200b\nLa biblioteca ha sido altamente optimizada en cuanto a rendimiento, con caminos de c\u00f3digo cr\u00edtico escritos en Cython o en C.[4]\u200b", "subsections": []}, {"name": "Historia", "text": "Su principal desarrollador,\u00a0Wes McKinney, empez\u00f3 a desarrollar Pandas en el a\u00f1o 2008 mientras trabajaba en\u00a0AQR Capital\u00a0por la necesidad que ten\u00eda de  una herramienta flexible de alto rendimiento para realizar an\u00e1lisis cuantitativo en datos financieros.[5]\u200b Antes de dejar AQR convenci\u00f3 a la administraci\u00f3n de la empresa de distribuir esta biblioteca bajo licencia de c\u00f3digo abierto. Otro empleado de AQR, Chang Ella, se uni\u00f3 en 2012 al esfuerzo de desarrollo de la biblioteca.[cita\u00a0requerida]", "subsections": [{"name": "L\u00ednea del tiempo:[6]\u200b", "text": "2008: Comienza el desarrollo de pandas\n2009: Pandas se convierte en un software de c\u00f3digo abierto\n2012: Es publicada la primera edici\u00f3n de Python for Data Analysis\n2015: pandas se convierte en un proyecto esponsorizado por NumFOCUS\n2018: Primer sprint presencial de desarrolladores del n\u00facleo"}]}, {"name": "Ejemplos", "text": " Curvas\nimport\npandas\nas\npd\nmatplotlib.pyplot\nplt\nnumpy\nnp\ndf\n=\npd\n.\nDataFrame\n(\nnp\nrandom\nrandn\n100\n,\n5\n),\ncolumns\nlist\n'ABCDE'\n))\ncumsum\n()\n# Return cumulative sum over a DataFrame or Series axis\nplot\nplt\nshow\n Gr\u00e1fica de barras\nrand\n10\nbar\nstacked\nTrue\n)\n Diagrama de caja  \n7\nbox\n Histograma \ndata\nSeries\nnormal\nsize\nhist\ngrid\nFalse", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "matplotlib\nNumPy\nSciPy\nR (lenguaje de programaci\u00f3n)\nScikit-learn", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abLicense \u2013 Package overview \u2013 pandas 0.21.1 documentation\u00bb. pandas. 12 de diciembre de 2017. Consultado el 13 de diciembre de 2017.\u00a0\n\u2191 Using Econometrics: A Practical Guide. Pearson. 2016. pp.\u00a0346, 465. ISBN\u00a0013418274X.\u00a0\n\u2191 \u00abpandas.date_range \u2013 pandas 0.21.1 documentation\u00bb. pandas. 12 de diciembre de 2017. Consultado el 13 de diciembre de 2017.\u00a0\n\u2191 \u00abPython Data Analysis Library \u2013 pandas: Python Data Analysis Library\u00bb. pandas. Consultado el 13 de noviembre de 2017.\u00a0\n\u2191 Matt Harrison, Theodore Petrou (2020). Pandas CookBook. Packt. ISBN\u00a0978-1839213106.\u00a0\n\u2191 \u00abpandas - Python Data Analysis Library\u00bb. pandas.pydata.org. Consultado el 29 de septiembre de 2021.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Paradigma_de_programaci%C3%B3n", "title": "Paradigma de programaci\u00f3n", "summary": "Se denominan paradigmas de programaci\u00f3n a las formas de clasificar los lenguajes de programaci\u00f3n en funci\u00f3n de sus caracter\u00edsticas. Los idiomas se pueden clasificar en m\u00faltiples paradigmas.\nAlgunos paradigmas se ocupan principalmente de las implicancias para el modelo de ejecuci\u00f3n del lenguaje, como permitir efectos secundarios o si la secuencia de operaciones est\u00e1 definida por el modelo de ejecuci\u00f3n. Otros paradigmas se refieren principalmente a la forma en que se organiza el c\u00f3digo, como agrupar un c\u00f3digo en unidades junto con el estado que modifica el c\u00f3digo. Sin embargo, otros se preocupan principalmente por el estilo de la sintaxis y la gram\u00e1tica.\nLos paradigmas de programaci\u00f3n comunes incluyen:[1]\u200b[2]\u200b[3]\u200b\nimperativo en el que el programador instruye a la m\u00e1quina c\u00f3mo cambiar su estado,\nprocedimental que agrupa las instrucciones en procedimientos,\norientado a objetos que agrupa las instrucciones con la parte del estado en el que operan,\ndeclarativo en el que el programador simplemente declara las propiedades del resultado deseado, pero no c\u00f3mo calcularlo\nfuncional en el que el resultado deseado se declara como el valor de una serie de aplicaciones de funci\u00f3n,\nl\u00f3gico en la que el resultado deseado se declara como la respuesta a una pregunta sobre un sistema de hechos y reglas,\nmatem\u00e1tico en el que el resultado deseado se declara como la soluci\u00f3n de un problema de optimizaci\u00f3n\nreactivo en el que se declara el resultado deseado con flujos de datos y la propagaci\u00f3n del cambio\nLas t\u00e9cnicas simb\u00f3licas como la reflexi\u00f3n, que permiten que el programa se refiera a s\u00ed mismo, tambi\u00e9n pueden ser consideradas como un paradigma de programaci\u00f3n. Sin embargo, esto es compatible con los principales paradigmas y, por lo tanto, no es un paradigma real por derecho propio.\nPor ejemplo, los lenguajes que caen en el paradigma imperativo tienen dos caracter\u00edsticas principales: establecen el orden en el que ocurren las operaciones, con construcciones que controlan expl\u00edcitamente ese orden, y permiten efectos secundarios, en los que el estado puede modificarse en un momento determinado, dentro de una unidad de c\u00f3digo, y luego leer en un momento diferente dentro de una unidad de c\u00f3digo diferente. La comunicaci\u00f3n entre las unidades de c\u00f3digo no es expl\u00edcita. Mientras tanto, en la programaci\u00f3n orientada a objetos, el c\u00f3digo se organiza en objetos que contienen un estado que solo es modificado por el c\u00f3digo que forma parte del objeto. La mayor\u00eda de los lenguajes orientados a objetos tambi\u00e9n son lenguajes imperativos. Por el contrario, los lenguajes que se ajustan al paradigma declarativo no indican el orden en el que ejecutar las operaciones. En su lugar, proporcionan una serie de operaciones disponibles en el sistema, junto con las condiciones en las que se permite que se ejecute cada una. La implementaci\u00f3n del modelo de ejecuci\u00f3n del lenguaje rastrea qu\u00e9 operaciones son libres de ejecutar y elige el orden en forma independiente. M\u00e1s en Comparaci\u00f3n de lenguajes de programaci\u00f3n de m\u00faltiples paradigmas.\n--Lenguajes de programaci\u00f3n procedurales--\nEl desarrollo de lenguajes procedurales dio lugar a lenguajes sirven de vocabulario relacionado con el problema a resolver. Ejemplos de estos lenguajes son:\nCOBOL (COmmon Business-Oriented Language) - hace servir t\u00e9rminos como archivo, mover y copiar.\nFORTRAN (FORmula TRANslation) - hace servir terminolog\u00eda del lenguaje matem\u00e1tico.\nALGOL (ALGOritmic Language) - enfocado a ser un lenguaje apropiado para definir algoritmos, tambi\u00e9n puede servir de lenguaje matem\u00e1tico.\nPL/I (Programing Language One) - un h\u00edbrido comercial/cient\u00edfico de prop\u00f3sito general con soporte para usuarios.\nBASIC (Begginers All purpose Symbolic Instruction Code) - se desarroll\u00f3 para permitir escribir programas a m\u00e1s personas.\nC - un lenguaje de prop\u00f3sito general.\nTodos estos lenguajes siguen un paradigma procedural. Describen, paso a paso, exactamente el proceso que debe seguirse para resolver un problema espec\u00edfico. La eficacia y eficiencia de cada soluci\u00f3n dependen de la experiencia, la inventiva y la habilidad del programador.", "sections": [{"name": "Cr\u00edtica", "text": "Algunos investigadores de lenguajes de programaci\u00f3n critican la noci\u00f3n de paradigmas como clasificaci\u00f3n de los lenguajes de programaci\u00f3n, por ejemplo Harper,[4]\u200b y Krishnamurthi.[5]\u200b Sostienen que muchos lenguajes de programaci\u00f3n no pueden clasificarse estrictamente en un paradigma, sino que incluyen caracter\u00edsticas de varios paradigmas.", "subsections": []}, {"name": "Historia", "text": "A lo largo del tiempo se han desarrollado diferentes enfoques de programaci\u00f3n, que se han identificado como tales en su momento o retrospectivamente. Uno de los primeros enfoques conscientemente identificado como tal es la programaci\u00f3n estructurada, defendida desde mediados de la d\u00e9cada de 1960. El concepto de \"paradigma de programaci\u00f3n\" como tal data al menos de 1978, en la conferencia Premio Turing de Robert W. Floyd, titulada Los paradigmas de la programaci\u00f3n, que cita la noci\u00f3n de paradigma utilizada por Thomas Kuhn en su La estructura de las revoluciones cient\u00edficas (1962).[6]\u200b Los primeros lenguajes de programaci\u00f3n no ten\u00edan paradigmas de programaci\u00f3n claramente definidos y a veces los programas hac\u00edan un uso extensivo de las sentencias goto, el uso liberal de estas sentencias conduc\u00eda a \"c\u00f3digo espagueti\" con el que era dif\u00edcil trabajar. Esto llev\u00f3 al desarrollo de paradigmas de programaci\u00f3n estructurados que no permit\u00edan el uso de sentencias goto y s\u00f3lo permit\u00edan el uso de construcciones de programaci\u00f3n claramente definidas.[7]\u200b", "subsections": [{"name": "C\u00f3digo m\u00e1quina", "text": "Los paradigmas de programaci\u00f3n de nivel m\u00e1s bajo son el c\u00f3digo m\u00e1quina, que representa directamente el instrucciones (el contenido de la memoria del programa) como una secuencia de n\u00fameros, y el lenguaje ensamblador, en el que las instrucciones de la m\u00e1quina se representan mediante mnem\u00f3nicos y las  direcciones de memoria pueden recibir etiquetas simb\u00f3licas. A veces se denominan primera generaci\u00f3n y segunda generaci\u00f3n.\nEn la d\u00e9cada de 1960, los lenguajes ensambladores se desarrollaron para soportar COPIADO de bibliotecas y capacidades de generaci\u00f3n y preprocesamiento de macros condicionales bastante sofisticadas, LLAMADAS a (subrutinas), variables externas y secciones comunes (globales), permitiendo una reutilizaci\u00f3n significativa del c\u00f3digo y el aislamiento de las especificidades del hardware mediante el uso de operadores l\u00f3gicos como READ/WRITE/GET/PUT. El ensamblador se utilizaba, y a\u00fan se utiliza, en sistemas en los que el tiempo es un factor cr\u00edtico y, a menudo, en sistemas embebidos, ya que ofrece el control m\u00e1s directo de lo que hace la m\u00e1quina."}, {"name": "Programaci\u00f3n orientada a objetos", "text": "Art\u00edculo principal:\nTras el uso generalizado de los lenguajes procedimentales, se crearon los lenguajes de programaci\u00f3n orientada a objetos (POO), como Simula, Smalltalk, C++, Eiffel, Python, PHP, Java, y C#. En estos lenguajes, los datos y los m\u00e9todos para manipularlos se mantienen como una unidad llamada object.  Con una perfecta encapsulaci\u00f3n, una de las caracter\u00edsticas distintivas de la programaci\u00f3n orientada a objetos, la \u00fanica forma de que otro objeto o usuario pueda acceder a los datos es a trav\u00e9s de los  m\u00e9todos del objeto. As\u00ed, el funcionamiento interno de un objeto puede ser cambiado sin afectar a ning\u00fan c\u00f3digo que utilice el objeto. Todav\u00eda existe cierta controversia planteada por Alexander Stepanov, Richard Stallman[8]\u200b y otros programadores, sobre la eficacia del paradigma de programaci\u00f3n orientada a objetos frente al paradigma procedimental. La necesidad de que cada objeto tenga m\u00e9todos asociativos lleva a algunos esc\u00e9pticos a asociar la POO con hinchaz\u00f3n del software; un intento de resolver este dilema lleg\u00f3 a trav\u00e9s del polimorfismo.\nDado que la programaci\u00f3n orientada a objetos se considera un paradigma, no un lenguaje, es posible crear incluso un lenguaje ensamblador orientado a objetos. Ensamblador de alto nivel (HLA) es un ejemplo de esto que soporta completamente tipos de datos avanzados y programaci\u00f3n en lenguaje ensamblador orientada a objetos\u00a0\u2013  a pesar de sus or\u00edgenes tempranos. Por lo tanto, los diferentes paradigmas de programaci\u00f3n pueden verse m\u00e1s bien como  memes motivacionales de sus defensores, en lugar de representar necesariamente el progreso de un nivel al siguiente. Las comparaciones precisas de la eficacia de los paradigmas en competencia a menudo son m\u00e1s dif\u00edciles debido a la terminolog\u00eda nueva y diferente aplicada a entidades y procesos similares, junto con numerosas distinciones de implementaci\u00f3n entre idiomas."}, {"name": "Otros paradigmas", "text": "La programaci\u00f3n literaria, como una forma de programaci\u00f3n imperativa, estructura los programas como una red centrada en el ser humano, como en un ensayo de hipertexto: la documentaci\u00f3n es parte integral del programa, y el programa se estructura siguiendo la l\u00f3gica de la exposici\u00f3n en prosa, en lugar de la conveniencia del compilador.\nIndependientemente de la rama imperativa, se desarrollaron paradigmas de programaci\u00f3n declarativa. En estos lenguajes, se le dice al ordenador cu\u00e1l es el problema, no c\u00f3mo resolverlo\u00a0\u2013  el programa se estructura como un conjunto de propiedades a encontrar en el resultado esperado, no como un procedimiento a seguir. Dada una base de datos o un conjunto de reglas, el ordenador intenta encontrar una soluci\u00f3n que cumpla todas las propiedades deseadas. Un arquetipo de lenguaje declarativo es el lenguaje de cuarta generaci\u00f3n SQL. SQL, y la familia de los lenguajes funcionales y la programaci\u00f3n l\u00f3gica.\nLa programaci\u00f3n funcional es un subconjunto de la programaci\u00f3n declarativa. Los programas escritos con este paradigma utilizan funciones, bloques de c\u00f3digo destinados a comportarse como  funciones matem\u00e1ticas. Los lenguajes funcionales desalientan los cambios en el valor de las variables a trav\u00e9s de asignaci\u00f3n, haciendo un gran uso de  recursi\u00f3n en su lugar.\nEl paradigma de programaci\u00f3n l\u00f3gica considera la computaci\u00f3n como razonamiento automatizado sobre un cuerpo de conocimiento. Los hechos sobre el dominio del problema se expresan como f\u00f3rmulas l\u00f3gicas, y los programas se ejecutan aplicando reglas de inferencia sobre ellas hasta que se encuentra una respuesta al problema, o se demuestra que el conjunto de f\u00f3rmulas es inconsistente.\nLa programaci\u00f3n simb\u00f3lica es un paradigma que describe programas capaces de manipular f\u00f3rmulas y componentes del programa como datos.[3]\u200b Los programas pueden modificarse a s\u00ed mismos y parecer que \"aprenden\", lo que los hace adecuados para aplicaciones como la inteligencia artificial, los  sistemas expertos, el procesamiento del lenguaje natural y los juegos de ordenador.  Los lenguajes que soportan este paradigma incluyen Lisp y Prolog.[9]\u200b\nLa programaci\u00f3n diferenciable estructura los programas para que puedan ser diferenciados en todo momento, normalmente mediante diferenciaci\u00f3n autom\u00e1tica.[10]\u200b[11]\u200b"}]}, {"name": "Soporte para m\u00faltiples paradigmas", "text": "La mayor\u00eda de lenguajes de programaci\u00f3n soportan m\u00e1s de un paradigma de programaci\u00f3n para permitir a los programadores utilizar el estilo de programaci\u00f3n m\u00e1s adecuado y las construcciones del lenguaje asociadas para un trabajo determinado.[12]\u200b", "subsections": []}, {"name": "Resumen", "text": ":\u200a5\u200a\nAs\u00ed como la ingenier\u00eda de software (como proceso) se define mediante diferentes metodolog\u00edas, los lenguajes de programaci\u00f3n (como modelos de computaci\u00f3n) se definen mediante diferentes paradigmas. Algunos lenguajes est\u00e1n dise\u00f1ados para admitir un paradigma (Smalltalk admite programaci\u00f3n orientada a objetos, Haskell admite programaci\u00f3n funcional), mientras que otros lenguajes de programaci\u00f3n admiten m\u00faltiples paradigmas (como Object Pascal, C++, Java, JavaScript, C#, Scala, Visual Basic, Common Lisp, Scheme, Perl, PHP, Python, Ruby, Oz y F# ). Por ejemplo, los programas escritos en C ++, Object Pascal o PHP pueden ser puramente procedimentales, puramente orientados a objetos o pueden contener elementos de ambos u otros paradigmas. Los dise\u00f1adores y programadores de software deciden c\u00f3mo utilizar esos elementos paradigm\u00e1ticos.\nEn la programaci\u00f3n orientada a objetos, los programas se tratan como un conjunto de objetos que interact\u00faan. En la programaci\u00f3n funcional, los programas se tratan como una secuencia de evaluaciones de funciones sin estado. Cuando se programan computadoras o sistemas con muchos procesadores, en la programaci\u00f3n orientada a procesos, los programas se tratan como conjuntos de procesos concurrentes que act\u00faan sobre estructuras de datos compartidas l\u00f3gicas.\nMuchos paradigmas de programaci\u00f3n son tan conocidos por las t\u00e9cnicas que proh\u00edben como por las que habilitan. Por ejemplo, la programaci\u00f3n funcional pura no permite el uso de efectos secundarios, mientras que la programaci\u00f3n estructurada no permite el uso de la instrucci\u00f3n \"go to\". En parte por esta raz\u00f3n, los nuevos paradigmas a menudo son considerados doctrinarios o demasiado r\u00edgidos por quienes est\u00e1n acostumbrados a estilos anteriores.[15]\u200b Sin embargo, evitar ciertas t\u00e9cnicas puede facilitar la comprensi\u00f3n del comportamiento del programa y demostrar teoremas sobre la correcci\u00f3n del programa.\nLos paradigmas de programaci\u00f3n tambi\u00e9n se pueden comparar con modelos de programaci\u00f3n, lo que permite invocar un modelo de ejecuci\u00f3n utilizando solo una API. Los modelos de programaci\u00f3n tambi\u00e9n se pueden clasificar en paradigmas seg\u00fan las caracter\u00edsticas del modelo de ejecuci\u00f3n.\nPara la computaci\u00f3n paralela, es com\u00fan usar un modelo de programaci\u00f3n en lugar de un lenguaje. La raz\u00f3n es que los detalles del hardware paralelo se filtran en las abstracciones utilizadas para programar el hardware. Esto hace que el programador tenga que mapear patrones en el algoritmo sobre patrones en el modelo de ejecuci\u00f3n (que se han insertado debido a una fuga de hardware en la abstracci\u00f3n). Como consecuencia, ning\u00fan lenguaje de programaci\u00f3n paralelo se adapta bien a todos los problemas de c\u00e1lculo. Por lo tanto, es m\u00e1s conveniente utilizar un lenguaje secuencial base e insertar llamadas a la API en modelos de ejecuci\u00f3n paralela a trav\u00e9s de un modelo de programaci\u00f3n. Dichos modelos de programaci\u00f3n paralela se pueden clasificar de acuerdo con abstracciones que reflejan el hardware, como la memoria compartida, la memoria distribuida con paso de mensajes, nociones de lugar visibles en el c\u00f3digo, etc. Estos pueden considerarse sabores del paradigma de programaci\u00f3n que se aplican solo a lenguajes y modelos de programaci\u00f3n paralelos.", "subsections": []}, {"name": "Referencias", "text": "\u2191 N\u00f8rmark, Kurt. Overview of the four main programming paradigms. Aalborg University, 9 May 2011. Retrieved 22 September 2012.\n\u2191 Frans Coenen (11 de octubre de 1999). \u00abCharacteristics of declarative programming languages\u00bb. cgi.csc.liv.ac.uk. Consultado el 20 de febrero de 2014.\u00a0\n\u2191 a b Michael A. Covington (23 de agosto de 2010). \u00abCSCI/ARTI 4540/6540: First Lecture on Symbolic Programming and LISP\u00bb. University of Georgia. Archivado desde el original el 7 de marzo de 2012. Consultado el 20 de noviembre de 2013.\u00a0\n\u2191 Harper, Robert (1 de mayo de 2017). \u00abWhat, if anything, is a programming paradigm?\u00bb [\u00bfQu\u00e9 es, si es que es algo, un paradigma de programaci\u00f3n?].  En Cambridge University Press, ed. FifteenEightyFour (en ingl\u00e9s).\u00a0\n\u2191 Krishnamurthi, Shriram (Noviembre de 2008). \u00abTeaching programming languages in a post-linnaean age\u00bb [Ense\u00f1anza de lenguajes de programaci\u00f3n en una era post-linneana]. Sigplan (en ingl\u00e9s) (ACM) 43 (11): 81-83. S2CID\u00a035714982. doi:10.1145/1480828.1480846. Not. 43, 11.\u00a0.\n\u2191 Floyd, R. W. (1979). \u00abThe Paradigms of Programming\u00bb. Communications of the ACM (en ingl\u00e9s) 22 (8): 455-460. doi:10.1145/359138.359140.\u00a0\n\u2191 Soroka, Barry I. (2006). Java 5: Objects First (en ingl\u00e9s). ISBN\u00a09780763737207.\u00a0\n\u2191 Stallman, Richard (16 de enero de 1995). \u00abmode inheritence, cloning, hooks & OOP\u00bb. Google Groups (en ingl\u00e9s).\u00a0\n\u2191 \u00abGlosario de negocios: Definici\u00f3n de programaci\u00f3n simb\u00f3lica\u00bb. allbusiness.com. Consultado el 30 de julio de 2014.\u00a0\n\u2191 Wang, Fei; Decker, James; Wu, Xilun; Essertel, Gregory; Rompf, Tiark (2018), pdf \u00abBackpropagation with Callbacks: Foundations for Efficient and Expressive Differentiable Programming\u00bb, Avances en Sistemas de Procesamiento de Informaci\u00f3n Neuronal 31 (Curran Associates, Inc.): 10201-10212, consultado el 13 de febrero de 2019\u00a0.\n\u2191 Innes, Mike (2018). \u00abOn Machine Learning and Programming Languages\u00bb. SysML Conference 2018. Archivado desde sysml.cc/doc/37.pdf el original el 20 de septiembre de 2018. Consultado el 13 de febrero de 2019.\u00a0\n\u2191 \u00abLenguaje de programaci\u00f3n multiparadigma\u00bb. developer.mozilla.org. Mozilla Foundation. Archivado desde el original el 21 de agosto de 2013.\u00a0\n\u2191 Peter Van Roy (12 de mayo de 2009). \u00abProgramming Paradigms: What Every Programmer Should Know\u00bb. info.ucl.ac.be. Consultado el 27 de enero de 2014.\u00a0\n\u2191 Peter Van-Roy; Seif Haridi (2004). Concepts, Techniques, and Models of Computer Programming. MIT Press. ISBN\u00a0978-0-262-22069-9.\u00a0\n\u2191 Frank Rubin (March 1987). \u00ab'GOTO Considered Harmful' Considered Harmful\u00bb. Communications of the ACM 30 (3): 195-196. S2CID\u00a06853038. doi:10.1145/214748.315722. Archivado desde el original el 20 de marzo de 2009.\u00a0", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Programaci\u00f3n\nLenguaje de programaci\u00f3", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Perif%C3%A9rico_de_entrada/salida", "title": "Perif\u00e9rico de entrada/salida", "summary": "Busca fuentes: \u00abPerif\u00e9rico de entrada/salida\u00bb \u2013 noticias\u00a0\u00b7 libros\u00a0\u00b7 acad\u00e9mico\u00a0\u00b7 im\u00e1genes\nEn inform\u00e1tica, un perif\u00e9rico de entrada/salida o E/S (en ingl\u00e9s: input/output o I/O) es aquel tipo de dispositivo perif\u00e9rico de un computador capaz de interactuar con los elementos externos a ese sistema de forma bidireccional, es decir, que permite tanto que sea ingresada informaci\u00f3n desde un sistema externo, como emitir informaci\u00f3n a partir de ese sistema.", "sections": [{"name": "Funciones", "text": "Un perif\u00e9rico de E/S es el que se utiliza para ingresar (E) datos a la computadora, y luego de ser procesados por la unidad central de procesamiento (CPU), genera la salida (S) de informaci\u00f3n. Su funci\u00f3n es leer o grabar, permanente o virtualmente, todo aquello que se haga con la computadora, para que pueda ser utilizado por los usuarios u otros sistemas.\nUn sistema de E/S debe poder, como m\u00ednimo, direccionar los diferentes perif\u00e9ricos con los que puede establecer comunicaci\u00f3n, establecer un sistema de comunicaci\u00f3n entre el procesador y los controladores, y sincronizar los dispositivos de manera que no se produzcan inconsistencias o errores. Adem\u00e1s, deber\u00eda ser capaz de convertir los datos entre diferentes formatos, controlar el estado de los perif\u00e9ricos, llevar la cuenta de las transmisiones y tener un sistema de detecci\u00f3n de errores.[1]\u200b", "subsections": [{"name": "Direccionamiento o selecci\u00f3n de perif\u00e9rico", "text": "A la hora de comunicarse con un dispositivo, el procesador sit\u00faa su direcci\u00f3n asociada en el bus de direcciones. De esta forma, selecciona el dispositivo con el que quiere iniciar una transferencia de datos. La forma de identificar cada perif\u00e9rico es el llamado direccionamiento.\nTiene las siguientes caracter\u00edsticas:\nEs necesario prevenir que varios dispositivos puedan acceder simult\u00e1neamente al mismo bus, ya que se pueden producir cortocircuitos (en el caso de una arquitectura de bus compartido).\nCada direcci\u00f3n no tiene por qu\u00e9 referirse a un solo puerto, pero es necesario que \u00e9sta se pueda identificar un\u00edvocamente y no produzca incoherencias o ambig\u00fcedades con el resto del sistema.\nLos controladores suelen tener varios puertos asociados.\nBus de direcciones\nEl bus de direcciones comunica el procesador con los perif\u00e9ricos, seleccionando aquel con el que se desea interaccionar. Este puede ser:\nMapeado: El mapa de perif\u00e9ricos pertenece al mismo que el de memoria, es decir, el procesador no distingue entre accesos a memoria y accesos a los dispositivos de E/S, por tanto no hay instrucciones espec\u00edficas de E/S que no sean las propias de acceso a memoria, sino que se utilizan LOAD, STORE o MOVE. La ventaja de usar una E/S mapeada es que hay menor complejidad a la hora de dise\u00f1ar el procesador.\nIndependiente: El mapa de perif\u00e9ricos es independiente (y valga la redundancia) al mapa de memoria ya que usa la plantilla IO/M# del procesador, por tanto existen instrucciones dedicadas a las transferencias con perif\u00e9ricos distintos a la memoria principal (nemot\u00e9cnicos m\u00e1s comunes: IN, OUT, TESTI/O, CONTROLI/O). Las ventajas de usar E/S independiente es que, facilita la protecci\u00f3n de E/S y los programas son m\u00e1s r\u00e1pidos al tener una decodificaci\u00f3n m\u00e1s sencilla y tener un tama\u00f1o menor las instrucciones de E/S. Al contrario que la E/S mapeada, el dise\u00f1o del procesador es m\u00e1s complejo.\nT\u00e9cnicas de direccionamiento para controladores\nEn funci\u00f3n del tipo de sistema E/S, podemos encontrar diferentes formas de direccionamiento:\nDireccionamiento por selecci\u00f3n lineal: Consiste en asignar un bit del bus de direcciones a cada puerto. Si tenemos n \"l\u00edneas\" para direccionar perif\u00e9ricos podemos especificar, a lo sumo, n perif\u00e9ricos distintos. Este tipo de direccionamiento no se suele utilizar ya que tiene importantes restricciones tales como que solo un perif\u00e9rico puede estar activo a la vez.\nDireccionamiento por selecci\u00f3n por decodificaci\u00f3n: La direcci\u00f3n del perif\u00e9rico est\u00e1 codificada y se requiere un decodificador para activar el perif\u00e9rico deseado. Dentro de este tipo de direccionamiento se hallan dos posibilidades:\nCentralizado: Se emplea un decodificador para todos los puertos.\nDistribuido: Cada puerto \"reconoce\" su propia direcci\u00f3n."}, {"name": "Comunicaci\u00f3n f\u00edsica entre el controlador y el procesador", "text": "Existen distintas formas de interconexi\u00f3n que se pueden dar entre controlador y procesador. Las m\u00e1s destacadas son las basadas en buffer tri-estado y en las MUX/DEMUX indicando sus ventajas/inconvenientes.\nSe suele usar m\u00e1s la alternativa basada en buffer tri-estado pues permite un mejor aprovechamiento de los dispositivos de E/S y la mejora de los mismos al dedicar mayor \u00e1rea de estos en la mejora de prestaciones y no en el interconexionado.\nBasados en buffer tri-estado\nSe implementan usando un bus compartido y buffer tri-estado para cada puerto y evitar as\u00ed el \"volcado\" de informaci\u00f3n por parte de dos o m\u00e1s perif\u00e9ricos en el bus. Las caracter\u00edsticas principales de este tipo de interconexi\u00f3n son:\nFacilidad en la expansi\u00f3n por medio de tarjetas o circuiter\u00eda espec\u00edfica\nPermite conectar en paralelo muchos perif\u00e9ricos\nBasados en MUX/DEMUX\nSe emplean MUX y DEMUX para seleccionar el perif\u00e9rico que podr\u00e1 usar el bus compartido en un momento dado, impidiendo al resto de dispositivos acceder a este \u00faltimo. Las caracter\u00edsticas principales de este tipo de interconexi\u00f3n son:\nEscasa posibilidad de expansi\u00f3n\nMucha circuiter\u00eda: Suelen dedicar gran parte del \u00e1rea del dispositivo en el cableado del mismo."}, {"name": "Sincronizaci\u00f3n", "text": "La sincronizaci\u00f3n con el procesador o la memoria de los dispositivos de E/S consiste en la acomodaci\u00f3n de velocidades de ambos, ya que los perif\u00e9ricos suelen ser m\u00e1s lentos. A fin de que no se imponga el ritmo del dispositivo m\u00e1s lento se establecen mecanismos para saber cu\u00e1ndo se deben enviar/recibir datos y es com\u00fan que los controladores dispongan de buffers de almacenamiento temporal de palabras y permitan aceptar se\u00f1ales de control de conformidad que reflejan el estado del perif\u00e9rico en un momento dado (listo, petici\u00f3n, reconocimiento, ocupado, etc).\nTipos de temporizaci\u00f3n\nLa temporizaci\u00f3n de las operaciones de E/S puede ser de dos tipos:\nS\u00edncrona: Aquella en la que los dispositivos que se conectan poseen velocidades similares, por lo que ninguno de ellos debe esperar al otro.\nAs\u00edncrona: Aquella en los que los dispositivos tienen velocidades dispares, lo cual provoca que uno deba esperar al otro para que no se produzcan errores/inconsistencias en los datos.\nExiste otra definici\u00f3n de los t\u00e9rminos Sincrono/Asincrono que se puede encontrar en diferentes textos/escritos de diferentes autores dichos t\u00e9rminos refiri\u00e9ndose a las distintas definiciones:\nS\u00edncronos: Se dice de los dispositivos que comparten una se\u00f1al de reloj com\u00fan.\nAs\u00edncronos: Aquellos que no comparten la misma se\u00f1al de reloj. Debido a que no tienen la misma se\u00f1al de reloj, pueden acomodar una amplia variedad de dispositivos, y el bus puede alargarse sin preocuparse por los problemas de sincronizaci\u00f3n. Para coordinar la transmisi\u00f3n de datos entre emisor y receptor, utilizan un protocolo de presentaci\u00f3n (handshaking protocol). \u00c9ste protocolo consta de una serie de pasos en los cuales emisor y receptor proceden al siguiente paso solamente cuando ambas partes est\u00e1n de acuerdo. Para implementar \u00e9ste protocolo se requiere de un conjunto adicional de l\u00edneas de control, entre ellas:\nReadReq o RD: Se utiliza para indicar una petici\u00f3n de lectura de memoria. La direcci\u00f3n se pone en la l\u00ednea de datos al mismo tiempo.\nWriteReq o WR: Se utiliza para indicar una petici\u00f3n de escritura en memoria.\nData: Se utiliza para indicar que la palabra de datos est\u00e1 preparada en las l\u00edneas de datos (datos estables).\nAck: Se utiliza para conocer la se\u00f1al de ReadReq o Data, es decir, esta se\u00f1al de aceptaci\u00f3n se necesita para que el controlador del perif\u00e9rico conteste a la petici\u00f3n de transferencia generada por el procesador.\nTemporizaci\u00f3n s\u00edncrona\nEn la temporizaci\u00f3n s\u00edncrona, la aparici\u00f3n de un evento est\u00e1 determinada por el reloj. El bus incluye una l\u00ednea de reloj que es com\u00fan a todos los dispositivos, y se suelen sincronizar durante el flanco de subida. Casi todos los eventos duran un \u00fanico ciclo de reloj.\nEste tipo de temporizaci\u00f3n s\u00f3lo funciona si el dispositivo de E/S es suficientemente r\u00e1pido para responder a la espera que le brinda el procesador, en caso contrario se producir\u00e1n errores en la escritura de los puertos y se leer\u00e1n datos no v\u00e1lidos del bus, por lo que las operaciones de E/S no ser\u00edan correctas.\nOtro tema importante es que, si no se incorporan rutinas para detectar hardware inexistente, el programa podr\u00eda fallar por tratar de direccionar un dispositivo que o bien no existe o bien ha sido \"desconectado\" del equipo.\nLas operaciones de lectura y escritura funcionan de la siguiente manera:\nEscritura: El procesador activa la se\u00f1al WR#, que es la de escritura, y espera un tiempo, que es determinado por el procesador (no es una espera al otro dispositivo), y una vez transcurrido ese periodo de tiempo desactiva la se\u00f1al de escritura, por lo que si el dispositivo de E/S no es suficientemente r\u00e1pido la escritura no se realizar\u00e1 correctamente. Cabe destacar que en este tipo de temporizaci\u00f3n no se produce ninguna espera por parte del procesador ni por parte del perif\u00e9rico.\nLectura: El procesador activa la se\u00f1al RD# que es la de lectura y espera un tiempo determinado por el mismo (como ocurr\u00eda en el caso de la Escritura) y acto seguido lee del bus de datos la informaci\u00f3n, sin comprobar si esta contiene los datos v\u00e1lidos suministrados por el perif\u00e9rico.\nTemporizaci\u00f3n as\u00edncrona o con \"handshaking\"\nLa traducci\u00f3n de \"handshaking\" es \"apret\u00f3n de manos\" y viene a significar que el procesador y los perif\u00e9ricos intercambian se\u00f1ales de control que les permiten sincronizar sus acciones y \"colaborar\" conjuntamente en la transferencia de informaci\u00f3n. Generalmente se suele considerar que existe s\u00f3lo una se\u00f1al de sincronizaci\u00f3n llamada ACK (aunque puede haber tantas se\u00f1ales de sincronizaci\u00f3n como se necesiten y esto depende del hardware del dispositivo en cuesti\u00f3n).\nCon este procedimiento mejoramos el rendimiento de las operaciones de E/S e impedimos que se produzcan los fallos en la escritura/lectura que pod\u00edan suceder con la temporizaci\u00f3n s\u00edncrona para un dispositivo existente. Sin embargo al igual que en el caso sincrono se han de incorporar rutinas que determinen si se intenta acceder a un dispositivo inexistente o \"desconectado\" puesto que esto si provocar\u00eda errores (entrar\u00eda en un bucle infinito esperando a ACK). La soluci\u00f3n que generalmente se adopta es que el procesador da un tiempo l\u00edmite de espera por encima del cual se genera una excepci\u00f3n y se aborta la operaci\u00f3n E/S.\nEl funcionamiento de las operaciones de lectura y escritura es el siguiente:\nEscritura: El procesador activa la se\u00f1al de escritura, WR# y espera hasta que el perif\u00e9rico activa su l\u00ednea de sincronizaci\u00f3n ACK, cuando esto sucede el procesador deshabilita la se\u00f1al de escritura y se produce la escritura (y valga la redundancia) de los datos en el puerto del perif\u00e9rico correspondiente. Finalmente el perif\u00e9rico desactiva ACK.\nLectura: El procesador habilita la se\u00f1al de lectura, RD# y espera hasta que el dispositivo le \"indique\" mediante ACK que los datos est\u00e1n listos para su lectura. Una vez que ACK esta activa el procesador lee los datos del bus de datos y desactiva la se\u00f1al RD#. Finalmente el perif\u00e9rico reconoce la deshabilitaci\u00f3n de RD# y este desactiva la se\u00f1al de sincronizaci\u00f3n, ACK."}, {"name": "Otras funciones importantes", "text": "Adem\u00e1s de las funciones principales, existen otras tareas de las que un sistema de E/S debe hacerse cargo. Estas son las m\u00e1s importantes:\nConversi\u00f3n de datos: Acomodaci\u00f3n de las caracter\u00edsticas f\u00edsicas y l\u00f3gicas de las se\u00f1ales de datos empleadas por el dispositivo de E/S y por el bus del sistema. Permite \"compatibilizar\" los datos del bus de datos y los datos que acepta el perif\u00e9rico en cuesti\u00f3n, es decir, realiza conversiones entre distintos formatos de datos, por ejemplo:\nConversi\u00f3n de c\u00f3digos (BCD, ASCII, UNICODE, ANSI, etc).\nConversi\u00f3n serie/paralelo.\nConversi\u00f3n de niveles l\u00f3gicos para representar 0 y 1 (necesario para compatibilizar distintas tecnolog\u00edas l\u00f3gicas como la CMOS y la TTL).\nConversiones A/D y D/A.\nControl de perif\u00e9ricos: Permite conocer el estado en el que se encuentra el dispositivo y modificarlo, pudiendo adem\u00e1s enviar otras se\u00f1ales de control para afectar su funcionalidad actual.\nControl de los \"paquetes\" transferidos: Se debe encargar de determinar qu\u00e9 cantidad de informaci\u00f3n se env\u00eda en cada operaci\u00f3n de E/S (lo llamaremos \"paquete\") y contar la cantidad de paquetes que se llevan enviados para poder determinar cu\u00e1ndo se termina la transferencia de datos.\nDetecci\u00f3n de errores: Pueden ser errores propios del funcionamiento del hardware del perif\u00e9rico o bien de los datos (pueden haber sido corrompidos intencionadamente o accidentalmente) y en caso de ser necesario \"relanzar\" la operaci\u00f3n de E/S correspondiente."}]}, {"name": "Tipos", "text": "Dispositivos o perif\u00e9ricos de comunicaci\u00f3n entre computadoras, tales como m\u00f3dems y tarjetas de red, por lo general sirven para entrada y salida. Tambi\u00e9n, los dispositivos de almacenamiento de datos, como los discos r\u00edgidos, la unidad de estado s\u00f3lido, las memorias flash, las disqueteras, entre otros, se pueden considerar perif\u00e9ricos de entrada/salida.\nEjemplos:\nMultit\u00e1ctil\nCasco virtual\nImpresora multifunci\u00f3n", "subsections": [{"name": "Almacenamiento de datos", "text": "Art\u00edculo principal:\nEn ocasiones, se consideran perif\u00e9ricos de E/S a los dispositivos de almacenamiento de datos, como por ejemplo, las lectograbadoras de discos \u00f3pticos, \u2018lectoras\u2019 de tarjetas de memoria, discos duros port\u00e1tiles o externos, memorias USB o memorias flash, etc\u00e9tera."}, {"name": "Dispositivos de redes", "text": "Tambi\u00e9n, los dispositivos de redes o de comunicaci\u00f3n, suelen considerarse perif\u00e9ricos de E/S porque su funci\u00f3n es la interacci\u00f3n o interconexi\u00f3n entre dos o m\u00e1s computadoras, o entre la computadora y otro perif\u00e9rico externo.\nEjemplos: m\u00f3dem, tarjeta de red, concentrador, conmutador (dispositivo de red), enrutador, comunicaci\u00f3n inal\u00e1mbrica, bluetooth."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "Perif\u00e9rico (inform\u00e1tica)\nPerif\u00e9rico de entrada\nDirecciones base de entrada/salida", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abPERIFERICOS\u00bb. Consultado el 2 de noviembre de 2023.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "exa.unne.edu.ar/depar/areas/informatica/SistemasOperativos/SO5.htm Evoluci\u00f3n del proceso de entrada/salida.\nwww.sc.ehu.es/sbweb/fisica/cursoJava/fundamentos/archivos/intro.htm Tutorial sobre entrada/salida.\nwww.lugmen.org.ar/documentacion/cursos/linux-api/lecciones/02-io/material/linux-api.html Entrada/salida de bajo nivel.\nwww.entechtaiwan.com/dev/hw32/index.shtm Direct I/O from Win32 (en ingl\u00e9s).\nwww.iometer.org I/O Meter (en ingl\u00e9s)", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Perl", "title": "Perl", "summary": "5.38.2[1]\u200b / 29 de noviembre de 2023 (5 meses\u00a0y\u00a010 d\u00edas)\nPerl es un lenguaje de programaci\u00f3n dise\u00f1ado por Larry Wall en 1987. Perl toma caracter\u00edsticas del lenguaje C, del lenguaje interpretado bourne shell (sh), AWK, sed, Lisp y, en un grado inferior, de muchos otros lenguajes de programaci\u00f3n.\nEstructuralmente, Perl est\u00e1 basado en un estilo de bloques como los del C o AWK, y fue ampliamente adoptado por su destreza en el procesado de texto y no tener ninguna de las limitaciones de los otros lenguajes de script.", "sections": [{"name": "Historia", "text": "Larry Wall comenz\u00f3 a trabajar en Perl en 1987 mientras trabajaba como programador en Unisys[4]\u200b y anunci\u00f3 la versi\u00f3n 1.0 en el grupo de noticias comp.sources.misc el 18 de diciembre de 1987. El lenguaje se expandi\u00f3 r\u00e1pidamente en los siguientes a\u00f1os. Perl 2, publicado en 1988, aport\u00f3 un mejor motor de expresiones regulares. Perl 3, publicado en 1989, a\u00f1adi\u00f3 soporte para datos binarios.\nHasta 1991 la \u00fanica documentaci\u00f3n de Perl era una simple (y cada vez m\u00e1s larga) p\u00e1gina de manual Unix. En 1991 se public\u00f3 \nProgramming Perl (el libro del camello) y se convirti\u00f3 en la referencia de facto del lenguaje. Al mismo tiempo, el n\u00famero de versi\u00f3n de Perl salt\u00f3 a 4, no por marcar un gran cambio en el lenguaje, sino por identificar a la versi\u00f3n que estaba documentada en el libro.\nPerl 4 trajo consigo una serie de lanzamientos de mantenimiento, culminando en Perl 4.036 en 1993. En este punto, Larry Wall abandon\u00f3 Perl 4 para comenzar a trabajar en Perl 5. Perl 4 se quedar\u00eda en esa versi\u00f3n hasta hoy.\nEl desarrollo de Perl 5 continu\u00f3 en 1994. La lista de correo perl5-porters se estableci\u00f3 en mayo de 1994 para coordinar el trabajo de adaptaci\u00f3n de Perl 5 a diferentes plataformas. Es el primer foro para desarrollo, mantenimiento y adaptaci\u00f3n de Perl 5.\nPerl 5 fue publicado el 17 de octubre de 1994. Fue casi una completa reescritura del int\u00e9rprete y a\u00f1adi\u00f3 muchas nuevas caracter\u00edsticas al lenguaje, incluyendo objetos, referencias, paquetes y m\u00f3dulos. A destacar, los m\u00f3dulos proveen de un mecanismo para extender el lenguaje sin modificar el int\u00e9rprete. Esto permiti\u00f3 estabilizar su n\u00facleo principal, adem\u00e1s de permitir a los programadores de Perl a\u00f1adirle nuevas caracter\u00edsticas.\nVersi\u00f3n antigua, sin servicio t\u00e9cnico:\nVersi\u00f3n antigua, con servicio t\u00e9cnico:\nVersi\u00f3n estable actual:\nLeyenda:\nVersi\u00f3n antigua\nVersi\u00f3n antigua, con servicio t\u00e9cnico\nVersi\u00f3n actual\n\u00daltima versi\u00f3n prevista\nLanzamiento futuro\nEl 26 de octubre de 1995, se cre\u00f3 el Comprehensive Perl Archive Network (CPAN). CPAN es una colecci\u00f3n de sitios web que almacenan y distribuyen fuentes en Perl, binarios, documentaci\u00f3n, scripts y m\u00f3dulos. Originalmente, cada sitio CPAN deb\u00eda ser accedido a trav\u00e9s de su propio URL; hoy en d\u00eda, http://www.cpan.org redirige autom\u00e1ticamente a uno de los cientos de repositorios espejo de CPAN.\nEn 2008, Perl 5 contin\u00faa siendo mantenido. Caracter\u00edsticas importantes y algunas construcciones esenciales han sido a\u00f1adidas, incluyendo soporte Unicode, hilos, un soporte importante para la programaci\u00f3n orientada a objetos y otras mejoras.", "subsections": [{"name": "Nombre", "text": "Perl se llam\u00f3 originalmente \"Pearl\". Larry Wall quer\u00eda darle al lenguaje un nombre corto con connotaciones positivas; asegura que mir\u00f3 (y rechaz\u00f3) todas las combinaciones de tres y cuatro letras del diccionario. Tambi\u00e9n consider\u00f3 nombrarlo como su esposa Gloria. Wall descubri\u00f3 antes del lanzamiento oficial que ya exist\u00eda un lenguaje de programaci\u00f3n llamado PEARL y cambi\u00f3 la ortograf\u00eda del nombre.\nEl nombre normalmente comienza con may\u00fascula (Perl) cuando se refiere al lenguaje y con min\u00fascula (perl) cuando se refiere al propio programa int\u00e9rprete debido a que los sistemas de ficheros Unix distinguen may\u00fasculas y min\u00fasculas. Antes del lanzamiento de la primera edici\u00f3n de Programming Perl era com\u00fan referirse al lenguaje como perl; Randal L. Schwartz, sin embargo, forz\u00f3 el nombre en may\u00fascula en el libro para que destacara mejor cuando fuera impreso. La distinci\u00f3n fue subsiguientemente adoptada por la comunidad.\nEl nombre es descrito ocasionalmente como \"PERL\" (por Practical Extraction and Report Language - Lenguaje Pr\u00e1ctico para la Extracci\u00f3n e Informe). Aunque esta expansi\u00f3n ha prevalecido en muchos manuales actuales, incluyendo la p\u00e1gina de manual de Perl, es un retroacr\u00f3nimo y oficialmente el nombre no quiere decir nada. La ortograf\u00eda de PERL en may\u00fasculas es por eso usada como jerga para detectar a individuos ajenos a la comunidad. Sin embargo, se han sugerido varios retroacr\u00f3nimos, incluyendo el c\u00f3mico Pathologically Eclectic Rubbish Lister (Contabilizador de Basura Patol\u00f3gicamente Ecl\u00e9ctico)."}, {"name": "El s\u00edmbolo del camello", "text": "Perl se simboliza generalmente por un camello de una sola joroba (camello ar\u00e1bigo o dromedario), que fue la imagen elegida por el editor O'Reilly para la cubierta de Programming Perl, que por consiguiente adquiri\u00f3 el nombre de El Libro del Camello.[4]\u200b O'Reilly es propietario de este s\u00edmbolo como marca registrada, pero dice que usa sus derechos legales solo para proteger la \"integridad e impacto de este s\u00edmbolo\".[7]\u200b\nO'Reilly permite el uso no comercial del s\u00edmbolo, y ofrece logos Programming Republic of Perl y botones Powered by Perl.\nDesde hace unos a\u00f1os, y para evitar este tipo de problemas con la licencia comercial, la Fundaci\u00f3n Perl elabor\u00f3 nuevos logotipos basados en una cebolla, a ra\u00edz de las conferencias anuales que Larry Wall ofrece con el t\u00edtulo: State of the Onion (\"Estado de la Cebolla\") Onion se pronuncia muy parecido a Union, por lo que suena parecido a State of the Union (\"Estado de la Uni\u00f3n\"), evento en el cual el presidente de los Estados Unidos informa a los ciudadanos del estado en que se encuentra su pa\u00eds."}]}, {"name": "Descripci\u00f3n", "text": "La p\u00e1gina de manual Unix perlintro(1) dice:", "subsections": [{"name": "Caracter\u00edsticas", "text": "La estructura completa de Perl deriva ampliamente del lenguaje C. Perl es un lenguaje imperativo, con variables, expresiones, asignaciones, bloques de c\u00f3digo delimitados por llaves, estructuras de control y subrutinas.\nPerl tambi\u00e9n toma caracter\u00edsticas de la programaci\u00f3n shell. Todas las variables son marcadas con un Sigilo precedente (Sigil, en ingl\u00e9s). Los sigilos identifican inequ\u00edvocamente los nombres de las variables, permitiendo a Perl tener una rica sintaxis. Notablemente, los sigilos permiten interpolar variables directamente dentro de las cadenas de caracteres (string). Como en los shell, Perl tiene muchas funciones integradas para tareas comunes y para acceder a los recursos del sistema.\nPerl toma las listas del Lisp, hash (memoria asociativa) del AWK y expresiones regulares del sed. Todo esto simplifica y facilita todas las formas del an\u00e1lisis sint\u00e1ctico, manejo de texto y tareas de gesti\u00f3n de datos.\nEn Perl 5, se a\u00f1adieron caracter\u00edsticas para soportar estructuras de datos complejas, funciones de primer orden (p. e. clausuras como valores) y un modelo de programaci\u00f3n orientada a objetos. Estos incluyen referencias, paquetes y una ejecuci\u00f3n de m\u00e9todos basada en clases y la introducci\u00f3n de variables de \u00e1mbito l\u00e9xico, que hizo m\u00e1s f\u00e1cil escribir c\u00f3digo robusto (junto con el pragma  strict). Una caracter\u00edstica principal introducida en Perl 5 fue la habilidad de empaquetar c\u00f3digo reutilizable como m\u00f3dulos. Larry Wall indic\u00f3 m\u00e1s adelante que \"la intenci\u00f3n del sistema de m\u00f3dulos de Perl 5 era apoyar el crecimiento de la cultura Perl en vez del n\u00facleo de Perl\".[8]\u200b\nTodas las versiones de Perl hacen el tipificado autom\u00e1tico de datos y la gesti\u00f3n de memoria. El int\u00e9rprete conoce el tipo y requerimientos de almacenamiento de cada objeto en el programa; reserva y libera espacio para ellos seg\u00fan sea necesario. Las conversiones legales de tipo se hacen de forma autom\u00e1tica en tiempo de ejecuci\u00f3n; las conversiones ilegales son consideradas errores fatales."}, {"name": "Dise\u00f1o", "text": "El dise\u00f1o de Perl puede ser entendido como una respuesta a tres amplias tendencias de la industria inform\u00e1tica: rebaja de los costes en el hardware, aumento de los costes laborales y las mejoras en la tecnolog\u00eda de compiladores. Anteriormente, muchos lenguajes de ordenador como Fortran y C, fueron dise\u00f1ados para hacer un uso eficiente de un hardware caro. En contraste, Perl es dise\u00f1ado para hacer un uso eficiente de los costosos programadores de ordenador.\nPerl tiene muchas caracter\u00edsticas que facilitan la tarea del programador a costa de unos requerimientos de CPU y memoria mayores. Estas incluyen gesti\u00f3n de memoria autom\u00e1tica; tipo de dato din\u00e1mico; strings, listas y hashes; expresiones regulares; introspecci\u00f3n y una funci\u00f3n eval().\nLarry Wall fue adiestrado como ling\u00fcista y el dise\u00f1o de Perl ha sido muy aleccionado con principios ling\u00fc\u00edsticos. Ejemplos incluyen la Codificaci\u00f3n Huffman (las construcciones m\u00e1s comunes deben ser las m\u00e1s cortas), buena distribuci\u00f3n (la informaci\u00f3n importante debe ir primero) y una larga colecci\u00f3n de primitivas del lenguaje. Perl favorece las construcciones del lenguaje, tan naturales, como para los humanos son la lectura y la escritura, incluso si eso hace m\u00e1s complicado al int\u00e9rprete Perl. \nLa sintaxis de Perl refleja la idea de que \"cosas que son diferentes deben parecer diferentes\".  Por ejemplo, escalares, arrays y hashes tienen diferente sigilo. \u00cdndices de array y claves hash usan diferentes clases de par\u00e9ntesis. Strings y expresiones regulares tienen diferentes delimitadores est\u00e1ndar. Esta aproximaci\u00f3n puede contrastarse con lenguajes como Lisp, donde la misma construcci\u00f3n S-expresi\u00f3n y sintaxis b\u00e1sica se usa para muchos y variados prop\u00f3sitos.\nPerl tiene caracter\u00edsticas que soportan una variedad de paradigmas de programaci\u00f3n, como la imperativa, funcional y la orientada a objetos. Al mismo tiempo, Perl no obliga a seguir ning\u00fan paradigma en particular, ni obliga al programador a elegir alguna de ellas. \nHay un amplio sentido de lo pr\u00e1ctico, tanto en el lenguaje Perl como en la comunidad y la cultura que lo rodean. El prefacio de Programming Perl comienza con, \"Perl es un lenguaje para tener tu trabajo terminado\". Una consecuencia de esto es que Perl no es un lenguaje ordenado. Incluye caracter\u00edsticas si la gente las usa, tolera excepciones a las reglas y emplea la heur\u00edstica para resolver ambig\u00fcedades sint\u00e1cticas. Debido a la naturaleza indulgente del compilador, a veces los errores pueden ser dif\u00edciles de encontrar. Hablando del variado comportamiento de las funciones internas en los contextos de lista y escalar, la p\u00e1gina de manual de perlfunc(1) dice \"En general, hacen lo que tu quieras, siempre que quieras la coherencia.\"\nPerl tiene varios lemas que transmiten aspectos de su dise\u00f1o y uso. Uno es There's more than one way to do it (Hay m\u00e1s de una forma de hacerlo) (TMTOWTDI, usualmente pronunciado 'Tim Toady'). Otros son \"Perl: la motosierra del ej\u00e9rcito Suizo de los lenguajes de programaci\u00f3n\" y \"L\u00edmites imprecisos\". Una meta prefijada de Perl es hacer las cosas f\u00e1ciles de forma f\u00e1cil y las tareas dif\u00edciles, posibles.  A Perl tambi\u00e9n se le ha llamado \"El esparadrapo de Internet\"."}, {"name": "Aplicaciones", "text": "Perl tiene muchas y variadas aplicaciones, gracias a la disponibilidad de muchos m\u00f3dulos est\u00e1ndares y de terceras partes.\nSe ha usado desde los primeros d\u00edas del Web para escribir guiones (scripts) CGI. Es una de las \"tres Pes\" (Perl, Python y PHP), que son los lenguajes m\u00e1s populares para la creaci\u00f3n de aplicaciones Web, y es un componente integral de la popular soluci\u00f3n LAMP para el desarrollo web. Grandes proyectos escritos en Perl son Slash, IMDb[9]\u200b y UseModWiki, un motor de Wiki. Muchos sitios web con alto tr\u00e1fico, como Amazon.com y Ticketmaster.com usan Perl extensamente.\nPerl se usa a menudo como un \"lenguaje pegamento\", ligando sistemas e interfaces que no fueron dise\u00f1ados espec\u00edficamente para interoperar; y para el \"escarbado de datos\", convirtiendo o procesando grandes cantidades de datos para tareas como por ejemplo crear informes. De hecho, estas fortalezas est\u00e1n \u00edntimamente unidas. Su combinaci\u00f3n hace a Perl una popular herramienta de prop\u00f3sito general para los administradores de sistemas, especialmente en programas peque\u00f1os que pueden ser escritos y ejecutados en una sola l\u00ednea de comandos.\nPerl es tambi\u00e9n ampliamente usado en finanzas y bioinform\u00e1tica, donde es apreciado por su desarrollo r\u00e1pido, tanto de aplicaciones como de despliegue, as\u00ed como la habilidad de manejar grandes vol\u00famenes de datos."}, {"name": "Implementaci\u00f3n", "text": "Perl est\u00e1 implementado como un int\u00e9rprete, escrito en C, junto con una gran colecci\u00f3n de m\u00f3dulos, escritos en Perl y C. La distribuci\u00f3n fuente tiene, en 2005, 12 MB cuando se empaqueta y comprime en un fichero tar. El int\u00e9rprete tiene 150.000 l\u00edneas de c\u00f3digo C y se compila en un ejecutable de 1 MB en las arquitecturas de hardware m\u00e1s t\u00edpicas. De forma alternativa, el int\u00e9rprete puede ser compilado como una biblioteca y ser embebida en otros programas. Hay cerca de 500 m\u00f3dulos en la distribuci\u00f3n, sumando 200.000 l\u00edneas de Perl y unas 350.000 l\u00edneas adicionales de c\u00f3digo C. Mucho del c\u00f3digo C en los m\u00f3dulos consiste en tablas de codificaci\u00f3n de caracteres.\nEl int\u00e9rprete tiene una arquitectura orientada a objetos. Todos los elementos del lenguaje Perl \u2014escalares, listas, hashes, referencias a c\u00f3digo, manejadores de archivo\u2014 est\u00e1n representados en el int\u00e9rprete como estructuras C. Las operaciones sobre estas estructuras est\u00e1n definidas como una numerosa colecci\u00f3n de macros, typedef y funciones; esto constituye la API C de Perl. La API Perl puede ser desconcertante para el no iniciado, pero sus puntos de entrada siguen un esquema de nombres coherente, que ayuda a los que quieran utilizarla.\nLa ejecuci\u00f3n de un programa Perl se puede dividir, generosamente, en dos fases: tiempo de compilaci\u00f3n y tiempo de ejecuci\u00f3n.[10]\u200b En tiempo de compilaci\u00f3n el int\u00e9rprete parsea el texto del programa en un \u00e1rbol sint\u00e1ctico. En tiempo de ejecuci\u00f3n, ejecuta el programa siguiendo el \u00e1rbol. El texto es parseado solo una vez y el \u00e1rbol sint\u00e1ctico es optimizado antes de ser ejecutado, para que la fase de ejecuci\u00f3n sea relativamente eficiente. Las optimizaciones del \u00e1rbol sint\u00e1ctico en tiempo de compilaci\u00f3n incluyen simplificaci\u00f3n de expresiones constantes, propagaci\u00f3n del contexto y optimizaci\u00f3n en trozos sueltos de c\u00f3digo. Sin embargo, las fases de compilaci\u00f3n y ejecuci\u00f3n pueden anidarse: un bloque BEGIN se ejecuta en tiempo de compilaci\u00f3n, mientras que una funci\u00f3n eval inicia una compilaci\u00f3n durante una ejecuci\u00f3n. Ambas operaciones est\u00e1n impl\u00edcitas en otras  -de forma notable, la cl\u00e1usula use que carga bibliotecas, conocidas en Perl como m\u00f3dulos, implica un bloque BEGIN.\nPerl es un lenguaje din\u00e1mico y tiene una gram\u00e1tica sensible al contexto que puede quedar afectada por el c\u00f3digo ejecutado durante una fase de ejecuci\u00f3n intermedia (Ver ejemplos.[11]\u200b). Por eso Perl no puede ser parseado mediante una aplicaci\u00f3n directa de analizadores sint\u00e1cticos/parseadores Lex/Yacc. En cambio, el int\u00e9rprete implementa su propio analizador l\u00e9xico, que coordinado con un parseador modificado GNU bison resuelve las ambig\u00fcedades del lenguaje. Se ha dicho que \"solo perl puede parsear Perl\", queriendo decir que solo el int\u00e9rprete Perl (perl) puede parsear el lenguaje Perl (Perl). La raz\u00f3n de esto se atestigua por las persistentes imperfecciones de otros programas que emprenden la tarea de parsear Perl, como los analizadores de c\u00f3digo y los auto-indentadores, que tienen que v\u00e9rselas no solo con las muchas formas de expresar inequ\u00edvocamente construcciones sint\u00e1cticas, sino tambi\u00e9n con el hecho de que tambi\u00e9n Perl no puede, en general, ser parseado sin antes ser ejecutado.\nEl mantenimiento del int\u00e9rprete Perl, a lo largo de los a\u00f1os, se ha vuelto cada vez m\u00e1s dif\u00edcil. El n\u00facleo ha estado en continuo desarrollo desde 1994. El c\u00f3digo ha sido optimizado en rendimiento a expensas de la simplicidad, claridad y unas interfaces internas m\u00e1s fuertes. Nuevas caracter\u00edsticas han sido a\u00f1adidas, manteniendo todav\u00eda, compatibilidad virtualmente completa hacia atr\u00e1s con las primeras versiones. El tama\u00f1o y la complejidad del int\u00e9rprete son una barrera para los desarrolladores que desean trabajar en \u00e9l.\nPerl es distribuido con unos 120.000 test funcionales. Estos se ejecutan como parte del proceso normal de construcci\u00f3n y comprueban extensamente al int\u00e9rprete y a sus m\u00f3dulos principales. Los desarrolladores Perl conf\u00edan en los test funcionales para asegurarse que los cambios en el int\u00e9rprete no introducen errores; rec\u00edprocamente, los usuarios Perl que vean al int\u00e9rprete pasar los test funcionales en su sistema pueden tener un alto grado de confianza de que est\u00e1 funcionando adecuadamente.\nNo hay una especificaci\u00f3n o est\u00e1ndar escrito para el lenguaje Perl y no hay planes de crear uno para la versi\u00f3n actual de Perl. Siempre ha existido solo una implementaci\u00f3n del int\u00e9rprete. Este int\u00e9rprete, junto con los test funcionales, forman la especificaci\u00f3n de facto del lenguaje."}, {"name": "Disponibilidad", "text": "Perl es software libre y est\u00e1 licenciado bajo la Licencia Art\u00edstica y la GNU General Public License. Existen distribuciones disponibles para la mayor\u00eda de sistemas operativos. Est\u00e1 especialmente extendido en Unix y en sistemas similares, pero ha sido portado a las plataformas m\u00e1s modernas (y otras m\u00e1s obsoletas). Con solo seis excepciones confirmadas, puede ser compilado desde el c\u00f3digo fuente en todos los Unix, compatibles POSIX o cualquier otra plataforma Unix compatible. Sin embargo, esto no es normalmente necesario, porque Perl est\u00e1 incluido por defecto en la instalaci\u00f3n de los sistemas operativos m\u00e1s populares.[12]\u200b\nDebido a los cambios especiales necesarios para soportar al Mac OS Classic, existe una adaptaci\u00f3n especial llamada MacPerl.[13]\u200b\nGNU/Linux\nPerl est\u00e1 preinstalado en las distribuciones m\u00e1s populares de GNU/Linux incluyendo Gentoo, Slackware, Mandriva, Debian, RedHat y SUSE.\nWindows\nLos usuarios de Microsoft Windows normalmente instalan una distribuci\u00f3n binaria de Perl.[14]\u200b Compilar Perl desde el c\u00f3digo fuente bajo Windows es posible, pero la mayor\u00eda de las instalaciones no disponen del necesario compilador de C.\nLa capa de emulaci\u00f3n Cygwin proporciona otra forma de correr Perl bajo Windows. Cygwin proporciona en entorno parecido al Unix en Windows que incluye gcc, por lo que compilar Perl desde el c\u00f3digo es una opci\u00f3n accesible para los usuarios que prefieren esta opci\u00f3n.\nEn junio de 2006, win32.perl.org fue lanzado por Adam Kennedy en nombre de la Fundaci\u00f3n Perl. Es una comunidad web \"para todo lo relacionado con Windows y Perl\".[15]\u200b"}]}, {"name": "Estructura del lenguaje", "text": "", "subsections": [{"name": "Programa ejemplo", "text": "En Perl, el programa can\u00f3nico \"Hola mundo\" es:\n#!/usr/bin/perl\nprint\n \n\"\u00a1Hola mundo!\\n\"\n;\nLa primera l\u00ednea contiene el shebang (par de caracteres que identifica el texto que sigue), que le indica al sistema operativo d\u00f3nde encontrar el int\u00e9rprete de Perl. La segunda imprime el string \u00a1Hola mundo! y un car\u00e1cter de nueva l\u00ednea.\nEl shebang es la forma normal para invocar al int\u00e9rprete en los sistemas Unix. Los sistemas Windows pueden seguir utiliz\u00e1ndolo o pueden asociar la extensi\u00f3n de archivo .pl con el int\u00e9rprete Perl. Algunos editores de texto tambi\u00e9n usan la l\u00ednea shebang como una pista sobre el modo de trabajo en que deben operar. Si el programa es ejecutado por perl y no invocado por el shell, la l\u00ednea que empieza por el shebang es parseada para interpretar las opciones. En otro caso, es ignorada. Para ver los detalles de esto, consultar la p\u00e1gina de manual perlrun."}, {"name": "Tipos de datos", "text": "Perl tiene tres tipos de datos: escalares, \nlistas y hashes:\nUn escalar es un solo valor; puede ser un n\u00famero, un string (cadena de caracteres) o una referencia\nUna lista es una colecci\u00f3n ordenada de escalares (una variable que almacena una lista se llama array)\nUn hash, o memoria asociativa, es un mapeo de strings a escalares; los strings se llaman claves y los escalares valores.\nTodas las variables est\u00e1n precedidas por un sigilo, que identifica el tipo de dato que es accedido (no el tipo de dato de la misma variable). Se puede usar el mismo nombre para variables de diferentes tipos, sin que tengan conflictos.\n$var\n   \n# un escalar\n@var\n# un array\n%var\n# un hash\nLos n\u00fameros se escriben de la forma usual; los strings est\u00e1n rodeados entre comillas de varias clases.\n$n\n      \n=\n42\n$nombre\n\"juan\"\n$color\n  \n'rojo'\nPerl convertir\u00e1 los strings en n\u00fameros y viceversa dependiendo del contexto en que sean usados. En el siguiente ejemplo los strings $n y $m son tratados como n\u00fameros cuando son argumentos del operador suma. Este c\u00f3digo imprime el n\u00famero '5', desechando cualquier informaci\u00f3n no num\u00e9rica de la operaci\u00f3n y dejando los valores de las variables intactos. (El operador de concatenaci\u00f3n no es +, sino ..)\n     \n\"3 manzanas\"\n$m\n\"2 naranjas\"\n+\nPerl tambi\u00e9n tiene un contexto booleano que utiliza en la evaluaci\u00f3n de declaraciones condicionales. Los siguientes valores en Perl eval\u00faan todos como falso:\n$falso\n0\n# el n\u00famero cero\n0.0\n# el n\u00famero cero como flotante\n'0'\n# el string cero\n\"\"\n    \n# el string vac\u00edo\nundef\n# el valor devuelto por undef\nTodos los dem\u00e1s valores se eval\u00faan a verdadero. Esto incluye el curioso string auto-descriptivo \"0 pero verdadero\", que de hecho es 0 como n\u00famero, pero verdadero como booleano. (Cualquier string no num\u00e9rico tambi\u00e9n tendr\u00e1 esta propiedad, pero este string en particular es ignorado por Perl en contextos num\u00e9ricos).  Las expresiones booleanas evaluadas tambi\u00e9n devuelven valores escalares. Aunque la documentaci\u00f3n no indica qu\u00e9 valor particular se devuelve como verdadero o falso (y por lo tanto no fiable), muchos operadores booleanos devuelven 1 por verdadero y el string vac\u00edo para falso (que eval\u00faa a cero en contexto num\u00e9rico). La funci\u00f3n defined() le dice si la variable tiene alg\u00fan valor. En el ejemplo anterior defined($falso) ser\u00e1 verdadero con cada uno de los valores anteriores, excepto undef.\nSi, espec\u00edficamente, quiere asegurarse de tener un resultado 1/0 (como en C), necesita realizar el c\u00e1lculo siguiente:\nmy\n$resultado_real\n$resultado_booleano\n?\n1\n:\nUna lista se define listando sus elementos, separados por comas y rodeados por par\u00e9ntesis donde as\u00ed sea requerido por la precedencia de los operadores.\n@puntuaciones\n(\n32\n,\n45\n16\n5\n);\nUn hash puede ser inicializado desde una lista de pares clave/valor.\n%favorito\njoe\n=>\nsam\n'azul'\nLos elementos individuales de una lista son accedidos utilizando un \u00edndice num\u00e9rico, dentro de corchetes. Valores individuales en un hash son accedidos utilizando la correspondiente clave, dentro de llaves. El sigilo $ identifica que el elemento accedido es un escalar.\n$puntuaciones\n[\n2\n]\n# un elemento de @puntuaciones\n$favorito\n{\n}\n# un valor de %favorito\nM\u00faltiples elementos pueden ser accedidos usando en su lugar el sigilo @ (identificando el resultado como una lista).\n3\n# tres elementos de @puntuaciones\n@favorito\n'joe'\n'sam'\n# dos valores de %favorito\nEl n\u00famero de elementos en un array puede ser obtenido evaluando el array en contexto escalar o con la ayuda del sigilo $#. Este \u00faltimo da el \u00edndice del \u00faltimo elemento dentro del array, no el n\u00famero de elementos.\n$numero\n@amigos\n$#amigos\n# el \u00edndice del \u00faltimo elemento en @amigos\n# normalmente el n\u00famero de elementos en @amigos,\n               \n# que es uno m\u00e1s que $#amigos porque el primer elemento tiene el \u00edndice 0, no 1\nHay unas pocas funciones que operan sobre hashes enteros.\n@nombres_de_clientes\nkeys\n%direcciones\n# guarda en @nombres_de_clientes  todas las claves  de %direcciones\n@direcciones_de_email\nvalues\n# guarda en @direcciones_de_email todos los valores de %direcciones"}, {"name": "Estructuras de control", "text": "Art\u00edculo principal:\nPerl tiene varias clases de estructuras de control.\nTiene estructuras de control orientado al bloque, similar a los de los lenguajes de programaci\u00f3n C y Java. Las condiciones est\u00e1n rodeadas por par\u00e9ntesis y los bloques subordinados por llaves:\n''\netiqueta\nwhile\ncondici\u00f3n\n)\n...\ncontinue\nfor\nexpresi\u00f3n\ninicial\ncondicional\nincremental\nforeach\nvar\nlista\nif\nelse\nelsif\nCuando se controla a una sola declaraci\u00f3n, los modificadores de declaraci\u00f3n proporcionan una sintaxis m\u00e1s ligera:\ndeclaraci\u00f3n\nunless\nuntil\nLos operadores l\u00f3gicos cortocircuito son normalmente usados para controlar el flujo del programa a nivel de expresi\u00f3n:\nexpr\nand\nor\nLas palabras clave de control de flujo next, last, return y redo son expresiones, por lo que pueden ser usadas con los operadores cortocircuito.\nPerl tambi\u00e9n tiene dos construcciones impl\u00edcitas para bucles:\nresultados\ngrep\nmap\ngrep devuelve todos los elementos de lista en que el bloque subordinado eval\u00faa a verdadero. map eval\u00faa el bloque subordinado por cada elemento de lista y devuelve una lista de los valores resultantes. Estas construcciones permiten un estilo simple de programaci\u00f3n funcional.\nLa declaraci\u00f3n switch (llamada \"given\"/\"when\") existe desde la versi\u00f3n 5.10:\nuse\n5.10.1\n# o posterior\ngiven\n$variable\nwhen\ndefault\nPerl incluye una declaraci\u00f3n goto etiqueta, pero es usada raramente. Las situaciones donde en otros lenguajes se utiliza goto no ocurren tan a menudo en Perl debido a sus amplias opciones de control de flujo.\nExiste tambi\u00e9n una declaraci\u00f3n goto &sub que realiza una llamada 'final'. Termina la subrutina actual e inmediatamente llama a la sub especificada. Esto se usa en situaciones donde una nueva subrutina puede realizar una gesti\u00f3n de la pila m\u00e1s eficiente que el propio Perl (porque t\u00edpicamente no se requiere ning\u00fan cambio en la pila actual), y en una recursi\u00f3n muy profunda este tipo de llamadas puede tener un sustancial impacto positivo en el funcionamiento porque evita la sobrecarga de la gesti\u00f3n contexto/pila en el momento de retornar."}, {"name": "Subrutinas", "text": "Las subrutinas se definen con la palabra clave sub e invocadas simplemente nombr\u00e1ndolas. Si la subrutina en cuesti\u00f3n no ha sido todav\u00eda declarada, es necesario, para el proceso de an\u00e1lisis sint\u00e1ctico, poner los par\u00e9ntesis.\nfoo\n();\n           \n# par\u00e9ntesis necesarios aqu\u00ed...\nsub\nfoo\n             \n#... pero no aqu\u00ed\nUna lista de argumentos pueden ser indicados despu\u00e9s del nombre de la subrutina. Los argumentos pueden ser escalares, listas o hashes.\n$x\n@y\n%z\nLos par\u00e1metros de una subrutina no necesitan ser declarados, ni en n\u00famero ni en tipo; de hecho, pueden variar en cada llamada. Los arrays son expandidos a sus elementos, los hashes a una lista de pares clave/valor y todo el conjunto es pasado a la subrutina como una indiferenciada lista de escalares.\nCualesquiera de los argumentos pasados est\u00e1n disponibles para la subrutina en el array especial @_. Los elementos de @_ son asociados a los argumentos actuales; cambiando un elemento de @_ cambia el argumento correspondiente.\nLos elementos de @_ pueden ser accedidos con los sub\u00edndices de la forma normal.\n$_\n],\nSin embargo, el c\u00f3digo resultante puede ser dif\u00edcil de leer y los par\u00e1metros tener una sem\u00e1ntica de pase por referencia, que puede resultar algo no deseable.\nUn modismo com\u00fan es asignar @_ a una lista de variables con nombres.\n$y\n$z\n@_\nEsto afecta tanto a la mnem\u00f3nica de los nombres de los par\u00e1metros como a la sem\u00e1ntica de los valores pasados por valor. La palabra clave my indica que las siguientes variables est\u00e1n l\u00e9xicamente embebidas en el bloque que las contienen.\nOtro modismo es sacar los par\u00e1metros de @_. Esto es muy com\u00fan cuando la subrutina toma un solo argumento.\nshift\n# Si no se dice nada, nos referimos a @_\nLas subrutinas pueden devolver valores.\nreturn\nSi la subrutina no sale v\u00eda declaraci\u00f3n return, entonces devuelve la \u00faltima expresi\u00f3n evaluada en el cuerpo de la subrutina. Arrays y hashes en el valor de retorno son expandidos a una lista de escalares, igual que si fueran argumentos de una funci\u00f3n.\nLa expresi\u00f3n devuelta es evaluada en el contexto de la llamada de la subrutina; esto puede sorprender al desprevenido.\nlista\n4\n6\narray\n@x\n# devuelve 6 - \u00faltimo elemento de la lista\narray\n# devuelve 3 - n\u00famero de elementos de la lista\n# devuelve (4, 5, 6)\nUna subrutina puede descubrir su contexto de llamada con la funci\u00f3n wantarray.\ncualquiera\nwantarray\n\"Naranjas\"\ncualquiera\n# devuelve \"Naranjas\"\n# devuelve (1, 2)"}, {"name": "Expresiones regulares", "text": "El lenguaje Perl incluye una sintaxis especializada para escribir expresiones regulares y el int\u00e9rprete contiene un motor para emparejar strings con expresiones regulares. El motor de expresiones regulares usa un algoritmo de Vuelta Atr\u00e1s (backtracking), extendiendo sus capacidades desde el simple emparejamiento de patrones simples con la captura y sustituci\u00f3n de strings. El motor de expresiones regulares se deriva de regex, escrito por Henry Spencer.\nLa sintaxis de expresiones regulares fue originalmente tomada de las expresiones regulares de Unix Versi\u00f3n 8. Sin embargo, se diferenci\u00f3 ya antes del primer lanzamiento de Perl y desde entonces ha ido incorporando muchas m\u00e1s caracter\u00edsticas. Otros lenguajes y aplicaciones est\u00e1n adoptando las expresiones regulares de Perl (PCRE) en vez de las expresiones regulares POSIX, incluyendo PHP, Ruby, Java y el Servidor HTTP Apache.\nEl operador m// (empareja) permite comprobar un emparejamiento por medio de una expresi\u00f3n regular. (Para abreviar, el precedente m puede ser omitido.) En el caso m\u00e1s simple, una expresi\u00f3n como:\n=~\nm/abc/\neval\u00faa a verdadero si y solo si el string $x empareja con la expresi\u00f3n regular abc.\nPartes de la expresi\u00f3n regular pueden ser incluidas entre par\u00e9ntesis: las partes correspondientes de un string emparejado son capturadas. Los strings capturados son asignados de forma secuencial a las variables internas $1, $2, $3,... y una lista de strings capturados se devuelve como valor del emparejamiento.\nm/a(.)c/\n# captura el car\u00e1cter entre 'a' y 'c' y lo guarda en $1\nEl operador s/// (sustituci\u00f3n) especifica una operaci\u00f3n de b\u00fasqueda y reemplazo:\ns/abc/aBc/\n# Convierte la b en may\u00fascula\nLas expresiones regulares en Perl pueden tomar unos modificadores. Son sufijos de una sola letra que modifican el significado de la expresi\u00f3n:\nm/abc/i\n# emparejamiento independientemente de si est\u00e1n en may\u00fascula o min\u00fascula\ns/abc/aBc/g\n# b\u00fasqueda y reemplazo global (a lo largo de todo el ''string'')\nLas expresiones regulares pueden ser densas y cr\u00edpticas. Esto es porque la sintaxis de las expresiones regulares es extremadamente compacta, generalmente usando caracteres sueltos o pares de caracteres que representan sus operaciones. Perl alivia un poco este problema con el modificador /x que permite a los programadores poner espacio en blanco y comentarios dentro de las expresiones regulares:\nm/a           # empareja una 'a'\n        .           # empareja cualquier car\u00e1cter\n        c           # empareja una 'c'\n      /x\nUn uso com\u00fan de las expresiones regulares es el de especificar delimitadores de campos al operador split:\n@palabras\nsplit\nm/,/\n$l\u00ednea\n# divide la $l\u00ednea de valores separados por comas\nEl operador split complementa la captura de string. La captura de string devuelve las partes de un string que emparejan con una expresi\u00f3n regular; split devuelve las partes que no emparejan."}, {"name": "Interfaz con bases de datos", "text": "Perl est\u00e1 ampliamente favorecido para las aplicaciones de bases de datos. Sus facilidades de manejo de texto son buenas para generar consultas SQL; arrays, hashes y la gesti\u00f3n de memoria autom\u00e1tica hace f\u00e1cil recoger y procesar los datos devueltos.\nEn las primeras versiones de Perl, las interfaces de bases de datos fueron creadas enlazando el int\u00e9rprete con una biblioteca de base de datos desde el lado del cliente. Esto era algo torpe; un problema en particular fue que el ejecutable perl resultante estaba restringido a usar solo una interfaz de base de datos, la que hab\u00eda sido enlazada. Tambi\u00e9n, reenlazar el int\u00e9rprete era lo suficientemente dificultoso que solo fue realizado para algunas de las m\u00e1s famosas e importantes bases de datos.\nEn Perl 5, las interfaces de bases de datos est\u00e1n implementadas por el m\u00f3dulo Perl DBI. El m\u00f3dulo DBI presenta una \u00fanica interfaz a las aplicaciones Perl, independiente de las bases de datos, mientras que los m\u00f3dulos DBD:: (Controlador de base de datos) manejan los detalles de acceso a unas 50 bases de datos diferentes. Existen controladores DBD:: para la mayor parte de las bases de datos ANSI SQL."}]}, {"name": "Comparativa de funcionamiento", "text": "El \"Computer Language Shootout Benchmarks\" compara el funcionamiento de implementaciones de problemas de programaci\u00f3n t\u00edpicos, en diversos lenguajes. Sus implementaciones Perl normalmente toman m\u00e1s memoria que las implementaciones en otros lenguajes, y esto var\u00eda los resultados de velocidad. Las prestaciones de Perl son similares a las de otros lenguajes como Python, PHP o Ruby, pero m\u00e1s lento que la mayor parte de lenguajes compilados.\nPerl puede ser m\u00e1s lento que otros lenguajes haciendo lo mismo porque tiene que compilar el c\u00f3digo fuente cada vez que corre el programa. En \"A Timely Start\", Jean-Louis Leroy encontr\u00f3 que sus scripts en Perl tardaban mucho m\u00e1s tiempo en correr que lo que \u00e9l esperaba porque el int\u00e9rprete perl perd\u00eda la mayor parte del tiempo buscando y compilando los m\u00f3dulos. Como Perl no puede salvar su compilaci\u00f3n intermedia como lo hacen Java, Python y Ruby, los scripts Perl conllevan esta sobrecarga en cada ejecuci\u00f3n. La sobrecarga no es un problema cuando la fase de ejecuci\u00f3n es muy larga, pero puede sesgar significativamente en tiempos de ejecuci\u00f3n muy cortos, como se encuentra a menudo en los benchmarks. Una vez que perl inicia la fase de ejecuci\u00f3n, sin embargo, puede ser muy r\u00e1pido y t\u00edpicamente supera a otros lenguajes din\u00e1micos. Tecnolog\u00edas como mod perl superan esto guardando el programa compilado en memoria entre ejecuciones, o Class::Autouse que retrasa la compilaci\u00f3n de partes del programa hasta que son necesarias.", "subsections": [{"name": "Optimizando", "text": "Nicholas Clark, un desarrollador principal de Perl, diserta sobre algunas mejoras en el dise\u00f1o con Perl y otras soluciones en \"When perl is not quite fast enough\".  Las rutinas m\u00e1s cr\u00edticas de un programa Perl pueden escribirse en C o incluso en lenguaje ensamblador con XS o Inline.\nOptimizar Perl puede requerir un conocimiento \u00edntimo de su funcionamiento en lugar de la destreza con el lenguaje y su sintaxis, significando que el problema est\u00e1 con la implementaci\u00f3n de Perl en lugar de con el lenguaje mismo. Raku, la siguiente versi\u00f3n, tomar\u00e1 algunas de estas ideas como lecciones, que otros lenguajes ya han aprendido."}]}, {"name": "Futuro", "text": "En el a\u00f1o 2000, en la conferencia Perl, Jon Orwant hizo una petici\u00f3n para una nueva versi\u00f3n del lenguaje.[16]\u200b Esto condujo a una decisi\u00f3n para comenzar el trabajo del redise\u00f1o del lenguaje, que se llamar\u00eda Perl 6. Se pidieron propuestas a la comunidad Perl para las nuevas caracter\u00edsticas del lenguaje, y se recibieron m\u00e1s de 300 RFC (del ingl\u00e9s Request For Comments, petici\u00f3n de comentarios).\nLarry Wall estuvo los siguientes a\u00f1os digiriendo los RFC y sintetiz\u00e1ndolos en un entorno de trabajo coherente para Perl 6. Present\u00f3 su dise\u00f1o de Perl 6 en una serie de documentos llamados Apocalipsis, que se numeran para corresponderse con los cap\u00edtulos de Programming Perl. La actual, inacabada especificaci\u00f3n de Perl 6, est\u00e1 resumida en unos documentos de dise\u00f1o llamados Sinopsis, que est\u00e1n numerados para corresponder a los Apocalipsis.\nPerl 6 no tiene la intenci\u00f3n de ser compatible para atr\u00e1s, aunque existir\u00e1 un modo de compatibilidad.\nEn 2001 se decidi\u00f3 que Perl 6 corriese en una m\u00e1quina virtual llamada Parrot. Esto quiere decir que otros lenguajes que usen Parrot podr\u00e1n ganar acceso nativo a CPAN y permitir\u00e1 alg\u00fan cierto nivel de desarrollo cruzado.\nEn 2005 Audrey Tang cre\u00f3 el proyecto pugs, una implementaci\u00f3n de Perl 6 en Haskell. Fue y es una plataforma de testeo del lenguaje Perl 6 (separado del desarrollo actual de la implementaci\u00f3n) permitiendo a los dise\u00f1adores explorar. El proyecto pugs engendr\u00f3 una activa comunidad Perl/Haskell centrada alrededor del canal irc #perl6 en Freenode.\nUn cierto n\u00famero de caracter\u00edsticas en el lenguaje Perl 6 muestran una similitud con las de Haskell y Perl 6 ha sido acogido por la comunidad Haskell como un potencial lenguaje de scripting.\nEn el 2006, Perl 6, Parrot y pugs siguen estando bajo desarrollo y un nuevo m\u00f3dulo para Perl 5 llamado v6 permite a una parte del c\u00f3digo Perl 6 correr directamente sobre Perl 5.\nEn octubre de 2019, ante la evidencia de que Perl 6 es un lenguaje muy diferente de Perl 5, y para que no se generara una confusi\u00f3n entre los dos lenguajes, se decidi\u00f3 renombrarlo a Raku.", "subsections": []}, {"name": "Diversi\u00f3n con Perl", "text": "Como en C, las competiciones de c\u00f3digo ofuscado son un rasgo popular de la cultura Perl. El Obfuscated Perl contest homenajea la virtud de la flexibilidad sint\u00e1ctica de Perl. El programa siguiente imprime el texto \"Just another Perl / Unix hacker\", usando 32 procesos en paralelo coordinados con pipes. La explicaci\u00f3n completa est\u00e1 disponible en el sitio web del autor.\n@P\n//\n\".URRUU\\c8R\"\n@d\n\"\\nrekcah xinU / lreP rehtona tsuJ\"\np\n@p\n\"r$p\"\n\"u$p\"\nP\npipe\n++\n$p\n;(\n$q\n*=\n+=\n$f\n=!\nfork\n$P\n^\nord\n})\n&\n];\n/ ^$P/ix\n$P:close$_\n%p\np\n/^[P.]/\n&&\nclose\nwait\n$?\n/^r/\n<$_>\n$d\nsleep\nrand\n/\\S/\nDe forma similar al c\u00f3digo ofuscado pero con un prop\u00f3sito diferente, \"Poes\u00eda Perl\" es la pr\u00e1ctica de escribir poemas que puedan ser compilados como c\u00f3digo legal de Perl (aunque generalmente sin sentido). Esta afici\u00f3n es m\u00e1s o menos \u00fanica en Perl debido al gran n\u00famero de palabras normales del Ingl\u00e9s que el lenguaje utiliza. Los nuevos poemas se publican de forma regular en el sitio Perl Monks, en la secci\u00f3n Poes\u00eda Perl. Parte del saber de Perl est\u00e1 en Black Perl, un ejemplo infame de la po\u00e9tica de Perl.\nOtro pasatiempo es \"Perl Golf\". Como con el deporte real, la meta es reducir el n\u00famero de golpes necesarios para completar un objetivo, pero aqu\u00ed, los \"golpes\" se refieren a los pulsaciones de teclado en vez de a los recorridos en un club de golf. Se propone una tarea, como \"escanear un string de entrada y devolver el pal\u00edndromo m\u00e1s grande que contenga\" y los participantes intentan batir a sus oponentes escribiendo soluciones que requieran cada vez menos caracteres de c\u00f3digo fuente Perl.\nOtra tradici\u00f3n entre los hacker Perl es escribir JAPH, que es una especie de peque\u00f1os programas ofuscados que imprimen la frase \"Just another Perl hacker,\". El \"can\u00f3nico\" JAPH incluye la coma al final, aunque a menudo se omite, y otras muchas variantes que se han creado (ejemplo,[17]\u200b que imprime \"Just Another Perl Pirate!\").\nUn m\u00f3dulo Perl interesante es Lingua::Romana::Perligata (en CPAN). Este m\u00f3dulo traduce el c\u00f3digo fuente de un script escrito en Lat\u00edn a Perl, permitiendo al programador escribir programas ejecutables en Lat\u00edn.\nLa comunidad Perl ha reservado el espacio de nombres \"Acme\" para los m\u00f3dulos que sean divertidos o experimentales.  Algunos de los m\u00f3dulos Acme est\u00e1n implementados de maneras muy entretenidas. Algunos ejemplos:\nAcme::Bleach, uno de los primeros m\u00f3dulos en Acme::, permite al c\u00f3digo fuente de un programa ser \"blanqueado\" (es decir, todos los caracteres son reemplazados por el espacio en blanco) y seguir funcionando.  Es un ejemplo de un filtro de c\u00f3digo fuente.  Hay tambi\u00e9n un cierto n\u00famero de otros filtros de fuente en el espacio de nombres Acme.\nAcme::Hello simplifica el proceso de escribir un programa \"Hello, World!\"\nAcme::Currency permite cambiar el prefijo \"$\" de las variables escalares por otro car\u00e1cter (por defecto usa el euro \"\u20ac\")\nAcme::ProgressBar es, completamente hecho a prop\u00f3sito, una horrible e ineficiente forma de indicar el progreso de una tarea\nAcme::VerySign satiriza el largamente criticado servicio Site Finder de VeriSign\nAcme::Don't implementa el opuesto l\u00f3gico de la palabra clave do \u2014don't\u2014, que no ejecuta el bloque de c\u00f3digo subordinado.", "subsections": [{"name": "Enlaces relacionados", "text": "Humor Perl en Wikibooks\nLingua::Romana::Perligata - \u00a1Escribe Perl en Lat\u00edn!\nUn tutorial sobre Perligata\nTest de Pureza Perl"}]}, {"name": "Comunidad Perl", "text": "La comunidad Perl est\u00e1 constituida por grupos que a su vez conforman Perl Mongers.[18]\u200b\nEn Espa\u00f1a hay tres grupos:\nBarcelona.pm (persona de contacto: \u00c1lex Muntada)\nMadrid.pm (persona de contacto: Diego Kuperman)\nGranada.pm[19]\u200b (persona de contacto: Juan Juli\u00e1n Merelo Guerv\u00f3s\nEn Am\u00e9rica Latina hay 17 grupos distribuidos entre los siguientes pa\u00edses: Argentina[20]\u200b, Brasil[21]\u200b, Chile[22]\u200b, Ecuador[23]\u200b, Paraguay[24]\u200b y \nPer\u00fa[25]\u200b", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": " Portal:Software libre. Contenido relacionado con Software libre.\nLa Fundaci\u00f3n Perl (en la Wikipedia en ingl\u00e9s)\nPOE: Entorno Objeto de Perl (en la Wikipedia en ingl\u00e9s)\nPerl Data Language (en la Wikipedia en ingl\u00e9s)\nherramienta de documentaci\u00f3n para Perl (en la Wikipedia en ingl\u00e9s)\nJust another Perl hacker (en la Wikipedia en ingl\u00e9s)\nObfuscated Perl contest (en la Wikipedia en ingl\u00e9s)\nPerl Mongers (en la Wikipedia en ingl\u00e9s)\nPerlScript (en la Wikipedia en ingl\u00e9s)\nComparison of programming languages (en la Wikipedia en ingl\u00e9s)\nProgramming Perl (en la Wikipedia en ingl\u00e9s)\nLearning Perl (en la Wikipedia en ingl\u00e9s)\nPerl Cookbook (en la Wikipedia en ingl\u00e9s)", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abPerl 5.34.3, Perl 5.36.3 and Perl 5.38.2 are now available\u00bb. www.nntp.perl.org. Consultado el 5 de diciembre de 2023.\u00a0\n\u2191 \u00abPerl 5.34.3, Perl 5.36.3 and Perl 5.38.2 are now available\u00bb. www.nntp.perl.org. Consultado el 5 de diciembre de 2023.\u00a0\n\u2191 \u00abRelease announcement for perl v5.39.10\u00bb. perl.org. Consultado el 27 de abril de 2024.\u00a0\n\u2191 a b \u00abLarry Wall\u00bb. Archivado desde el original el 15 de agosto de 2006. Consultado el 20 de agosto de 2006.\u00a0 (ingl\u00e9s)\n\u2191 \u00abperlhist - the Perl history records\u00bb. www.cpan.org. Consultado el 21 de julio de 2020.\u00a0\n\u2191 \u00abPerl Source\u00bb. cpan.org. Consultado el 26 de noviembre de 2023.\u00a0\n\u2191 \u00abPerl - O'Reilly Media\u00bb.\u00a0\n\u2191 Usenet post, May 10th 1997, with ID 199705101952.MAA00756@wall.org.\n\u2191 \u00abWhat software/hardware are you using to run the site?\u00bb.\u00a0\n\u2191 Una descripci\u00f3n del int\u00e9rprete Perl 5 se puede encontrar en Programming Perl, 3rd Ed., cap\u00edtulo 18 (ingl\u00e9s)\n\u2191 \u00abOn Parsing Perl\u00bb.\u00a0\n\u2191 Hietaniemi, Jarkko (1998).  CPAN.org, ed. \u00abPerl Ports (Binary Distributions)\u00bb.\u00a0\n\u2191 Prime Time Freeware, ed. (1997). \u00abThe MacPerl Pages\u00bb. Archivado desde el original el 18 de enero de 2006.\u00a0\n\u2191 Win32 Perl Wiki (ed.). \u00abWin32 Distributions\u00bb.\u00a0\n\u2191 Kennedy, Adam (2006). \u00abWin32 Perl Wiki\u00bb.\u00a0\n\u2191 Transcripci\u00f3n de la charla de Larry. Anotada el 28 de septiembre de 2006. (ingl\u00e9s)\n\u2191 \u00abAharrr!\u00bb.\u00a0\n\u2191 \u00abPerl Mongers\u00bb. Consultado el 14 de marzo de 2016.\u00a0\n\u2191 \u00abGranada Perl Mongers\u00bb. Archivado desde el original el 9 de agosto de 2018. Consultado el 14 de marzo de 2016.\u00a0\n\u2191 \u00abArgentina Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abBrazil Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abChile Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abEcuador Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abParaguay Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0\n\u2191 \u00abPeru Perl Mongers\u00bb. Archivado desde el original el 26 de julio de 2021. Consultado el 19 de marzo de 2023.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": " Wikimedia Commons alberga una categor\u00eda multimedia sobre Perl.\n Wikilibros alberga un libro o manual sobre Programaci\u00f3n en Perl.\nPerl.org \u2013 El directorio Perl\nPerl.com \u2013 Perl en O'Reilly Network\nPerldoc at Perl.org \u2013 documentaci\u00f3n en l\u00ednea sobre Perl\nDocumentaci\u00f3n Perl en espa\u00f1ol Proyecto de traducci\u00f3n de las p\u00e1ginas del manual de Perl a espa\u00f1ol.\nDesarrollo de Perl 5 y Perl 6 Archivado el 7 de febrero de 2006 en Wayback Machine.\nParrot m\u00e1quina virtual\nThe CPAN \u2013 Comprehensive Perl Archive Network, distribuci\u00f3n fuente de Perl\nActiveState ActivePerl \u2013 Perl para Microsoft Windows y otras plataformas\nIndigoPerl \u2013 otra distribuci\u00f3n de Perl para Microsoft Windows\nCygwin tambi\u00e9n distribuye Perl en Windows\nStrawberry Perl - una implementaci\u00f3n open-source para Windows.\nsitios web sobre Perl en el Open Directory Projec", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pip_(administrador_de_paquetes)", "title": "Pip (administrador de paquetes)", "summary": "pip es un sistema de gesti\u00f3n de paquetes utilizado para instalar y administrar paquetes de software escritos en Python. Muchos paquetes pueden ser encontrados en el Python Package Index (PyPI). Python 2.7.9 y posteriores (en la serie Python2), Python 3.4 y posteriores incluyen pip (pip3 para Python3) por defecto.\npip es un acr\u00f3nimo recursivo que se puede interpretar como Pip Instalador de Paquetes o Pip Instalador de Python.[1]\u200b", "sections": [{"name": "Interfaz l\u00ednea de comando", "text": "Una ventaja importante de pip es la facilidad de su interfaz de l\u00ednea de comandos, el cual permite instalar paquetes de software de Python f\u00e1cilmente desde solo una orden:\n \nLos usuarios tambi\u00e9n pueden f\u00e1cilmente desinstalar alg\u00fan paquete:\nOtra caracter\u00edstica particular de pip es que permite gestionar listas de paquetes y sus n\u00fameros de versi\u00f3n correspondientes a trav\u00e9s de un archivo de requisitos. Esto nos permite una recreaci\u00f3n eficaz de un conjunto de paquetes en un entorno separado (p. ej. otro ordenador) o entorno virtual. Esto se puede conseguir con un archivo correctamente formateado requisitos.txt y la siguiente orden:\nCon pip es posible instalar un paquete para una versi\u00f3n concreta de Python, s\u00f3lo es necesario reemplazar ${versi\u00f3n} por la versi\u00f3n de Python que queramos: 2, 3, 3.4, etc:\n${\nversi\u00f3n\n}", "subsections": []}, {"name": "Uso de servicio del alojamiento web", "text": "Pip es usado para soporte de Python en la nube, como por Heroku.", "subsections": []}, {"name": "V\u00e9ase tambi\u00e9n", "text": "PyPI", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abpyinstall is dead, long live\u00a0pip!\u00bb. www.ianbicking.org (en ingl\u00e9s). Consultado el 30 de diciembre de 2021.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio web oficial (en ingl\u00e9s)\nTutorial de pi", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Pit%C3%B3n", "title": "Pit\u00f3n", "summary": "Pit\u00f3n puede referirse a:\nPythonidae, familia de serpientes constrictoras.\nPython, g\u00e9nero de pitones.\nPit\u00f3n reticulada, serpiente m\u00e1s larga del mundo.\nPit\u00f3n, gran serpiente de la mitolog\u00eda griega.\nPit\u00f3n, ciudad del Antiguo Egipto mencionada en el libro de la Biblia del \u00c9xodo.\nPit\u00f3n volc\u00e1nico, resto de un volc\u00e1n erosionado.\nPit\u00f3n, alfarero griego del siglo\u00a0V\u00a0a.\u00a0C.\nPit\u00f3n, pintor griego del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, s\u00e1trapa de Media, del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, s\u00e1trapa de la India, del siglo\u00a0IV\u00a0a.\u00a0C.\nPit\u00f3n, cuerno de algunos animales.\nPit\u00f3n, pito o pitorro (en vasijas, regaderas, porrones, etc.)\nPython, lenguaje de programaci\u00f3n.\nPython, misil fabricado por Israel.\nEl nombre com\u00fan de la planta Agave americana.\nEl nombre com\u00fan de la planta Taraxacum officinale.\nPithon, poblaci\u00f3n y comuna francesa.", "sections": [{"name": "V\u00e9ase tambi\u00e9n", "text": "Pit\u00f3n de la Fournaise, volc\u00e1n activo de la isla de La Reuni\u00f3n\nPit\u00f3n de las Nieves, volc\u00e1n que es el punto m\u00e1s alto de la isla de La Reuni\u00f3n\nPiton de la Petite Rivi\u00e8re Noire, monta\u00f1a m\u00e1s alta de la isla de Mauricio", "subsections": []}]}
{"url": "https://es.wikipedia.org/wiki/Plone", "title": "Plone", "summary": "[\n]\nPlone es un sistema de gesti\u00f3n de contenidos que puede utilizarse para construir cualquier tipo de sitio web como portales, sitios webs corporativos, sitios web externos o internos, sitios de publicaci\u00f3n de noticias, incluyendo blogs, tiendas en l\u00ednea (E-commerce), como repositorio de documentos y herramienta colaborativa.[2]\u200b\nPlone es un desarrollo basado en c\u00f3digo abierto publicado bajo la GNU General Public License (GPL), basado en Zope y programado en Python. Los principales desarrollos son conducidos peri\u00f3dicamente durante reuniones especiales llamadas Plone Sprints. Adicionalmente est\u00e1 dise\u00f1ado para extender sus funcionalidades por defecto por medio de m\u00f3dulos adicionales llamados Products. Plone tambi\u00e9n tiene respaldo legal del Consejo de la Software Freedom Law Center. Los puntos fuertes de Plone son sus flujo de trabajo flexibles y adaptables, seguridad, extensibilidad, facilidad de uso y flexibilidad.[3]\u200b\nSeg\u00fan estudio efectuado por Real Story Group llamado 2012 Content Technology Vendor Map[4]\u200b  clasifican a Plone como un Document & Records Management, Sistema de gesti\u00f3n de contenidos y Gesti\u00f3n del conocimiento (Web Content & Experience Management), Software colaborativo y Software social (Collaboration & Social Software). Aparte de este estudio, existen publicaciones donde se ha analizado sus capacidades como Sistema de Gesti\u00f3n de Conocimiento.[5]\u200b\nDebido a la su capacidad de extender su funcionalidad por defecto basado en Productos, existe experiencias realizadas por proveedores de servicios de Plone donde frecuentemente han utilizado a Plone como CRM,[6]\u200b como un software GIS para  cartograf\u00eda en entornos web,[7]\u200b[8]\u200b entre otros usos, aun cuando Plone no fue dise\u00f1ado como tal para estas funcionalidades.", "sections": [{"name": "Historia", "text": "El proyecto Plone comenz\u00f3 en 1999 por Alan Runyan, Alexander Limi, y Vidar Andersen. Se hizo como una capa de usabilidad en la parte superior del Zope Content Management Framework. La primera versi\u00f3n (Plone 1.0) fue lanzada en 2001.[9]\u200b El proyecto se convirti\u00f3 r\u00e1pidamente en una comunidad, recibiendo un mont\u00f3n de nuevos productos complementarios de sus usuarios. El aumento de la comunidad condujo a la creaci\u00f3n de la conferencia anual de Plone en 2003,[10]\u200b que todav\u00eda se sigue realizando en la actualidad.[11]\u200b Adem\u00e1s, se llevan a cabo los llamados \"Sprints\", donde grupos de desarrolladores se re\u00fanen para trabajar en Plone, que van desde un par de d\u00edas a una semana.\nEn marzo de 2004, Plone 2.0 fue lanzado.[12]\u200b Esta versi\u00f3n trajo m\u00e1s caracter\u00edsticas personalizables a Plone, y ampliado las funciones add-on. En mayo de 2004, la Fundaci\u00f3n Plone fue creada. El 12 de marzo de 2007, Plone 3 fue lanzado.[13]\u200b Hasta septiembre de 2007, ha habido m\u00e1s de 200 desarrolladores que contribuyen al c\u00f3digo fuente de Plone alrededor del mundo.\nEsta nueva versi\u00f3n trajo la edici\u00f3n en l\u00ednea, el editor mejorado visual, y fortalecimiento de la seguridad, entre muchas otras mejoras. En septiembre de 2010 fue lanzado Plone 4.[14]\u200b Plone gan\u00f3 dos el reconocimiento del Packt Open Source CMS Awards.[15]\u200b", "subsections": [{"name": "Hist\u00f3rico de publicaciones", "text": "Las versiones estable de Plone est\u00e1n disponibles en https://plone.org/download/releases"}]}, {"name": "Fundaci\u00f3n Plone", "text": "En el 2004 se cre\u00f3 la Fundaci\u00f3n Plone con la misi\u00f3n de la fundaci\u00f3n es el de proteger y promover Plone. A pesar de que la fundaci\u00f3n fue creada para proteger los derechos de propiedad, Plone sigue siendo de c\u00f3digo abierto.[16]\u200b\nSus objetivos son:\nSer la propietaria de los c\u00f3digos fuentes, derechos de autor, marcas registradas y dominios en la Internet de Plone.\nProporcionar una estructura de toma de decisiones para las actividades esenciales de la comunidad.\nVelar porque, como crece Plone, sigue siendo un campo de juego nivelado.\nActuar como la voz de Plone para anuncios oficiales, comunicados de prensa y otras comunicaciones.\nAyude a crear material de promoci\u00f3n, entrevistas, discursos y otras actividades en el mercado Plone.\nEst\u00e1 conformada por 7 miembros en la Junta directiva, (eventualmente) 7 miembros asesores[17]\u200b y posee m\u00e1s de 120 miembros.", "subsections": []}, {"name": "Caracter\u00edsticas", "text": "Esta son algunas caracter\u00edsticas disponibles[18]\u200b en Plone 4:\nSoporte a HTML5.\nCumple con los est\u00e1ndares XHTML y CSS.\nCumple Accesibilidad.\nEnfocado a la usabilidad\nSoporte de canal RSS, y opcional v\u00eda producto adicional soporte a ATOM.\nEdici\u00f3n de las p\u00e1ginas en tiempo real y en contexto.\nOperaciones sobre el contenido como Cortar / Copiar / Pegar.\nReordenaci\u00f3n de los contenidos con Drag and drop.\nDiversos modo de presentaci\u00f3n de los contenidos.\nMotor de workflow integrado.\nConfiguraci\u00f3n del flujo de trabajo de forma localizada.\nSoporte a Copia de Trabajo, mas Workflows, aplicar y rechazar revisiones del documento.\nLa utilizaci\u00f3n adecuada de carpetas virtuales y \"flujos de trabajo\" le permiten adaptarse a m\u00faltiples funciones (por ejemplo, como CRM).\nComprobaci\u00f3n de la integridad de enlaces y referencias.\nBloqueo autom\u00e1tico y desbloqueo de documentos.\nSoporta comportamiento tipo Wiki.\nMecanismos de colaboraci\u00f3n en la construcci\u00f3n colectiva de contenidos.\nCompartir documentos de otros usuarios y otorgar permisos espec\u00edficos.\nAporte a discusiones y comentarios de cualquier tipo de contenido, opcional se integra con el servicio Disqus.\nGesti\u00f3n del hist\u00f3rico de reversiones de documento, con posibilidad de comparar versiones y la anulaci\u00f3n de cambios realizados.\nIndexaci\u00f3n completa de texto de documentos Word y PDF.\nColecciones / Carpetas inteligentes de los criterios de b\u00fasqueda definidos.\nNavegaci\u00f3n din\u00e1mica y un mapa del sitio din\u00e1mico en el archivo sitemaps.xml + \u00e1rboles contenido.\nSoporte para m\u00faltiples formatos de marcado.\nGeneraci\u00f3n de navegaci\u00f3n anterior / siguiente autom\u00e1ticamente.\nMotor de reglas de contenido.\nGeneraci\u00f3n autom\u00e1tica de tablas de contenido.\nMotor de Portlets.\nSoporte, desarrollo, hosting y capacitaci\u00f3n a trav\u00e9s de m\u00e1s de 300 de proveedores de servicios a nivel mundial.\nAltos niveles de seguridad.\nMotor de b\u00fasqueda integrado, indexaci\u00f3n en tiempo real (todo el contenido est\u00e1n indexados).\nLiveSearch en portlet.\nResultados en la p\u00e1gina de b\u00fasqueda se muestran din\u00e1micamente mostrado a medida que usted escribe.\nGesti\u00f3n de contenido multiling\u00fce.\nLocalizaci\u00f3n de la interfaz en modo nativo.\nPublicaci\u00f3n y caducidad de contenidos basada en fechas espec\u00edficas.\nDirecciones URL legibles por humanos.\nEditor gr\u00e1fico de p\u00e1ginas.\nReducci\u00f3n de tama\u00f1o de los recursos multimedia.\nModulable a trav\u00e9s de productos adicionales, evolutivo y f\u00e1cilmente personalizable.\nArquitectura abierta y escalable.\nAutenticaci\u00f3n del back-end a trav\u00e9s de PAS / LDAP / SSO / Auth_tkt.\nAdministraci\u00f3n de encabezados HTML para caching.\nIntegraci\u00f3n con proxy Cach\u00e9.\nExportaciones de archivos en formato XML con configuraciones de sitios.\nPlantillas ajustables en contenido.\nLos tipos de contenido est\u00e1ndar.\nEl contenido se formatean autom\u00e1ticamente para ser impreso.\nGeneraci\u00f3n de miniaturas y ampliaci\u00f3n autom\u00e1tica de las im\u00e1genes.\nSoporte a formatos de V\u00eddeo a trav\u00e9s Plumi.\nPaquetes de instalaci\u00f3n para m\u00faltiples plataformas.\nSoporta Microformatos.\nSoporta WebDAV[19]\u200b y FTP.[20]\u200b\nBrinda soporte de copia de seguridad.", "subsections": [{"name": "Filosof\u00eda del desarrollo", "text": "Art\u00edculo principal:\nPlone es construido sobre una arquitectura de componentes reutilizables. Numerosas extensiones que permiten desplegar los componentes de oficio espec\u00edficos.\nEl modelo de desarrollo de Plone (Zope en realidad) sigue un dise\u00f1o orientado a aspectos muy bien implementado. Esto posibilita que aspectos como la seguridad, la presentaci\u00f3n, la gesti\u00f3n de errores, workflow o transacciones sean tratados \"ortogonalmente\" sin estorbarse.\nEl sistema de plantillas utilizado para la capa de presentaci\u00f3n es tambi\u00e9n extraordinario, ya que le permite crear etiquetas propias de marcado como las conocidas taglibs."}, {"name": "Integraci\u00f3n a los sistemas heterog\u00e9neos", "text": "La integraci\u00f3n a los sistemas existentes es f\u00e1cil, ya sea la autentificaci\u00f3n (LDAP, SQL, sistema operativo), sobre el principio de la autentificaci\u00f3n \u00fanica del usuario, el usuario accede al conjunto de los servicios del sitio despu\u00e9s de su identificaci\u00f3n. El almacenamiento de los datos est\u00e1n definidos en una base de datos integrada o SGBD externa como  PostgreSQL, Oracle, MS SQL, Sybase, MySQL), entre otros."}, {"name": "Almacenamiento de datos", "text": "Gran parte del m\u00e9rito de Zope/Plone lo tuvo la arriesgada decisi\u00f3n de fundar los pilares de la aplicaci\u00f3n en una base de datos de objetos enlazados como la ZODB (en contraposici\u00f3n a una base de datos relacional). Esta decisi\u00f3n a largo plazo se mostr\u00f3 altamente acertada y permite un desarrollo mucho m\u00e1s natural ya que el modelo relacional falla cuando el esquema es \"difuso\", algo com\u00fan en un sistema documental donde el objeto base, el documento, no tiene un esquema s\u00f3lido y definido. Para que todo pueda funcionar en la pr\u00e1ctica se requer\u00eda sin embargo un sistema de indexaci\u00f3n muy potente para poder ejecutar b\u00fasquedas o recorrer la \"red de objetos\" r\u00e1pidamente."}, {"name": "Motor de B\u00fasqueda", "text": "El sistema de indexaci\u00f3n fue implementado de nuevo con gran \u00e9xito hasta el punto que el mismo permite hacer \"b\u00fasquedas en tiempo real\" a\u00fan en bases de datos con decenas de Gigabytes y crear carpetas inteligentes (b\u00fasquedas almacenadas que el usuario ve como una carpeta de contenido) con un tiempo de respuesta extremadamente r\u00e1pido (d\u00e9cimas de segundo en bases de datos de m\u00e1s de un gigabytes).[21]\u200b"}, {"name": "Instalaci\u00f3n y configuraci\u00f3n", "text": "La instalaci\u00f3n de Plone es f\u00e1cil por la independencia a cada sistema operativo (Linux, Windows, Mac OS X, BSD, Solaris). Su configuraci\u00f3n se hace sobre la base de scripts de pol\u00edticas de personalizaci\u00f3n.[22]\u200b"}, {"name": "Motor de Flujo de trabajo", "text": "El motor de Flujo de trabajo (workflow) reproduce los procesos burocr\u00e1ticos de su organizaci\u00f3n, permite que los documentos (incluyendo los usuarios) est\u00e9n basados en estados los cuales pueden disparar tipo de acciones."}, {"name": "Seguridad", "text": "Sobre la seguridad, Plone pone a disposici\u00f3n de los usuarios roles y grupos con mucha flexibilidad. Tambi\u00e9n es posible manejar localmente la seguridad y no solamente al nivel del conjunto del sistema. Es decir un usuario puede ser administrador de la zona \"/financiero\" al tiempo que s\u00f3lo es miembro restringido de \"/soporte\"."}, {"name": "Interfaz de Usuario", "text": "Plone se centra en el contenido (o documento) como unidad central de trabajo ofreciendo una alta productividad a sus usuarios, que no se ven distra\u00eddos por men\u00fas y barras de herramientas \"laber\u00ednticas\" como en herramientas ofim\u00e1ticas convencionales. El acento es puesto en una interfaz de usuarios agradable e intuitiva: numerosas pruebas de usabilidad fueron efectuadas para comprobar su eficacia.\nLa interfaz de Plone es compatible con los est\u00e1ndares de CSS y de XHTML. El uso intensivo de CSS permite beneficiar a una interfaz ligera. En nativo, cada p\u00e1gina del sitio es optimizada para la impresi\u00f3n. Tambi\u00e9n cada p\u00e1gina tiene su propio modo de visualizaci\u00f3n."}, {"name": "Lenguajes usados", "text": "Plone es principalmente desarrollado en Python. Se usan, adem\u00e1s, otros lenguajes en el proyecto.\nA continuaci\u00f3n una lista que resume los lenguajes usados en Plone, como esta aparece en el sitio de ohloh del proyecto Plone:\nPython 54%\nJavaScript 27%\nXML 12%\nOtros 7%\nEn la categor\u00eda de \"Otros\" se incluyen HTML, Perl, AWK, Make y otras m\u00e1s.[23]\u200b"}]}, {"name": "Comunidad", "text": "La comunidad alrededor de Plone tienen muchos actores que cumplen muchas funciones que a continuaci\u00f3n describimos:", "subsections": [{"name": "Desarrolladores", "text": "Para enero de 2013 cuenta con 441 desarrolladores de n\u00facleo de Plone en todo el mundo.[24]\u200b"}, {"name": "Soporte", "text": "Para enero de 2013 cuenta con soporte comercial por 377 proveedores de servicios en 123 pa\u00edses en todo el mundo,[25]\u200b adicionalmente ofrece otros medios de asistencia t\u00e9cnica por medio del Plone Support Center, que ofrece soporte v\u00eda chat IRC, soporte comunitario por medio de grupos activistas de Plone en tu regi\u00f3n y capacitaci\u00f3n ofrecida por los proveedores de servicios comercial."}, {"name": "Miembros de la Fundaci\u00f3n Plone", "text": "Para enero de 2013 cuenta con 125 miembros de la Fundaci\u00f3n,[26]\u200b si quieres formar parte de la Fundaci\u00f3n Plone puedes llenar su solicitud cumpliendo con los requerimientos necesarios."}, {"name": "Patrocinadores", "text": "Para enero de 2013 la Fundaci\u00f3n Plone posee m\u00e1s de 10[\u00bfcu\u00e1ntos?] patrocinadores que proporcionan apoyo monetario incluyendo Google, OpenID Foundation y Computer Associates.[27]\u200b"}, {"name": "Implementaciones", "text": "Para febrero de 2014 cuenta con 2382 sitios web[28]\u200b construido con Plone incluyendo:\nFBI\nCIA\nAmnist\u00eda Internacional\nGobierno de Brasil\nDiscover Magazine\nNASA\nNokia\nLa Free Software Foundation\nUniversidad de Yale"}, {"name": "Productos / Addons / M\u00f3dulos", "text": "La comunidad soporta y distribuye miles de m\u00f3dulos v\u00eda sitios web de proveedores de servicios pero la mayor\u00eda est\u00e1n en el PYPI y www.plone.org. Los cantidad de paquetes publicados hasta la fecha de febrero de 2014 son de 2727 v\u00eda PYPI para personalizar Plone.[29]\u200b"}]}, {"name": "Distribuciones basadas en Plone", "text": "Una distribuci\u00f3n Plone consiste en un paquete de diferentes productos configurados previamente y / o modificados y que dan soluci\u00f3n a una necesidad espec\u00edfica. La ventaja de trabajar con distribuciones es la facilidad en tener una soluci\u00f3n completa funcionando en poco tiempo y poder seguir contando con la flexibilidad de Plone que permite agregar nuevos productos y reconfigurar los existentes a la medida, en diferentes \u00e1reas como las que a continuaci\u00f3n se en listan:", "subsections": [{"name": "Gobierno electr\u00f3nico", "text": "Project Portfolio Manager (PPM), es una aplicativo para cualquier organizaci\u00f3n que desee un framework para administraci\u00f3n de proyectos y propuestas de estos mismos, inicialmente desarrollado por la comunidad PloneGov Open eGov de EUA, actualmente el desarrollo es mantenido por la fundaci\u00f3n Cenditel de Venezuela.\nGesti\u00f3n de discusiones con PloneMeeting, una soluci\u00f3n para gesti\u00f3n de reuniones, decisiones de las mismas para el sector de gobierno, desarrollada por la comunidad PloneGov CommunesPlone de B\u00e9lgica. Dispone un sitio demostrativo para comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n.\nPloneTask, una soluci\u00f3n para asignaci\u00f3n y gesti\u00f3n de tareas, que se puede integrar perfectamente con PloneMeeting para el seguimiento de las decisiones tomadas a trav\u00e9s de PloneMeeting, decisiones de las mismas para el sector de gobierno, desarrollada por la comunidad PloneGov CommunesPlone de B\u00e9lgica."}, {"name": "Intranet / Enterprise 2.0", "text": "Ploomcake, una distribuci\u00f3n de Plone para escenarios diferentes como sitios web de noticias, portal de colaboraci\u00f3n, intranets, etc. Dispone el c\u00f3digo fuente en Github, para estudiar y comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n.\nCyn.in, una plataforma de trabajo grupal alternativa a SharePoint de Microsoft. Dispone el c\u00f3digo fuente en Github, para estudiar y comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n.\nOpenCore Software, Es una l\u00ednea de base com\u00fan de herramientas de colaboraci\u00f3n para ayudar a los grupos de trabajo colectivo, incluidos los espacios de colaboraci\u00f3n con los wikis, las listas de correo a trav\u00e9s de Listen que integra la administraci\u00f3n de este servicio como un foro de discusi\u00f3n, bit\u00e1coras en l\u00ednea a trav\u00e9s de Deliverance y el sistema de Blog Wordpress y herramientas de gesti\u00f3n del equipo de trabajo y de sus roles. Dispone un servicio gratuito para usarlo para comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n."}, {"name": "Educaci\u00f3n / E-learning", "text": "PloneEdu, comunidad que ofrece una serie de productos que permiten crear sitios web para centros educativos en Plone. Dispone de instrucciones de como construir un sitios modelo para comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n.\nEduCommons, una plataforma exclusiva a gesti\u00f3n de contenidos de aprendizaje OpenCourseWare para ofrecer los contenidos de las clases presenciales o a distancia alternativa el movimiento OWC en Plone. Dispone un sitio demostrativo para comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n.\nEduComponents, una plataforma de acompa\u00f1amiento y seguimientos estudiantil para clases presenciales y a distancia alternativa a un LMS en Plone como Moodle. Dispone un sitio demostrativo para comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n."}, {"name": "Comercio electr\u00f3nico", "text": "Open Tiendas, una plataforma de comercio electr\u00f3nico basada en Plone."}, {"name": "Artistas / Web 2.0", "text": "Plumi, una plataforma que permite a los usuarios crear una sitio de intercambio de v\u00eddeo como alternativas no comerciales, de c\u00f3digo abierto a los sitios de v\u00eddeo comerciales como YouTube. Dispone un sitio demostrativo para comprender las capacidades t\u00e9cnicas de esta distribuci\u00f3n.\nPlone4Artists, una plataforma que permite la creaci\u00f3n de sitios Web para artistas musicales, alternativa a MySpace."}, {"name": "Dispositivos M\u00f3viles", "text": "gomobile, una alternativa para hacer accesible Plone desde dispositivos m\u00f3viles.\nResponsive theme for Plone, existe una serie de temas que son responsable con soporte a diversos dispositivos m\u00f3viles en Plone."}]}, {"name": "V\u00e9ase tambi\u00e9n", "text": "C\u00f3digo abierto.\nSoftware libre.\nPython.\nZope.\nSistema de gesti\u00f3n de contenidos.\n Wikimedia Commons alberga una categor\u00eda multimedia sobre Plone.", "subsections": []}, {"name": "Referencias", "text": "\u2191 \u00abPlone  \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Consultado el 29 de agosto de 2020.\u00a0\n\u2191 Allende, Roberto (Octubre de 2006). Desarrollos de Portales y Extranet con Plone (Presentaci\u00f3n PDF). Menttes. Consultado el 28 de enero de 2014.\u00a0\n\u2191 Berrocal,Figuerola, and Zazo, G\u00f3mez (2008). \u00abSoftware libre y software gratuito para la innovaci\u00f3n docente y la creaci\u00f3n de contenidos orientados al EEES\u00bb. La adaptaci\u00f3n al Espacio Europeo de Educaci\u00f3n Superior en la Facultad de Traducci\u00f3n y Documentaci\u00f3n. Ediciones Universidad de Salamanca. Consultado el 27 de noviembre de 2019.\u00a0\n\u2191 Real Story Group (13 de enero de 2011). \u00abVendor Map from The Real Story Group (formerly CMS Watch)\u00bb (PDF) (en ingl\u00e9s). Boston, MA, USA: Real Story Group. p.\u00a0http://www.realstorygroup.com. Archivado desde el original el 16 de enero de 2013. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Zhou, Chuanhong; Zeng Huilan (2006). Knowledge Enterprise: Intelligent Strategies in Product Design, Manufacturing, and Management - Enterprise Knowledge Management Based on Plone Content Management System. IFIP Advances in Information and Communication Technology (en ingl\u00e9s) 207. Springer US. pp.\u00a0115-120. ISSN\u00a01571-5736. Consultado el 21 de enero de 2013.\u00a0\n\u2191 Franco Pellegrini (24 de noviembre de 2010). \u00abCMS + CRM: Integrando Plone y Salesforce\u00bb (PDF). Menttes. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Borelli, Giorgio (11 de octubre de 2012). Giorgio Borelli: Where is my content? Geo-referencing content types in Plone with collective.geo - YouTube. Plone Conference 2012. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Brehault, Eric (11 de octubre de 2012). de enero de 2013 Eric Brehault: I want a nice map! - YouTube. Plone Conference 2012.\u00a0\n\u2191 Alex Limi (31 de enero de 2003). \u00abPlone 1.0 release! \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 26 de julio de 2014. Consultado el 24 de enero de 2013.\u00a0\n\u2191 \u00abPlone Conference 1 \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Consultado el 24 de enero de 2013.\u00a0\n\u2191 \u00abPlone Conference 2013: Call for Proposals \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Consultado el 24 de enero de 2013.\u00a0\n\u2191 William Deegan (23 de marzo de 2004). \u00abPlone 2.0 \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 20 de enero de 2013. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Alex Limi (3 de enero de 2009). \u00abPlone 3.0 released! \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 24 de junio de 2013. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Mark Corum (1 de septiembre de 2010). \u00abPlone 4 CMS Unveiled: Advancing Power, Performance & User Experience \u2014 Plone CMS:- Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 9 de marzo de 2012. Consultado el 24 de enero de 2013.\u00a0\n\u2191 \u00abOpen Source Awards Previous Winners | Packt Publishing\u00bb (en ingl\u00e9s). Packt Publishing. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Joel Burton (3 de enero de 2009). \u00abPlone Foundation FAQs \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Paul Roeland (17 de enero de 2013). \u00abPlone Foundation Board for 2012-2013 \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Consultado el 24 de enero de 2013.\u00a0\n\u2191 Jon Stahl (2 de septiembre de 2010). \u00abWhat\u2019s New in Plone 4 \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 18 de octubre de 2012. Consultado el 23 de enero de 2013.\u00a0\n\u2191 Caballero G., Leonardo J. (17 de diciembre de 2012). Configurar Zope como un servidor WebDAV. Plone Venezuela. Archivado desde el original el 30 de diciembre de 2013. Consultado el 29 de diciembre de 2013.\u00a0\n\u2191 Caballero G., Leonardo J. (17 de diciembre de 2012). Configurar Zope como un servidor FTP. Plone Venezuela. Archivado desde el original el 30 de diciembre de 2013. Consultado el 29 de diciembre de 2013.\u00a0\n\u2191 Jon Stahl (31 de agosto de 2010). \u00abMassively improved handling of large files & media \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 21 de enero de 2013. Consultado el 24 de enero de 2013.\u00a0\n\u2191 De la Guardia, Carlos; Leonardo J. Caballero G. (17 de diciembre de 2012). \u00abCreaci\u00f3n de un producto de configuraci\u00f3n\u00bb. Plone Venezuela. Archivado desde el original el 30 de diciembre de 2013. Consultado el 29 de diciembre de 2013.\u00a0 La referencia utiliza el par\u00e1metro obsoleto |coautores= (ayuda)\n\u2191 \u00abThe Plone Open Source Project on Ohloh\u00bb (en ingl\u00e9s). Ohloh.net. 24 de enero de 2013. Consultado el 24 de enero de 2013.\u00a0\n\u2191 \u00abPlone Plone Developers: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 20 de enero de 2013. Consultado el 20 de enero de 2013.\u00a0\n\u2191 \u00abPlone Service Providers \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 10 de febrero de 2014. Consultado el 28 de febrero de 2014.\u00a0\n\u2191 Andrei, \u00c9rico (31 de octubre de 2012). Gesti\u00f3n de Contenido con Plone. p.\u00a010. Consultado el 20 de enero de 2013.\u00a0\n\u2191 \u00abPlone Foundation Sponsors and Donors \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Consultado el 20 de enero de 2013.\u00a0\n\u2191 \u00abPlone Sites \u2014 Plone CMS: Open Source Content Management\u00bb (en ingl\u00e9s). Plone.org. Archivado desde el original el 9 de febrero de 2014. Consultado el 28 de febrero de 2014.\u00a0\n\u2191 \u00abBrowse\u00a0: Python Package Index\u00bb (en ingl\u00e9s). Pypi.python.org. Consultado el 28 de febrero de 2014.\u00a0", "subsections": []}, {"name": "Enlaces externos", "text": "Sitio oficial comercial de Plone (en Ingl\u00e9s).\nSitio oficial de Plone (en Ingl\u00e9s).\nSitio web demostrativo de Plone (en Ingl\u00e9s).\nDirectorio de proveedores de servicios, casos de estudios, y elementos de noticias relacionadas con Plone (en Ingl\u00e9s).\nGu\u00eda definitiva de Plone en pdf (en Ingl\u00e9s).\nThe Plone Book (en Ingl\u00e9s).\nDocumentaci\u00f3n oficial de Plone en Espa\u00f1ol (en Espa\u00f1ol).\nPlone Venezuela, comunidad de usuarios de Plone para Venezuela (en Espa\u00f1ol).\nPlone en Espa\u00f1ol, sitio web de las comunidades de Espa\u00f1a y de los pa\u00edses de habla hispana (en Espa\u00f1ol).\nPlone Cono Sur, comunidad de usuarios de Plone para el Cono Sur (enlace roto disponible en Internet Archive; v\u00e9ase el historial, la primera versi\u00f3n y la \u00faltima). (en Espa\u00f1ol).\nPlone Chile, comunidad de usuarios de Plone para Chile (en Espa\u00f1ol).\nPlone M\u00e9xico, comunidad de usuarios de Plone para M\u00e9xico (en Espa\u00f1ol).\nIntroducci\u00f3n a Plone, un Screencast (en Ingl\u00e9s).\nDesarrollos de Portales y Extranet con Plone - Qu\u00e9 es, introducci\u00f3n y estudios de casos (en Espa\u00f1ol).\nPlone en entornos Gubernamentales (en Espa\u00f1ol).\nManual de usuario de Plone en castellano (en Espa\u00f1ol)", "subsections": []}]}
